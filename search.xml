<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《机器学习》课程笔记汇总</title>
      <link href="/posts/5b80d779/"/>
      <url>/posts/5b80d779/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="机器学习大纲">机器学习大纲</h2><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056970.png" alt=""></p><h2 id="什么是机器学习">什么是机器学习</h2><p>机器学习是一种通过数据和算法使计算机系统能够自动改进其性能的技术。机器利用已给数据和学习算法来得到一个程序，而不是利用程序来接受输入产生输出。</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056968.png" alt=""></p><p>本质上都是数据驱动学习，但是可以细分为以下四类：</p><ul><li>监督学习：标签驱动，学习特征和标签，目标是在新的特征上准确预测输出，如分类任务、判断任务、检测任务、回归任务</li><li>无监督学习：关系驱动，学习数据内部之间的关系和规律，目标是得到数据的结构信息，如聚类任务、降维任务</li><li>强化学习：环境驱动，学习环境信息，目标是得到最优策略和最大化累计奖励，如自动控制、游戏智能</li><li>数据挖掘：价值驱动，学习海量数据，目标是总结数据价值和模式，如自然语言处理，相似性搜索、推荐系统</li></ul><h2 id="线性回归">线性回归</h2><h3 id="回归">回归</h3><p>回归是根据已有特征，预测输出；数学来说，就是根据一组输入，学习方程，来得到预测输出</p><p>线性回归：上述方程是线性表达式，也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>w</mi><mi>m</mi></msub><msub><mi>x</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">f(x) = w_0 + w_1x_1 + ... + w_mx_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 是模型参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 是数据维度</p><p>线性回归任务就是找到最合适的模型参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，使得模型预测的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{pred}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 能够尽可能真实值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{true}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，也就是说让误差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow></msub><mo>−</mo><msub><mi>y</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{true}-y_{pred}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>尽可能小</p><h3 id="单特征">单特征</h3><p>线性回归表示为<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056971.png" alt=""></p><p>可以利用均方误差度量误差<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056972.png" alt=""></p><p>令误差梯度=0，即表示此时误差已经是最小值，就可以得到最优参数<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056973.png" alt=""></p><h3 id="多特征">多特征</h3><p>线性回归表示为<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056974.png" alt=""></p><p>利用向量可以表示为<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056975.png" alt=""></p><p>因此再次利用均方误差度量误差，写成向量形式，并用范数表示<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056976.png" alt=""></p><p>令误差梯度=0，即表示此时误差已经是最小值，就可以得到最优参数<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056977.png" alt=""></p><p>最优参数的几何解释：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">Xw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span></span></span></span>的本质是向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>的列向量张成的一个空间，要在这个空间上找到一个向量，使得其尽可能靠近<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>不在该列空间上，所以我们要让<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">Xw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span></span></span></span>尽可能接近<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>$在列空间的投影<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056978.png" alt=""></p><h3 id="梯度下降">梯度下降</h3><p>梯度：是函数沿着最快方向的变化速率，如果梯度是9，那么自变量改变0.1，因变量就会改变0.9</p><p>通常情况下，无法求闭式解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，或者求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>的代价太大，也就是做不到一次性得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，因此可以通过迭代的方法，不断优化<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，经过大量迭代次数后使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>趋近于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056979.png" alt=""></p><p>如果不设置学习率，优化过程会失去对步长的控制，只能简单地沿着梯度方向变化一个单位长度。学习率实际上可以被视为一种缩放因子，它控制了参数更新的步长和程度。如果学习率过小，参数每次更新的步长都很短，导致下降过程非常缓慢，需要进行大量的迭代才能接近最优解。如果学习率过大，更新步长会非常大，这可能导致参数跳过最优点，甚至让损失函数值反复波动，无法收敛到正确的结果。</p><p>在处理大规模数据集时，计算整个数据集的梯度成本非常高。此时，可以将数据随机分成多个小批次，然后依次对每个批次计算梯度并更新参数，这样可以显著降低了计算复杂度。如果批次太小，每次计算的梯度可能会偏离真实梯度，导致优化过程不够稳定。如果批次太大，则失去了效率优势。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056980.png" alt=""></p><h2 id="线性分类">线性分类</h2><h3 id="二分类">二分类</h3><p>相比于线性回归，区别最大的在于标签值是固定的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">y \in {0,1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span></span></span></span></span>，因此标签值无法用特征值的线性组合直接表示，因此我们需要一个激活函数，它用于将线性组合值从[-∞,+∞]映射到[0,1]，从而实现分类。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056981.png" alt=""></p><p>此时误差我们就认为是激活函数的输出与实际标签0/1的差异，但是这里使用 MSE 会导致梯度计算过于复杂，参数更新速度过慢的问题。为此我们考虑利用 log 函数</p><ol><li>log 函数的导数就是自变量的倒数，极其简单</li><li>log 函数是凸函数，即梯度保持最优参数方向</li><li>log 函数具有突变性，即当预测值和真实值相差较大时，log 函数会给出非常大的损失值</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056982.png" alt=""></p><p>考虑如下格式，如果真实分类结果是1，我们希望激活函数的输出越接近于1，那么误差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mi>w</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">-log(\sigma(xw))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">))</span></span></span></span>的值就越接近于0，如果真实分类结果是0，我们希望激活函数的输出越接近于0，那么误差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mi>w</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">-log(1-\sigma(xw))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">))</span></span></span></span>的值就越接近于0<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056983.png" alt=""></p><p>实际上，我们可以避免使用判断语句，而是利用数学特征来优化，得到如下式子，也就是交叉熵损失。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056984.png" alt=""></p><p>通过链式法则可以发现，梯度就是等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mi>w</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow></msub><mo stretchy="false">)</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">(\sigma(xw)-y_{true})x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">x</span></span></span></span>，这比 MSE 简单太多了！<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056985.png" alt=""></p><p>我们可以根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">xw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>是否大于0来确定预测值，也根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>x</mi><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma(xw)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>是否大于0.5来确定预测值，这样得到的决策平面就是线性超平面。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056986.png" alt=""></p><h3 id="多分类">多分类</h3><p>方法一：训练 K 个二分类器，每个分类器属于对应类别的预测得分，选择得分最高的分类器对应的类别作为最终预测<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056987.png" alt=""></p><p>方法二：引入 Softmax 函数和矩阵运算来集成分类的整个过程。构造一个参数矩阵 W ，其中每一列参数向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">W_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对应于一个类别的分类器。这种方式将原本需要训练多个分类器的任务整合为一次训练，通过矩阵运算统一计算所有类别的预测得分。然后再利用 Softmax 函数将多个二分类器的预测得分汇总到一起，最终输出一个对所有类别的概率分布<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056988.png" alt=""></p><p>可以发现，当类别为2的时候，利用 softmax 得到的结果和之前是一样的。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056989.png" alt=""></p><p>如果我们将预测标签变为独热编码，通过链式法则推导，梯度跟二分类几乎是完全一样，形式十分简单。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056990.png" alt=""></p><h2 id="概率角度分析回归和分类">概率角度分析回归和分类</h2><p>概率视角：关注给定x预测得到y的概率是多少，即求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，通过建模概率分布，得到预测值就是概率分布的均值</p><p>回归可以看作成是高斯分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo separator="true">;</mo><mi mathvariant="bold">w</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">;</mo><mi mathvariant="bold">x</mi><mi mathvariant="bold">w</mi><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y|\mathbf{x}; \mathbf{w}) = \mathcal{N}(y; \mathbf{x}\mathbf{w}, \sigma^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf" style="margin-right:0.01597em;">xw</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>分类可以看作为是伯努利分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mi mathvariant="bold">w</mi><msup><mo stretchy="false">)</mo><mi>y</mi></msup><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mi mathvariant="bold">w</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">p(y|\mathbf{x}) = \sigma(\mathbf{x}\mathbf{w})^y \cdot (1 - \sigma(\mathbf{x}\mathbf{w}))^{1-y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathbf" style="margin-right:0.01597em;">xw</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathbf" style="margin-right:0.01597em;">xw</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于概率分布，最小化损失函数等价于最大化对数似然，因为本质上都是让预测值尽可能接近真实值，在概率分布中，就是让条件概率尽可能大。</p><p>然而在计算联合概率的时候，概率都是浮点数，且存在较小值，概率的连乘会导致复杂计算，因此对其取对数，则可转化为对数的加法，大大简化了计算，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log p(y_1, y_2, \dots, y_N | x_1, x_2, \dots, x_N; \theta) = \sum_{i=1}^N \log p(y_i | x_i; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></p><p>为了统一，我们可以将损失函数定义为负对数似然，那么优化目标就变成了利用梯度下降最小化损失函数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\theta) = -\log p(y|\mathbf{x}; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></p><h2 id="泛化能力">泛化能力</h2><h3 id="基函数">基函数</h3><p>可以利用基函数将特征进行非线性变换，从而将数据从低维线性空间扩展到高维非线性空间，比如进行多项式扩展<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>x</mi><mn>2</mn></msup><mo separator="true">,</mo><msup><mi>x</mi><mn>3</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">x \to [x, x^2, x^3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p><p>变换后的模型对特征 x 是非线性的，但对模型参数 w 仍是线性的<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056991.png" alt=""></p><h3 id="过拟合">过拟合</h3><p>当模型过于复杂，虽然训练数据拟合得很好，但在测试数据上表现可能很差。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056992.png" alt=""></p><p>通常来说，模型的复杂度和泛化能力之间存在平衡，即当模型复杂度超过一定程度时，模型复杂度越高，泛化能力越低。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056993.png" alt=""></p><h3 id="模型评估">模型评估</h3><p>将原始数据集划分一部分作为测试集，然后选择在测试集上表现最好的模型。然而有时候数据集大小有限，我们需要使用K-折交叉验证充分利用数据，也就是将数据分为 K 份，轮流用 K-1 份训练，剩下 1 份验证，最后取平均性能，作为模型总性能。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056994.png" alt=""></p><h3 id="信息准则">信息准则</h3><p>适用于概率模型，用于平衡模型复杂度和数据拟合度选择模型，其中 M 是模型参数数量，L 是模型的对数似然，N是数据样本数量。</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>I</mi><mi>C</mi><mo>=</mo><mn>2</mn><mi>M</mi><mo>−</mo><mn>2</mn><mi>log</mi><mo>⁡</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">AIC = 2M - 2\log L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>I</mi><mi>C</mi><mo>=</mo><mi>M</mi><mi>log</mi><mo>⁡</mo><mi>N</mi><mo>−</mo><mn>2</mn><mi>log</mi><mo>⁡</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">BIC = M \log N - 2\log L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span></span></span></span></li></ul><p>信息准则的值越小越好，就要求 M 不要过大，同时 L 也不能过小。BIC通过乘上一个系数，加大了模型复杂度提高的惩罚。</p><h3 id="正则化">正则化</h3><p>本质是利用损失函数来降低模型复杂度，即在损失函数中加上一个参数项，目标是在拟合训练数据的同时抑制模型复杂度提高。</p><ul><li>L2正则化，在损失函数中加上参数的平方和：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><mi mathvariant="normal">∥</mi><mi>w</mi><msubsup><mi mathvariant="normal">∥</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Q(w) = L(w) + \lambda \|w\|_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord">∥</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>，适合缩小参数的大小</li><li>L1正则化，在损失函数中加上参数的绝对值和：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><mi mathvariant="normal">∥</mi><mi>w</mi><msubsup><mi mathvariant="normal">∥</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Q(w) = L(w) + \lambda \|w\|_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord">∥</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span>，适合减少参数的数量</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056995.png" alt=""></p><h2 id="支持向量机">支持向量机</h2><h3 id="最大间隔分类器">最大间隔分类器</h3><p>支持向量机的特殊之处在于，它不仅仅是找到一个超平面能分割样本点，还计算样本点到超平面的最短距离，然后最大化这个最短距离，亦即最大化数据点和超平面的间隔，数学表示就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>maximize: </mtext><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∥</mi><mi mathvariant="bold">w</mi><mi mathvariant="normal">∥</mi></mrow></mfrac><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>i</mi></msub><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mi>T</mi></msup><msub><mi mathvariant="bold">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{maximize: } \frac{1}{\|\mathbf{w}\|} \min_{i} y_i (\mathbf{w}^T \mathbf{x}_i + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3651em;vertical-align:-0.52em;"></span><span class="mord text"><span class="mord">maximize: </span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span><span class="mord mtight">∥</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056996.png" alt=""></p><p>上述数学公式可以转化为优化问题：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∥</mi><mi mathvariant="bold">w</mi><msup><mi mathvariant="normal">∥</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\min_{\mathbf{w}, b} \frac{1}{2} \|\mathbf{w}\|^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∥</span><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，其中约束条件是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mi>T</mi></msup><msub><mi mathvariant="bold">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>≥</mo><mn>1</mn><mo separator="true">,</mo><mspace width="1em"/><mi mathvariant="normal">∀</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">y_i (\mathbf{w}^T \mathbf{x}_i + b) \geq 1, \quad \forall i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∀</span><span class="mord mathnormal">i</span></span></span></span></p><p>数据可能不是线性可分的，我们可以采取两种方式解决</p><h3 id="软间隔">软间隔</h3><p>上述使用的间隔是所有数据点到超平面距离中最小的一个，也称为硬间隔，假设所有数据点都可以被完美分离，即没有误分类。而软间隔就是引入了松弛变量，允许一些点被错误分类，同时在优化目标中加入松弛变量，用于在最大化间隔和最少分类错误之间找到平衡。</p><p>转变为优化问题：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi mathvariant="bold">w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>ξ</mi></mrow></msub><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∥</mi><mi mathvariant="bold">w</mi><msup><mi mathvariant="normal">∥</mi><mn>2</mn></msup><mo>+</mo><mi>C</mi><msub><mo>∑</mo><mi>i</mi></msub><msub><mi>ξ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\min_{\mathbf{w}, b, \xi} \frac{1}{2} \|\mathbf{w}\|^2 + C \sum_{i} \xi_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.04601em;">ξ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∥</span><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.046em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，约束条件是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msup><mi mathvariant="bold">w</mi><mi>T</mi></msup><msub><mi mathvariant="bold">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>≥</mo><mn>1</mn><mo>−</mo><msub><mi>ξ</mi><mi>i</mi></msub><mo separator="true">,</mo><mspace width="1em"/><msub><mi>ξ</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y_i (\mathbf{w}^T \mathbf{x}_i + b) \geq 1 - \xi_i, \quad \xi_i \geq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.046em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.046em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056997.png" alt=""></p><p>需要注意的是，软间隔只是在一定程度上缓解线性不可分，它实际上还是用了线性超平面。</p><h3 id="核函数">核函数</h3><p>如果数据在二维空间无法分开，我们可以将它们“提升”到更高维度，就是将数据映射到更高维的特征空间，使用核函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="bold">x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(\mathbf{x}_i, \mathbf{x}_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>$替代显式的特征映射，简化计算</p><h3 id="支持向量">支持向量</h3><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi>y</mi><mo>⋅</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>y</mi><mo>⋅</mo><msup><mi mathvariant="bold">w</mi><mi>T</mi></msup><mi mathvariant="bold">x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z = y \cdot h(x) = y \cdot \mathbf{w}^T \mathbf{x} + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathbf">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>理想损失：它在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z \geq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时损失为零，表示分类正确且满足分类间隔；在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z &lt; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时损失为无穷大，表示分类错误且完全不可接受</p><p>对数损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mtext>LR</mtext></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_{\text{LR}}(z) = \log(1 + \exp(-z))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">LR</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">))</span></span></span></span>：当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">z &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时，损失随 z 的增大指数性减小；当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>≤</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">z \leq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时，损失随 z 的减小迅速增大</p><p>hinge损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mtext>SV</mtext></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_{\text{SV}}(z) = \max(0, 1 - z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">SV</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>：当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z \geq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，损失为零，表示分类正确且满足间隔要求；当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z &lt; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，损失为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">1 - z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>，表示分类错误或未达到分类间隔</p><p>可以看出，支持向量机只对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z &lt;= 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的向量惩罚，这些向量是落在分类边界或间隔边界上的点，被称为支持向量，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z \geq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的非支持向量位于间隔边界外，不影响分类边界的位置或者影响很小。</p><h2 id="神经网络">神经网络</h2><p>忽略</p><h2 id="训练技巧">训练技巧</h2><h3 id="优化算法">优化算法</h3><p>SGD：随机抽样，只用部分数据来计算梯度，减小计算复杂度，但是收敛速度慢，容易陷入局部最优</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo>−</mo><mi>l</mi><mi>r</mi><mo>⋅</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbf{w}_{t+1} = \mathbf{w}_t - lr \cdot \nabla f(\mathbf{w}_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6528em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>SGD + Momentum：在SGD的基础上，引入“动量”将历史梯度也考虑进来，加速收敛</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">v</mi><mi>t</mi></msub><mo>=</mo><mi>ρ</mi><msub><mi mathvariant="bold">v</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi mathvariant="bold">w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo>−</mo><mi>l</mi><mi>r</mi><mo>⋅</mo><msub><mi mathvariant="bold">v</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{v}_t = \rho \mathbf{v}_{t-1} + \nabla f(\mathbf{w}_t)\\\mathbf{w}_{t+1} = \mathbf{w}_t - lr \cdot \mathbf{v}_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord mathnormal">ρ</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6528em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>RMSProp：在SGD的基础上，加权平均梯度平方，动态调整学习率，解决不同维度梯度尺度不一致的问题</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">s</mi><mi>t</mi></msub><mo>=</mo><mi>ρ</mi><msub><mi mathvariant="bold">s</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>ρ</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mspace linebreak="newline"></mspace><msub><mi>w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><mfrac><mrow><mi>l</mi><mi>r</mi></mrow><msqrt><msub><mi>s</mi><mi>t</mi></msub></msqrt></mfrac><mo>⋅</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbf{s}_t = \rho \mathbf{s}_{t-1} + (1 - \rho) (\nabla f(\mathbf{w}_t))^2\\w_{t+1} = w_t - \frac{lr}{\sqrt{s_t}} \cdot \nabla f(\mathbf{w}_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord mathnormal">ρ</span><span class="mord"><span class="mord mathbf">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ρ</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.3722em;vertical-align:-1.0007em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7253em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6853em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0007em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>Adam：综合了Momentum和RMSProp的优点，既引入历史梯度，又动态调整学习率</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>1</mn></msub><msub><mi mathvariant="bold">m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi mathvariant="bold">s</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>2</mn></msub><msub><mi mathvariant="bold">s</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mspace linebreak="newline"></mspace><msub><mi mathvariant="bold">w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi mathvariant="bold">w</mi><mi>t</mi></msub><mo>−</mo><mfrac><mrow><mi>l</mi><mi>r</mi></mrow><msqrt><msub><mi mathvariant="bold">s</mi><mi>t</mi></msub></msqrt></mfrac><mo>⋅</mo><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{m}_t = \beta_1 \mathbf{m}_{t-1} + (1 - \beta_1)\nabla f(\mathbf{w}_t)\\\mathbf{s}_t = \beta_2 \mathbf{s}_{t-1} + (1 - \beta_2)(\nabla f(\mathbf{w}_t))^2\\\mathbf{w}_{t+1} = \mathbf{w}_t - \frac{lr}{\sqrt{\mathbf{s}_t}} \cdot \mathbf{m}_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6528em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.016em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.3652em;vertical-align:-0.9938em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7322em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathbf">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.6922em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3078em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9938em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h3 id="预处理">预处理</h3><p>预处理：在特征尺度差异较大的情况下，提升优化过程中的梯度收敛速度</p><ul><li>居中化：减去均值，使数据分布以零为中心</li><li>标准化：标准化方差，使每个特征的范围一致</li><li>白化：使数据具有单位协方差矩阵，消除特征之间的相关性</li></ul><blockquote><p>只在一开始对整个数据进行一次预处理很复杂，可以对每次对每批数据进行预处理</p></blockquote><h3 id="初始化权重">初始化权重</h3><p>对于浅层网络，使用高斯分布初始化权重，这样能够更好地配合激活函数：打破对称性，使每个神经元学习到不同的特征，配合激活函数，避免梯度消失或梯度爆炸</p><p>对于深层网络，可以根据前一层神经元数量调整高斯分布的方差：控制输出范围与输入范围匹配，从而获得稳定的梯度传播</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056999.png" alt=""></p><h3 id="Dropout">Dropout</h3><p>训练阶段：按照概率p，随机丢弃一定比例的神经元</p><ul><li>防止过拟合，适当降低模型复杂度，增强泛化能力</li><li>模拟集成学习，相当于在训练多个子网络</li></ul><p>测试阶段：将每个神经元的输出乘上1-p，按比例缩小神经元输出</p><ul><li>因为神经元以概率1-p被保留，保持期望输出的一致性</li><li>测试必须稳定，不能随意丢弃神经元</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056000.png" alt=""></p><h3 id="超参数调优">超参数调优</h3><p>超参数是需要在训练之前设置的参数，它们不会在模型训练过程中更新，比如学习率、批次大小、dropout比例、隐藏层数目、神经元数量等</p><p>数据集划分：在训练集上训练模型，在验证集上调整超参数，在测试集上评估最终性能<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056001.png" alt=""></p><p>网格搜索（Grid Search）：枚举所有可能的参数的排列组合，通过交叉验证评估每个组合的性能，从而学习最佳超参数。</p><h2 id="决策树">决策树</h2><h3 id="概述">概述</h3><p>决策树：适用于有标签的分类任务，通过递归地选择特征属性，将数据集划分为子集，最终将数据分类到不同的类别中<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056002.png" alt=""><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056003.png" alt=""></p><p>结构</p><ul><li>内部节点：属性</li><li>边：属性的取值</li><li>叶节点：分类结果</li><li>分支：根据节点属性和边的取值对数据集进行划分</li><li>路径：决策依据和决策结果，可以看作为一系列if-else的规则集合</li></ul><h3 id="如何选择划分属性？">如何选择划分属性？</h3><p>熵：是一种用来衡量目标变量不确定性的度量，熵值越大，说明数据集的分类结果越混乱、不稳定</p><p>分类目标：每次划分数据时的目标是找到一个属性，使得划分后的子数据集尽可能纯净，即能够最大程度地降低数据集的熵</p><p>在决策树中，目标变量是标签</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(Z) = -\sum_{i=1}^{n} p_i \log(p_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>条件熵：在属性Y被用作划分后标签的熵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>Z</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>y</mi><mo>∈</mo><mi>Y</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mi>y</mi><mo stretchy="false">)</mo><mi>H</mi><mo stretchy="false">(</mo><mi>Z</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(Z|Y) = \sum_{y \in Y} P(Y=y) H(Z|Y=y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4804em;vertical-align:-1.4304em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4304em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p>信息增益：熵降低的量化指标，反映了某个属性在分类中提供的信息量，即原始标签熵 - 利用属性Y进行划分后的熵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>G</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>Z</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">IG(Y) = H(Z) - H(Z|Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></span></p><h3 id="如何构建决策树">如何构建决策树</h3><ol><li>计算每个属性的信息增益，选择信息增益最大的属性作为当前划分节点</li><li>根据该属性的不同取值，将数据集划分为多个子集，并为每个子集生成一个子节点</li><li>对每个子节点重复上述过程，选择下一个属性进行扩展，同一条分支上，一个属性不能重复作为划分属性</li><li>停止条件<ol><li>所有剩余实例的标签相同</li><li>没有更多属性可供选择</li><li>树的深度达到预设的最大值</li><li>信息增益小于某个阈值</li></ol></li></ol><h3 id="性质">性质</h3><p>防止过拟合方法</p><ul><li>预剪枝：限制深度，限制子节点个数，限制节点包含的样本个数，限制节点的最低信息增益</li><li>在树构建完成后，剪去对验证集精度贡献较小的分支</li><li>过验证集评估剪枝效果，剪去对验证集精度影响最小的节点</li></ul><h2 id="集成学习">集成学习</h2><p>集成学习：结合多个弱分类器来构建一个强分类器</p><ul><li>弱分类器：在部分数据上表现较好，但在整个数据集上表现一般</li><li>强分类器：在整个数据集上表现良好，但是学习起来十分复杂</li></ul><blockquote><p>如何构造弱分类器？如何结合弱分类器？</p></blockquote><h3 id="Bagging">Bagging</h3><p>核心思想：通过自助采样生成多个子数据集，并在每个子数据集上训练一个分类器，最终通过多数投票或平均来结合这些分类器的预测结果</p><ol><li>从训练集中有放回地随机抽取N个样本，重复K次，得到K个子数据集</li><li>在每个子数据集上训练一个分类器</li><li>将所有分类器的预测结果通过多数投票或平均来得到最终预测</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056005.png" alt=""></p><p>存在问题：如果分类器之间的错误模式相似，投票机制无法显著提高整体性能，需要引入额外的随机性，从而减少分类器之间的相关性</p><p>随机森林：使用决策树模型作为弱分类器，在 Bagging 的基础上，每次构建决策树时，不是使用所有特征，而是随机选择一部分特征进行划分</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056006.png" alt=""></p><h3 id="Boosting">Boosting</h3><p>核心思想：使用同一个数据集进行多次迭代，每次迭代让当前弱分类器关注前一个弱分类器犯的错误，从而逐步优化自己</p><blockquote><p>如何量化错误？如何优化弱分类器？</p></blockquote><p>AdaBoost算法</p><ol><li>对于给定包含n个样本的数据集，初始化样本权重为同一值（样本没有被特别偏重，保证公平）<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">w_i = \frac{1}{n} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li>在每次迭代中，使用当前样本权重训练一个弱学习器，然后计算其分类误差（分类误差等于分类错误样本的权重之和）<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>ε</mi><mi>t</mi></msub><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><mo>⋅</mo><mi mathvariant="double-struck">I</mi><mo stretchy="false">(</mo><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\varepsilon_t = \frac{\sum_{i=1}^n w_i \cdot \mathbb{I}(h_t(x_i) \neq y_i)}{\sum_{i=1}^n w_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">ε</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.488em;vertical-align:-0.994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494em;"><span style="top:-2.3057em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathbb">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li>根据弱分类器的表现，计算弱分类器的参与度（错误率越低，弱分类器越好，权重越高）<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>α</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><mn>1</mn><mo>−</mo><msub><mi>ε</mi><mi>t</mi></msub></mrow><msub><mi>ε</mi><mi>t</mi></msub></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\alpha_t = \frac{1}{2} \ln \left(\frac{1 - \varepsilon_t}{\varepsilon_t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ε</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">ε</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p></li><li>根据弱分类器的表现，优化新弱分类器的权重，然后再归一化（分类正确，指数函数小于1，权重减小，分类错误，指数函数大于1，权重增大）<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>←</mo><msub><mi>w</mi><mi>i</mi></msub><mo>⋅</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msub><mi>α</mi><mi>t</mi></msub><mo>⋅</mo><msub><mi>y</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">w_i \leftarrow w_i \cdot \exp\left(-\alpha_t \cdot y_i \cdot h_t(x_i)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5945em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p></li><li>组合弱分类器得到强分类器<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>sign</mtext><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><msub><mi>α</mi><mi>t</mi></msub><mo>⋅</mo><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">H(x) = \text{sign} \left( \sum_{t=1}^T \alpha_t \cdot h_t(x) \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mord text"><span class="mord">sign</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056007.png" alt=""></p><h2 id="线性降维：PCA">线性降维：PCA</h2><p>为什么需要降维</p><ul><li>缓解维度灾难：许多数据的维度非常高，直接处理会导致计算复杂度急剧增加</li><li>减少噪声：高维数据中可能包含许多无关或冗余特征，需要提取数据的主要特征，增强信号的清晰度</li><li>提高数据可视化：样本在高维空间中变得稀疏，降维可以直观地理解数据的分布，更好地观察数据的聚类特性或分类边界</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056008.png" alt=""></p><p>PCA原理</p><ol><li>最小化重构误差：已知正交方向，需要找到对应的投影系数，使得数据在这些方向上的投影能够最小化重构误差，即尽可能保留数据的原始信息 -&gt; 最佳投影系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>=</mo><msubsup><mi>u</mi><mi>i</mi><mi>T</mi></msubsup><mi>x</mi></mrow><annotation encoding="application/x-tex">\alpha_i = u_i^T x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>min</mi><mo>⁡</mo><mi mathvariant="normal">∥</mi><mi>x</mi><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>α</mi><mi>i</mi></msub><msub><mi>u</mi><mi>i</mi></msub><msup><mi mathvariant="normal">∥</mi><mn>2</mn></msup><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\min \|x - \sum_{i=1}^M \alpha_i u_i\|^2\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∥</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p></li><li>最大化方差：已知协方差矩阵，需要找到一组正交方向，使得数据在这些方向上的投影方差最大，即尽可能包含更多的信息 -&gt; 最佳正交方向<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是协方差矩阵的特征向量<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>max</mi><mo>⁡</mo><msubsup><mi>u</mi><mi>i</mi><mi>T</mi></msubsup><mi>S</mi><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\max u_i^T S u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1383em;vertical-align:-0.247em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li>奇异值分解：任意矩阵A都满足以下式子，其中U的列向量是A的主成分方向<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mi>U</mi><mi mathvariant="normal">Σ</mi><msup><mi>V</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">A = U \Sigma V^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8913em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord">Σ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p></li></ol><p>PCA的算法步骤</p><ol><li>将每个数据点减去均值，使得数据的均值为零</li><li>对数据矩阵进行SVD分解，得到特征向量和特征值</li><li>选择前M个最大特征值对应的特征向量作为主成分</li><li>将数据投影到这些主成分上，得到降维后的数据</li></ol><p>主成分越关键，特征值越大，蕴涵的信息越多，重构误差越小<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056009.png" alt=""></p><h2 id="聚类：K-means">聚类：K-means</h2><p>聚类：将一组数据实例划分为不同的簇，使得同一簇内的实例相似度高，不同簇之间的实例相似度低</p><p>应用场景</p><ul><li>图像分组与分割</li><li>文档聚类和语义分析</li><li>社交网络人群划分</li><li>相似基因判断</li><li>市场细分</li></ul><p>K-means流程</p><ol><li>随机选择 K 个数据点作为初始质心</li><li>将每个数据点分配到距离最近的质心所属的簇</li><li>重新计算每个簇的质心，即计算簇内数据点的均值</li><li>重复分配和更新步骤，直到质心收敛或达到最大迭代次数</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056010.png" alt=""></p><p>目标函数：最小化所有数据点与其所属簇质心的距离之和，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub><mi>k</mi></mrow><annotation encoding="application/x-tex">r_ik</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>表示第i个样本是否属于簇k，目标函数是单调减少的，因此保证收敛</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msub><mi>r</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∥</mi><mi mathvariant="bold">x</mi><mi>i</mi><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><msup><mi mathvariant="normal">∥</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J = \sum_{i=1}^{N} \sum_{k=1}^{K} r_{ik} \| \mathbf{x}i - \mu_k \|^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∥</span><span class="mord mathbf">x</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>改进一：超参数簇的数量K如何选择？</p><ul><li>簇数量太少：聚类效果差</li><li>簇数量太多：过拟合</li><li>肘部法（Elbow）：通过绘制簇数量K与目标函数J的关系曲线，选择曲线减缓的点作为最佳K值</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056011.png" alt=""></p><p>改进二：初始质心如何选择？</p><ul><li>随机选择：完全随机选择点作为质心，质心可能分布十分不均匀，训练速度慢，收敛到局部最优解，分类性能差</li><li>距离选择：选择距离现有质心最远的点：可能选择到异常点</li><li>结合随机和距离：距离越远的点越有可能被选中</li></ul><p>Kmeans++流程</p><ol><li>从数据集中随机选取一个点作为第一个簇中心</li><li>对于数据集中每个点x，计算其与当前所有簇中心中最近簇中心的距离</li><li>每个点被选择为簇中心的概率与其距离平方成正比，计算全部数据的概率分布<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo><mo>∈</mo><mi>X</mi></mrow></munder><mi>D</mi><mo stretchy="false">(</mo><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(x) = \frac{D(x)^2}{\sum_{x{\prime} \in X} D(x{\prime})^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5042em;vertical-align:-1.0131em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mtight"><span class="mord mtight">′</span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3271em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord">′</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0131em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li>随机取一个0-1的数，落到哪个区间，就选择哪个点作为新的质心</li><li>重复2-4步，直到选择出K个簇中心</li></ol><p>改进三：分配方式</p><ul><li>硬分配：每个数据点确定性地属于一个簇</li><li>软分配：使用概率或权重表示样本与每个簇的关联程度</li></ul><p>Soft-Kmeans流程</p><ol><li>选择初始的K个质心</li><li>计算隶属度，即当前样本n属于簇k的概率，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>控制软分配程度的参数，值越大，分配越接近硬划分<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mi>β</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mi>β</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">r_{ik} = \frac{\exp(-\beta \cdot ||x_i - \mu_k||^2)}{\sum_{j=1}^K \exp(-\beta \cdot ||x_i - \mu_j||^2)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7982em;vertical-align:-1.307em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.1288em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.307em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li>根据隶属度更新每个簇的中心<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>r</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>r</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mu_k = \frac{\sum_{i=1}^n r_{ik} \cdot x_i}{\sum_{i=1}^n r_{ik}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.488em;vertical-align:-0.994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494em;"><span style="top:-2.3057em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li>重复执行2-3步，直到簇中心不再发生显著变化或达到最大迭代次数</li></ol><p>局限性</p><ul><li>Kmeans对异常值十分敏感</li><li>欧氏距离假设簇是球形的，对不规则形状的聚类效果差</li></ul><h2 id="隐变量模型">隐变量模型</h2><h3 id="LVM">LVM</h3><p>隐变量：不是直接给出来的数据，但对数据分布有潜在影响的随机变量，主要用于构件复杂模型和揭示隐藏结构</p><blockquote><p>假设给了消费记录，可以认为隐变量表示不同用户的购买偏好，但是实际上无法解释隐变量</p></blockquote><p>隐变量模型：包含显变量x和隐变量z，通过概率分布描述数据</p><ul><li>先验分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{z})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mclose">)</span></span></span></span>：隐变量的概率分布，</li><li>条件分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{x}|\mathbf{z})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mord">∣</span><span class="mord mathbf">z</span><span class="mclose">)</span></span></span></span>：隐变量对显变量的作用效果</li><li>联合分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo separator="true">,</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{x}, \mathbf{z}) = p(\mathbf{z}) p(\mathbf{x}|\mathbf{z})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mclose">)</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mord">∣</span><span class="mord mathbf">z</span><span class="mclose">)</span></span></span></span>：隐变量和显变量之间的关系</li><li>边缘分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∫</mo><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo separator="true">,</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mi>d</mi><mi mathvariant="bold">z</mi></mrow><annotation encoding="application/x-tex">p(\mathbf{x}) = \int p(\mathbf{x}, \mathbf{z}) d\mathbf{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">z</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathbf">z</span></span></span></span>：显变量的整体表现</li><li>后验分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo separator="true">,</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{z}|\mathbf{x}) = p(\mathbf{x}, \mathbf{z})/p(\mathbf{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">z</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mclose">)</span></span></span></span>：显变量对隐变量的作用效果</li></ul><p>隐变量模型的学习目标：让观测数据尽可能地符合边际分布，也就是找到一组最优参数来最大化对数边际似然，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>θ</mi></msub><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\max_{\theta} \sum_{i=1}^N \log p(\mathbf{x}_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><blockquote><p>为什么取对数，因为对概率的连乘计算复杂度太高，且容易导致数值溢出，通过取对数，将乘法变为加法，不仅降低了计算复杂度，还提高了数值稳定性</p></blockquote><h3 id="Gaussian-LVM">Gaussian LVM</h3><p>高斯隐变量模型</p><ol><li>假设观测变量由隐变量和高斯噪声线性组合而成：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>μ</mi><mo>+</mo><mi>W</mi><mi>z</mi><mo>+</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">x = \mu + Wz + \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \sim \mathcal{N}(0, \sigma^2 I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></li><li>假设隐变量服从零均值，单位协方差矩阵的高斯分布（先验分布）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>z</mi><mo separator="true">;</mo><mn>0</mn><mo separator="true">,</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(z) = \mathcal{N}(z; 0,I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></li><li>给定隐变量的时候，观测变量也服从高斯分布（条件分布）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>W</mi><mi>z</mi><mo>+</mo><mi>μ</mi><mo separator="true">,</mo><msup><mi>σ</mi><mn>2</mn></msup><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x|z) = \mathcal{N}(x; Wz + \mu, \sigma^2 I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></li><li>观测变量的整体分布仍是高斯分布（边际分布）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∫</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mi>d</mi><mi>z</mi><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>μ</mi><mo separator="true">,</mo><mi>W</mi><msup><mi>W</mi><mi>T</mi></msup><mo>+</mo><msup><mi>σ</mi><mn>2</mn></msup><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x) = \int p(x|z)p(z) dz = \mathcal{N}(x; \mu, WW^T + \sigma^2 I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></li></ol><h3 id="GMM">GMM</h3><p>高斯混合模型：观测变量的分布是多个高斯分布的加权和：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mi>π</mi><mi>k</mi></msub><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x) = \sum_{k=1}^K \pi_k \mathcal{N}(x | \mu_k, \Sigma_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>π</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\pi_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：混合权重，反映了第k个高斯分布在整体模型中的贡献度/参与度/责任值</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\mu_k, \Sigma_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：是第k个高斯分布的均值和协方差矩阵</li></ul><p>GMM的隐变量</p><ul><li>不是一个连续的高斯分布变量，而是一个离散变量：假如说有K个高斯分布，则隐变量表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">[</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>z</mi><mi>K</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">z_i = [z_1, z_2, \dots, z_K]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></li><li>隐变量的概率分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>π</mi><mi>k</mi></msub><mo separator="true">,</mo><mspace width="1em"/><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mi>π</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p(z_k = 1) = \pi_k, \quad \sum_{k=1}^K \pi_k = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，表示数据属于第k个高斯分布的概率</li></ul><p>GMM的隐变量模型</p><ul><li>先验分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>π</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">p(z_k = 1) = \pi_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>条件分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x | z_k = 1) = \mathcal{N}(x | \mu_k, \Sigma_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>联合分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>π</mi><mi>k</mi></msub><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x,z) = \pi_k\mathcal{N}(x | \mu_k, \Sigma_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>边际分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mi>π</mi><mi>k</mi></msub><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x) = \sum_{k=1}^K \pi_k \mathcal{N}(x | \mu_k, \Sigma_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>后验分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mi>π</mi><mi>k</mi></msub><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mi>π</mi><mi>j</mi></msub><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">p(z_k = 1 | x) = \frac{\pi_k \mathcal{N}(x | \mu_k, \Sigma_k)}{\sum_{j=1}^K \pi_j \mathcal{N}(x | \mu_j, \Sigma_j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7619em;vertical-align:-0.7519em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.5703em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mord mathcal mtight" style="margin-right:0.14736em;">N</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mtight">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathcal mtight" style="margin-right:0.14736em;">N</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mtight">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><p>GMM的学习目标</p><ol><li>最大化数据的对数边缘似然函数来优化模型参数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mo stretchy="false">{</mo><msub><mi>π</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><msubsup><mo stretchy="false">}</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup></mrow></msub><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msub><mi>π</mi><mi>k</mi></msub><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\max_{\{\pi_k, \mu_k, \Sigma_k\}_{k=1}^K } log(\prod_{i=1}^N \sum_{k=1}^K \pi_k \mathcal{N}(x_i|\mu_k, \Sigma_k))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4625em;vertical-align:-0.4813em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">{</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mtight">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">}</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8329em;"><span style="top:-2.1528em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4813em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></li><li>学习隐变量的最佳后验分布，即得到描述每个数据点属于每个高斯分布的最合适概率，从而实现软分配聚类</li></ol><h3 id="其他LVM">其他LVM</h3><p>隐马尔可夫模型（Hidden Markov Model, HMM）：用于序列数据，隐变量挖掘状态对时间的依赖关系，应用于语音识别、时间序列分析</p><p>信念网络（Sigmoid Belief Networks, SBN）：用于图像生成，挖掘高维数据的分布和结构，应用于图像生成和修复</p><p>隐狄利克雷分布（Latent Dirichlet Allocation, LDA）：用于文本数据，挖掘文本中的潜在主题结构，应用于主题建模和文本分析</p><h3 id="EM算法">EM算法</h3><p>隐变量模型的学习目标是最大化观测变量的对数边际似然<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log p(x; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></p><ul><li>连续：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><mo>∫</mo><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo separator="true">,</mo><mi mathvariant="bold">z</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mi>d</mi><mi mathvariant="bold">z</mi></mrow><annotation encoding="application/x-tex">\log p(x; \theta) = \log \int p(\mathbf{x}, \mathbf{z}; \theta) d\mathbf{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">z</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathbf">z</span></span></span></span></li><li>离散：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><msub><mo>∑</mo><mi>z</mi></msub><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>z</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log p(x; \theta) = \log \sum_z p(x, z; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></li></ul><p>但是直接求参数的最优解是不现实的，因此我们采取迭代优化的方式，即EM算法</p><ol><li>E步：在第t次迭代时，使用当前模型参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\theta^{(t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> ，计算隐变量z的后验分布</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>z</mi><mo separator="true">;</mo><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">p(z | x; \theta^{(t)}) = \frac{p(x, z; \theta^{(t)})}{p(x; \theta^{(t)})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.519em;vertical-align:-0.954em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ol><li>E步：用后验分布计算联合对数似然的期望</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>θ</mi><mo separator="true">;</mo><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mrow><mi>z</mi><mo>∼</mo><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">;</mo><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></msub><mrow><mo fence="true">[</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>z</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">Q(\theta; \theta^{(t)}) = \mathbb{E}_{z \sim p(z|x; \theta^{(t)})} \left[ \log p(x, z; \theta) \right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1556em;vertical-align:-0.4056em;"></span><span class="mord"><span class="mord mathbb">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4694em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mrel mtight">∼</span><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mtight">∣</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">;</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4056em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></span></p><ol><li>M步：最大化 Q 函数以更新参数</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>θ</mi></munder><mi>Q</mi><mo stretchy="false">(</mo><mi>θ</mi><mo separator="true">;</mo><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta^{(t+1)} = \arg \max_{\theta} Q(\theta; \theta^{(t)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.938em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6901em;vertical-align:-0.7521em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ol><li>当对数似然<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log p(x; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>收敛时停止</li></ol><blockquote><p>最关键的步骤在于Q函数的引入，因为直接优化<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log p(x; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>计算复杂，包含隐变量的求和/积分，而先求出后验概率，再用后验概率求期望，可以将隐变量的影响“分离”到期望计算中，优化变得简单</p></blockquote><p>GMM中的EM算法<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056012.png" alt=""></p><h2 id="表示学习">表示学习</h2><p>什么是表示学习：将任意格式的数据（如图像、文本、语音等）低维向量空间中，目的是保留数据的语义信息，而不是所有信息</p><ul><li>数据压缩：特征更加紧凑，减少了存储和计算的开销</li><li>提升效率：丢弃无关信息，只保留重要的语义信息</li><li>通用性：可以用于多种下游任务，如分类、聚类、相似性搜索、异常检测等</li></ul><h3 id="图像表示">图像表示</h3><p>卷积神经网络：卷积层+池化层+全连接层提取图像的局部特征，并将这些特征组合成更高层次的语义表示<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056013.png" alt=""></p><p>自编码器：PCA就可以看作成一种线性自编码器，通过线性变换将数据映射到低维空间<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056014.png" alt=""></p><p>生成模型：通过学习数据的生成过程，生成模型的编码器可以用于提取表示<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056015.png" alt=""></p><p>对比学习（以SimCLR为例）：构造正样本对（对同一个图片进行旋转、遮挡、裁剪、翻转、颜色抖动等操作）和负样本对（不同的两张图），最大化正样本对之间的相似性，最小化正样本对与负样本对之间的相似性，从而学习到能够反映数据语义的特征表示<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056016.png" alt=""></p><h3 id="文本表示">文本表示</h3><h4 id="传统方法">传统方法</h4><p>one-hot：每个词用一个独热向量表示，句子表示为独热向量的拼接<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056017.png" alt=""></p><p>BOW：忽略词序，仅记录词频<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056018.png" alt=""></p><p>TF-IDF：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>TF-IDF</mtext><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>d</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>TF</mtext><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo><mo>×</mo><mtext>IDF</mtext><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{TF-IDF}(w, d, D) = \text{TF}(w, d) \times \text{IDF}(w, D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">TF-IDF</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">TF</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">IDF</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span></p><ul><li>词在单个文档中出现的频率（Term Frequency, TF）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>TF</mtext><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>o</mi><mi>f</mi><mi>w</mi><mi>i</mi><mi>n</mi><mi>d</mi></mrow><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>o</mi><mi>f</mi><mi>d</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\text{TF}(w, d) = \frac{num of w in d}{num of d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">TF</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4133em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">fd</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，词如果出现在同一个文档中的次数越多，从而说明价值越高</li><li>词在整个文档集合中的普遍程度（Inverse Document Frequency, IDF）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>IDF</mtext><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mi>o</mi><mi>f</mi><mi>D</mi></mrow><mrow><mn>1</mn><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>o</mi><mi>f</mi><mi>w</mi><mi>i</mi><mi>n</mi><mi>D</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{IDF}(w, D) = log(\frac{num of D}{1 + num of w in D})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">IDF</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4133em;vertical-align:-0.4811em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，词如果出现在不同文档的次数越多，反而说明价值越低</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056019.png" alt=""></p><p>上述方法的局限性：维度高，稀疏，繁琐，无法反映词之间的语义相似性</p><h4 id="Word2Vec">Word2Vec</h4><ul><li>Skip-Grams：通过目标词预测上下文词，更注重局部关系，适合捕捉稀疏语料中的语义信息</li><li>CBOW：通过上下文词预测目标词，更注重整体上下文，适合处理较小规模的数据集</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056020.png" alt=""></p><p>局限性：只注重单词的含义，但不考虑整个句义，无法表达单词在不同语境下的多义性，</p><blockquote><p>如“bank”在一个句子中表示银行，而在另一个句子中表示河岸</p></blockquote><h4 id="Sentence-Embedding">Sentence Embedding</h4><p>ELMo：基于双向 LSTM 的语言模型，为每个词生成上下文相关的词向量，利用句子中的前后语境信息<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022115081.png" alt=""></p><p>BERT：基于 Transformer 的预训练模型，输入词嵌入、段嵌入和位置嵌入，通过掩码语言模型和下一句预测任务进行预训练，生成上下文相关的词嵌入</p><ul><li>掩码语言模型（MLM）：训练模型预测句子中被随机掩码的词</li><li>下一句预测（NSP）：训练模型判断两个句子是否是连续的</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056021.png" alt=""></p><h2 id="深度生成">深度生成</h2><p>生成模型也是一种隐变量模型，描述了数据的生成过程</p><ul><li>PCA：令隐变量是正交基向量，数据由正交基向量的线性组合而成</li><li>GMM：令隐变量是软分配向量，数据由软分配向量的高斯分布加权组合而成</li></ul><p>深度生成模型：将隐变量通过网络变换生成观测变量，建模能力更强，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo separator="true">,</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mi mathvariant="normal">∣</mi><mi>T</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{x}, \mathbf{z}) = p(\mathbf{x}|T(\mathbf{z}))p(\mathbf{z})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mclose">))</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>表示神经网络的输出<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056022.png" alt=""></p><p>KL散度：用来衡量两个概率分布之间差异的一个非对称度量，又称为相对熵，其中P是目标分布、Q是参考分布</p><ul><li>离散：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>KL</mtext><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">∥</mi><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∫</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\text{KL}(P \| Q) = \int P(x) \log \frac{P(x)}{Q(x)} dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">KL</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">∥</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></li><li>连续：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>KL</mtext><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">∥</mi><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∫</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\text{KL}(P \| Q) = \int P(x) \log \frac{P(x)}{Q(x)} dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">KL</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">∥</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></li></ul><p>由于神经网络的使用，深度生成模型的后验分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{z}|\mathbf{x}; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>和联合概率均值都难以直接求解</p><p>VB-EM框架</p><ul><li>定义近似后验分布：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo separator="true">;</mo><msub><mi>μ</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msubsup><mi>σ</mi><mi>ϕ</mi><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q_\phi(\mathbf{z}|\mathbf{x}) = \mathcal{N}(\mathbf{z}; \mu_\phi(\mathbf{x}), \sigma_\phi^2(\mathbf{x}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2333em;vertical-align:-0.4192em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4169em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ϕ</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mclose">))</span></span></span></span></li><li>改变优化函数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">L</mi><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo separator="true">;</mo><mi>θ</mi><mo separator="true">,</mo><mi>ϕ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mrow><mi>q</mi><mi>ϕ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo></mrow></msub><mrow><mo fence="true">[</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><mo>−</mo><mtext>KL</mtext><mrow><mo fence="true">[</mo><msub><mi>q</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∥</mi><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\mathcal{L}(\mathbf{x}; \theta, \phi) = \mathbb{E}_{q{\phi}(\mathbf{z}|\mathbf{x})} \left[ \log p_{\theta}(\mathbf{x}|\mathbf{z}) \right] - \text{KL}\left[q_{\phi}(\mathbf{z}|\mathbf{x}) \| p(\mathbf{z})\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal">L</span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ϕ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathbb">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight"><span class="mord mathnormal mtight">ϕ</span></span><span class="mopen mtight">(</span><span class="mord mathbf mtight">z</span><span class="mord mtight">∣</span><span class="mord mathbf mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mord">∣</span><span class="mord mathbf">z</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord text"><span class="mord">KL</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mord">∥</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span></li></ul><blockquote><p>第一项鼓励模型能够生成与数据一致的样本，而第二项KL散度起到正则化的作用，鼓励近似后验分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q_{\phi}(\mathbf{z}|\mathbf{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mclose">)</span></span></span></span>与先验分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(\mathbf{z})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mclose">)</span></span></span></span>尽量接近</p></blockquote><p>MCMC技巧</p><ul><li>采样：为了近似地求出优化函数，我们可以从分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">z</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q_\phi(\mathbf{z}|\mathbf{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">z</span><span class="mord">∣</span><span class="mord mathbf">x</span><span class="mclose">)</span></span></span></span>中采样多组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathbf{z}^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathbf">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，然后用这些采样点的平均值来估计期望</li><li>重参数化：随机采样是离散的点，不方便求梯度，因此可以将隐变量表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">z</mi><mo>=</mo><msub><mi>μ</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>σ</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">x</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\mathbf{z} = \mu_\phi(\mathbf{x}) + \sigma_\phi(\mathbf{x}) \cdot \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord mathbf">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ϕ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathbf">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \sim \mathcal{N}(0, I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span>是一个标准正态分布的随机变量。这样，隐变量的随机性被显式地分离到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>中</li></ul><h2 id="推荐系统">推荐系统</h2><h3 id="概述-2">概述</h3><p>推荐系统：帮助用户从大量物品（如商品、电影、音乐等）中找到他们可能感兴趣的物品，应用于电商平台（如亚马逊）、流媒体服务（如Netflix）、社交媒体（如YouTube）等</p><p>形式化模型</p><ul><li>用户集合X，物品集合S，评分集合R</li><li>评分函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>:</mo><mi>X</mi><mo>×</mo><mi>S</mi><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">u: X \times S \rightarrow R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></li><li>评分矩阵：用户对物品的评分矩阵，通常非常稀疏</li></ul><h3 id="基于内容">基于内容</h3><p>核心思想：推荐与用户过去喜欢的物品相似的物品</p><ul><li>物品画像：每个物品的特征向量</li><li>用户画像：用户喜欢的物品画像的加权平均</li><li>预测评分：计算用户画像与物品画像的相似度来预测评分</li></ul><p>优点</p><ul><li>能够充分挖掘用户个人兴趣，生成个性化推荐</li><li>推荐理由基于内容特征，便于向用户解释推荐的原因</li></ul><p>缺点</p><ul><li>缺乏多样性，用户只能接触到类似的内容</li><li>绘制画像较为困难，尤其是对于图像、音乐等复杂数据</li></ul><h3 id="协同过滤">协同过滤</h3><p>核心思想：利用其他用户的评分来预测目标用户的评分</p><ul><li>用户-用户协同过滤：通过相似用户的评分加权平均来预测评分</li><li>物品-物品协同过滤：通过用户对相似物品的评分加权平均来预测评分</li></ul><p>优点</p><ul><li>推荐结果更加多样化</li><li>无需提取物品本身的特征，能有效利用评分等隐含信息</li></ul><p>缺点</p><ul><li>冷启动问题，新用户或新物品没有足够评分，无法进行有效推荐</li><li>流行度偏差，倾向于推荐热门物品，无法推荐冷门物品</li><li>随着用户和物品数量的增加，计算相似度的复杂度急剧上升</li></ul><h3 id="矩阵分解">矩阵分解</h3><p>核心思想：将用户-物品评分矩阵分解为两个低维矩阵，分别表示用户和物品的潜在特征</p><ul><li>用户矩阵P：每行表示一个用户的潜在特征向量</li><li>物品矩阵Q：每行表示一个物品的潜在特征向量</li><li>预测评分：通过用户和物品的潜在特征向量的内积来预测评分</li></ul><p>优点</p><ul><li>泛化能力强，能够推荐用户未评分的物品，支持发现潜在的喜好</li><li>适合大规模数据，通过矩阵分解可以实现数据降维，降低计算复杂度</li></ul><p>缺点</p><ul><li>冷启动问题，新用户或新物品没有足够评分，无法进行有效推荐</li><li>随着用户和物品数量的增加，计算相似度的复杂度急剧上升</li></ul><h3 id="评估指标">评估指标</h3><ul><li>均方根误差：预测评分与真实评分之间的差异</li><li>准确率：在推荐的物品中，被用户实际喜欢的物品所占的比例</li><li>召回率：用户实际喜欢的物品中，被推荐出来的比例</li><li>排名相关性：输出的物品排序与用户真实偏好排序之间的相关性</li><li>多样性：衡量推荐结果中物品之间的差异性</li><li>覆盖率：衡量推荐结果覆盖的物品和用户数量</li><li>推荐解释性：推荐结果的可解释程度和可理解程度</li></ul><h2 id="异常检测">异常检测</h2><h3 id="概述-3">概述</h3><p>异常检测（Anomaly）/ 离群点检测（Outlier）/ 新颖性检测（Novelty）：检测与大多数数据样本显著不同的数据样本，表现为多样性高、无法明确表征、无法穷举<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056023.png" alt=""></p><p>异常类型</p><ul><li>点异常（Point）：单个数据点本身可被确定为异常</li><li>上下文异常（Contextual）：在特定上下文中，单个实例可能看起来异常</li><li>集体异常（Collective）：一组实例在一起检查时可能被视为异常</li></ul><h3 id="方法">方法</h3><p>基于距离：将远离大多数实例的实例看作异常，计算到第k个最近邻居的距离，如果距离高于某个阈值，则视为异常</p><ul><li>对k值敏感，难以找到好的距离度量</li><li>复杂度高<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056024.png" alt=""></p><p>基于密度：将落在低密度区域的实例看作异常，计算正常数据的概率密度分布，如果某个实例的概率密度低于阈值，则视为异常</p><ul><li>计算复杂度高</li><li>若数据分布复杂或多模态，没有很好的概率分布模型可以使用</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056025.png" alt=""></p><p>基于重构：将无法重构的实例看作异常，在正常数据实例上训练自编码器，如果某个实例无法很好被解码重构，则视为异常</p><ul><li>需要大量正常数据进行训练</li><li>对未见过的正常样本也判定为异常</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056026.png" alt=""></p><p>基于单分类器：将不包含超球体内的实例看作异常，利用支持向量构造决策边界，如果某个实例在边界之外，则视为异常</p><ul><li>计算复杂度较高</li><li>难以选择核函数和参数</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056027.png" alt=""></p><h3 id="评估">评估</h3><table><thead><tr><th></th><th>实际为真</th><th>实际为假</th></tr></thead><tbody><tr><td>预测为真</td><td>TP</td><td>FP</td></tr><tr><td>预测为假</td><td>FN</td><td>TF</td></tr></tbody></table><p>ROC曲线：以TPR为纵轴，FPR为横轴，绘制出的曲线，其面积用于衡量分类器的整体性能</p><ul><li>真阳性率：检测出的正样本中实际为正的比例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">TPR = \frac{TP}{TP + FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">TPR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>假阳性率：检测出的负样本中实际为正的比例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>F</mi><mi>P</mi></mrow><mrow><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">FPR = \frac{FP}{FP + TN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">FPR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">TN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><p>PR曲线：以Precision为纵轴，Recall为横轴，绘制出的曲线，其面积用于评估分类器在检测异常点上的性能表现</p><ul><li>精确率：检测出的正样本中实际为正的比例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Precision = \frac{TP}{TP + FP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">rec</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>召回率：实际正样本中被正确检测出的比例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Recall = \frac{TP}{TP + FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><p>F1分数：是精确率和召回率的调和平均数，用于综合评估分类器在平衡这两个指标时的性能表现</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mn>1</mn><mo>=</mo><mn>2</mn><mo>⋅</mo><mfrac><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>⋅</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F1 = 2 \cdot \frac{Precision \cdot Recall}{Precision + Recall}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.1408em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">rec</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">rec</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="多模态学习">多模态学习</h2><p>多模态学习：旨在同时处理和理解来自多种模态（例如文本、图像、音频、视频等）的数据，学习不同模态之间的关联与交互关系，以实现信息的有效融合和综合分析</p><p>Vision Transformer, ViT（图像理解）</p><ol><li>把图像拆成小块 patch，通过线性变换转换为向量，并加上位置嵌入以保留位置信息</li><li>用 Transformer 模型处理向量，通过自注意力机制学习图像的整体表示</li><li>通过一个 MLP 分类头输出图像的类别</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056028.png" alt=""></p><p>Contrastive Language–Image Pretraining, CLIP（图文对齐）</p><ol><li>图像通过图像编码器变成向量，文本通过文本编码器变成向量</li><li>让匹配的图像和文本向量在空间中靠近，不匹配的远离</li><li>模型能够将图像和文本映射到共享的向量空间中，实现跨模态检索和分类，通俗的来说，就是根据文本描述直接找到对应的图片或者根据图片生成对应的文字描述</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056029.png" alt=""></p><p>Bootstrapping Language-Image Pretraining, BLIP（图文生成）</p><ol><li>图像通过图像编码器变成向量，文本通过文本编码器变成向量</li><li>对比学习：将匹配的图像和文本特征向量在共享的多模态空间中拉近距离，而将不匹配的特征向量推远</li><li>生成学习：对输入图像生成描述性文本，过滤低质量、无意义或不相关的文本描述</li><li>联合生成损失和对比损失，通过“自产自销”提升模型性能</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/MachineLearning/chapter1-18/202501022056030.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《分布式系统》课程笔记汇总</title>
      <link href="/posts/c625cd59/"/>
      <url>/posts/c625cd59/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="分布式系统概述">分布式系统概述</h2><h3 id="分布式系统的定义">分布式系统的定义</h3><p>集中式系统：所有服务和计算都在一台或少数台计算机上进行，且这些计算机彼此之间物理互连</p><p>分布式系统产生的两大原因</p><ul><li><strong>高性能微处理器的开发</strong>，使得计算机的体积显著变小，同时计算性能维持较高水平</li><li><strong>高速计算机网络的发明</strong>，使得计算机之间通过计算机网络实现远距离通信和无线通信，同时保持高速传播</li></ul><p>分布式系统：<strong>是若干独立计算机的集合，这些计算机对于用户来说就像是单个耦合系统</strong></p><ul><li>硬件层面：计算机之间是彼此独立的</li><li>软件层面：用户只与自己的计算机进行交互</li><li>物理层面：计算机分布在不同的物理位置</li><li>逻辑层面：计算机是逻辑集中的和高耦合的</li></ul><p>中间件（Middleware）：位于操作系统和应用程序之间，属于软件层，屏蔽不同操作系统、网络协议、硬件架构的差异，<strong>为应用程序提供统一的接口</strong>，使计算机之间可以实现分布式任务</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter1/202411141233957.png" alt=""></p><h3 id="分布式系统的四个目标">分布式系统的四个目标</h3><p>资源可访问：计算机访问分布式系统中的资源就像访问本地资源一样快速简单</p><p>透明性：让用户意识不到分布式系统的底层工作或底层信息</p><ul><li>完全透明性难以实现，需要消耗更多资源来维持“无感知”状态，增加系统负担</li><li>完全透明性不可取，用户需要及时发现系统的性能问题，或者需要暴露系统特征来为用户提供个性化服务</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601881.png" alt=""></p><p>开放性：分布式系统根据一系列准则来提供服务，通过标准化接口使得不同服务之间可以进行交互</p><ul><li><strong>互操作性</strong>：不同系统、应用或组件之间能够无缝协同工作，互相交换和理解数据</li><li><strong>可移植性</strong>：应用或组件可以在不同的硬件或软件环境之间迁移而不需要修改或仅需最小的修改</li><li><strong>灵活性</strong>：系统能够根据需求变化快速进行调整和扩展而不影响系统的整体架构</li></ul><p>可扩展性：分布式系统可以伸缩、增减</p><ul><li><strong>规模</strong>：分布式系统能够随着需求的增长而增加资源和用户</li><li><strong>地域</strong>：分布式系统系统可以跨多个地理区域部署</li><li><strong>管理</strong>：随着系统规模和复杂性的增加，系统的管理和维护工作量不会显著增加</li></ul><h3 id="分布式系统的分类">分布式系统的分类</h3><h4 id="分布式计算系统">分布式计算系统</h4><p><strong>集群计算系统</strong>：多台通过网络连接计算机组成的计算系统，每台计算机是同构的，单个程序可以在多台计算机上并行运行<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter1/202411141233951.png" alt=""></p><p><strong>网格计算系统</strong>：由来自各地的节点组成的计算系统，每台计算机是异构的，通过虚拟分层组织来实现一组计算机之间的协同工作<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter1/202411141233952.png" alt=""></p><p><strong>云计算系统</strong>：由云服务提供商建立的面向服务的计算系统，通常由大量服务器和数据库在一个位置组成，通过网络和虚拟化技术为用户提供计算服务<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter1/202411141233953.png" alt=""></p><h4 id="分布式信息系统">分布式信息系统</h4><p><strong>事务处理系统</strong>：通过事务监视器保证事务的正确执行，确保数据的正确性<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter1/202411141233954.png" alt=""></p><p>企业应用集成：通过中间件将客户端的请求合并，分散到各个服务器处理，同时企业内部各个独立的服务器和应用程序之间也可以进行通信<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter1/202411141233956.png" alt=""></p><h4 id="分布式普适系统">分布式普适系统</h4><p>普适计算系统：计算无处不在，被无缝集成到人们的生活和工作中（嵌入式设备）</p><p>移动计算系统：用户可以通过移动设备在任何时间、任何地点访问数据和应用（手机、平板）</p><p>无线传感器网络：是一组分布式的传感器节点，通过自组织网络相互连接，用于环境监测和物理数据收集（火警检测器）</p><h4 id="区分">区分</h4><table><thead><tr><th>类型</th><th>计算系统</th><th>信息系统</th><th>普适系统</th></tr></thead><tbody><tr><td>核心功能</td><td>数据计算</td><td>信息处理</td><td>智能化服务</td></tr><tr><td>数据处理</td><td>计算大规模、复杂的数据</td><td>存储和分析带有信息的数据</td><td>实时地数据采集和响应</td></tr><tr><td>交互方式</td><td>基于命令行、程序开发和高级算法设计</td><td>通过图形界面、报表和仪表板等方式</td><td>通过语音、触控、体感、环境监测等方式</td></tr><tr><td>示例</td><td>超级计算机</td><td>客户端-服务器架构</td><td>智能家居</td></tr><tr><td>适用领域</td><td>科研、数据分析</td><td>企业管理</td><td>物联网、个性化服务、生态环境</td></tr></tbody></table><h2 id="体系结构">体系结构</h2><h3 id="样式">样式</h3><p>样式决定了组件之间相互的连接方式、组件之间的数据交换以及这些组件如何集成到一个系统中</p><p><strong>分层</strong>：将系统功能划分为多个层次，每一层实现特定的功能，系统的各个组件通过接口并遵循协议来进行交互，通常来说请求是自顶向下的，响应是自底向上的<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034889.png" alt=""></p><p><strong>基于对象</strong>：每个对象对应一个组件，对象既封装了数据，也封装了面向数据的处理方法，组件之间可以通过远程调用方法的机制来连接、通信和交互<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034872.png" alt=""></p><p><strong>基于数据</strong>：不同组件通过访问共享的数据库或存储系统来进行协作<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034874.png" alt=""></p><p><strong>基于事件</strong>：各个组件可以独立处理事件，组件之间通过发布/订阅系统来实现事件传播<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034875.png" alt=""></p><h3 id="类型">类型</h3><h4 id="集中式架构">集中式架构</h4><p>集中式架构：系统的所有主要计算和决策逻辑都集中在一个或少数几个服务器上，客户端主要负责用户交互和简单的请求转发</p><ul><li>应用分层：应用程序被划分为多层，每一层专注于完成特定任务，每层之间通过定义明确的接口进行通信</li><li>多层：是对分层架构的扩展，加入了额外的层级以支持复杂功能和大规模分布式部署</li></ul><p>Web的三层架构</p><ol><li>用户接口：为用户提供访问应用程序的方式</li><li>处理层：应用程序的实现，负责业务逻辑和数据处理</li><li>数据层：存储、管理和维护应用中的数据<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034877.png" alt=""></li></ol><p>客户端-服务器的组织结构</p><ul><li>瘦客户：客户端只实现用户接口层，服务器实现处理层和数据层</li><li>胖客户：在客户端添加部分业务逻辑和数据存储<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034878.png" alt=""></li></ul><h4 id="非集中式架构">非集中式架构</h4><p>非集中式架构：系统中的所有节点平等，彼此协作完成任务，而没有中心控制节点，每个节点既可以是客户端，也可以是服务器</p><p>结构化P2P：基于分布式哈希表将节点组织在一个特定拓扑结构的覆盖网络中</p><p>非结构化P2P：基于随机图将节点组织在一个松散耦合的网络中，即每个节点只连接到随机选择的其他节点</p><ul><li>泛洪：节点接收到请求后，将请求广播给所有邻居节点，使得信息逐层传播</li><li>随机游走：请求通过随机路径在节点间传递，每一步随机选择一个邻居进行传递</li></ul><p>分层P2P：部分节点充当“超级对等节点”，负责核心的管理和路由任务，而其他节点则充当普通节点，普通节点只能与超级节点连接，超级节点之间相互连接<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034882.png" alt=""></p><h4 id="混合式">混合式</h4><p>混合式架构：结合了集中式和分散式的特点，既有中心服务器提供核心功能，又利用分布式节点来提升性能和扩展性</p><p>边界服务器系统：边界服务器处理终端用户的请求，将其转发到内部网络进行处理（CDN）<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034883.png" alt=""></p><p>协作分布式系统：客户节点和服务节点的角色是动态的，跟踪器只用来决定谁作为服务节点，但不提供计算服务<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034884.png" alt=""></p><h3 id="中间件与体系结构">中间件与体系结构</h3><p>适配器（adapter）：适配器将不同接口的类连接起来，使得原本不兼容的接口能够一起工作<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034885.png" alt=""></p><p>代理（broker）：通过一个中介来解耦请求的发送者与接收者，管理服务请求和响应<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034886.png" alt=""></p><p>中断（interceptor）：允许在请求处理的过程中插入自定义逻辑<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034887.png" alt=""></p><h3 id="自治体系结构">自治体系结构</h3><p>自治的体现：自我管理、自我恢复、自我配置、自我优化等</p><p>反馈控制循环</p><ul><li>监控：收集系统运行状态的实时数据</li><li>分析：评估监控数据，确定系统是否符合设定的性能目标，以及是否出现偏差或异常</li><li>计划：制定纠正措施、优化策略和调整方法，以便系统可以回到期望状态</li><li>纠正/执行：根据调整措施执行新的操作</li><li>反馈：执行后的状态信息会再次反馈到监控模块</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter2/202411142034888.png" alt=""></p><h2 id="进程">进程</h2><h3 id="进程与线程">进程与线程</h3><p>区分进程和线程</p><table><thead><tr><th>类型</th><th>定义</th><th>上下文内容</th><th>特点</th></tr></thead><tbody><tr><td>进程</td><td>独立运行的程序实例</td><td>有自己的独立地址空间，还记录CPU、内存管理单元和转换后备缓冲器的资源信息</td><td>粗粒度、独立性强、切换成本高、通信需要依靠IPC</td></tr><tr><td>线程</td><td>是进程中的一个执行路径，是最小可执行一系列指令的软件处理器</td><td>共享进程的地址空间和全局资源，但有自己的寄存器状态</td><td>细粒度、共享资源、通信简单、轻量级</td></tr></tbody></table><p>多线程进程的优势</p><ul><li>允许使用会导致线程阻塞的系统调用，但是却不阻塞该线程所属的进程</li><li>可以在多核CPU上更好地发挥并行性</li><li>避免频繁且高开销的进程上下文切换</li></ul><p>多线程客户端：客户端派生多个线程，每一个线程负责一个调用，适合调用目标是不同的服务器，将会得到线性加速。比如说浏览器获取网页内容，只要浏览器获得html文件，就可以根据html文件中的多个url来激活多个独立的线程</p><p>多线程服务器：服务器建立一个分发者线程和多个工作者线程，分发者线程用于接收来自网络的请求，然后将请求内容按需分配给工作者线程执行<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601933.png" alt=""></p><h3 id="虚拟化">虚拟化</h3><h4 id="虚拟化作用">虚拟化作用</h4><p>虚拟化：通过软件技术抽象物理资源为逻辑资源</p><ul><li>提高资源利用率：可以根据需求动态调整资源分配</li><li>提供跨平台支持：屏蔽底层硬件和操作系统差异</li><li>新硬件适配：通过虚拟化技术延长旧应用的使用寿命</li><li>集中管理分布式的资源：利用虚拟化平台集中管理逻辑资源</li><li>提高系统可靠性和可用性：支持快照和容灾备份机制</li></ul><h4 id="虚拟化技术">虚拟化技术</h4><p>计算机系统的接口（自底向上）</p><ol><li>由机器指令组成，可由任何程序激起的软件-硬件接口</li><li>由机器指令组成，只能有特权程序才可激活的软件-硬件接口</li><li>由系统调用组成的操作系统接口</li><li>由库函数组成的应用程序编程接口（API）</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601867.png" alt=""></p><p>虚拟化技术</p><ul><li>进程虚拟机（Process VM）：运行在操作系统之上，抽象了底层硬件和操作系统的差异，使得应用程序可以在不同平台上无缝运行</li><li>原生虚拟机监控器（Native VMM）：运行在物理硬件之上，直接与物理硬件交互，为虚拟机分配和管理硬件资源</li><li>主机虚拟机监控器（Hosted VMM）：运行在宿主操作系统之上，直接与宿主操作系统交互，为虚拟机分配和管理硬件资源</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601869.png" alt=""></p><h4 id="云计算技术">云计算技术</h4><ul><li>基础设施即服务（Infrastructure-as-a-Service, IaaS）：提供虚拟化的硬件资源，如存储空间、网络带宽等</li><li>平台即服务（Platform-as-a-Service, PaaS）：提供虚拟化的开发和运行平台，开发者可以在这个平台上编写、测试、部署应用，而不必担心底层硬件、操作系统、存储和网络等基础设施</li><li>软件即服务（Software-as-a-Service, SaaS）：提供虚拟化的应用服务，用户可以通过浏览器等轻量级客户端访问和使用这些应用，而无需安装和管理软件</li></ul><h3 id="客户端">客户端</h3><p>客户端定义：向用户提供接口，与远程服务器进行交互，并接收来自服务器的数据以展示的程序或设备，客户端与服务器之间的通信通常通过网络进行</p><p>客户端的网络接口</p><ul><li>应用特定（App Specific）：为特定应用程序量身定制，具备与该应用密切相关的功能和设计，如音乐软件、游戏软件等</li><li>应用无关（App Independent）：通用接口，不依赖于特定的应用逻辑，可以被不同的应用所使用，如浏览器</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601870.png" alt=""></p><p>客户端实现透明性：意识不到服务器的位置，意识不到服务器是否切换，意识不到服务器是否故障，意识不到是否将请求发送给多个服务器</p><ul><li>存根（stub）：是远程服务的接口，负责将客户端调用的请求打包传递给服务器，隐藏了网络通信和远程调用的细节，确保客户端可以像调用本地方法一样调用远程方法</li><li>代理（proxy）：充当了客户端和实际远程服务之间的中间件，具有处理服务器故障、客户端复制请求和服务器重定位等功能</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601871.png" alt=""></p><h3 id="服务器">服务器</h3><h4 id="基本模式">基本模式</h4><p>【服务器组织结构】</p><table><thead><tr><th>服务器的组织结构</th><th>迭代（iterative）</th><th>并发（concurrent）</th></tr></thead><tbody><tr><td>定义</td><td>一次只处理一个客户端请求，在完成请求后才会处理下一个请求</td><td>可以同时处理多个客户端请求，同时为多个客户端提供服务</td></tr><tr><td>流程</td><td>用队列记录请求，按顺序一个接一个处理</td><td>为请求创建一个新的线程或进程单独处理</td></tr><tr><td>优势</td><td>编程简单，适用于单个请求处理时间较短的场景</td><td>具有高吞吐量和响应速度</td></tr><tr><td>缺点</td><td>会阻塞后续请求，造成长响应时间</td><td>需要处理资源竞争、数据死锁等问题</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601872.png" alt=""></p><p>【服务器状态】</p><p>｜状态｜状态相关的（stateful）｜状态无关的（stateless）｜<br>｜-｜-｜-｜<br>｜定义｜在处理客户端请求时，会维护客户端的状态信息，如上下文信息和历史信息｜服务器对每个请求是独立的，不记录任何客户端状态信息｜<br>｜优点｜减少数据传输次数，减小请求消息大小｜服务器崩溃不会影响客户端状态｜<br>｜缺点｜需要复杂的同步机制和额外的存储空间｜需要客户端一次性发送请求全部内容｜</p><div class="note info flat"><p>RESTful API是遵循REST原则的统一接口，直接使用HTTP中的各种方法来定义对资源的操作，如GET、PUT、POST、DELETE等，其中资源在网络中由URL标识，服务器不会保留客户端对状态信息，客户端需要在每次请求中包含足够的信息以完成请求</p></div><p>【服务器发现】</p><p>静态分配：客户端直接使用固定的端口号和地址来访问服务器，比如说HTTP服务通常运行在80端口</p><p>目录服务器：服务器将自己的端口和地址注册到目录中，客户端访问并查询目录服务器来获取可用的服务器<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601873.png" alt=""></p><p>超级服务器：不处理请求，而是负责根据请求选择合适的服务器实例<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601874.png" alt=""></p><h4 id="服务器集群">服务器集群</h4><p>【三层结构】</p><ol><li>负载均衡器/逻辑交换机：分配客户请求</li><li>服务器：处理客户请求</li><li>数据库：处理数据读写</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601875.png" alt=""></p><p>【TCP handoff】</p><p>客户端向服务器集群中的负载均衡器发送请求，负载均衡器将请求转发给对应的服务器，同时修改请求的目的地址为服务器地址，从而建立连接</p><ul><li>轮询：按指定顺序，依次分发到不同服务器</li><li>基于服务类型：网页请求分发到Web服务器，文件请求分发到FTP服务器</li><li>基于服务器负载：监控每个服务器的负载情况，将请求分配到负载较低的服务器</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601876.png" alt=""></p><p>【请求内容混合分发】</p><ul><li>switch交换机：将请求转发给分发器和服务器</li><li>dispatcher调度器：检查请求的具体内容，确定最合适的服务器</li><li>distributor分发器：根据调度器提供的信息，转发请求到对应服务器，并通知交换机</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601877.png" alt=""></p><p>【分布式服务器】</p><p>提供一个稳定的访问点（HoA），使得客户能够无缝访问服务，但没有感知到分布式服务器的动态变化，客户端的视角下只是一个强大的服务器。<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601878.png" alt=""></p><h3 id="代码迁移">代码迁移</h3><h4 id="基本迁移">基本迁移</h4><p>定义：将代码从一个节点移动到另一个节点运行的过程</p><ul><li>负载均衡：将计算任务从繁忙的服务器迁移到空闲服务器</li><li>最小化通信：将代码迁移到存储数据的节点可以减少网络通信的开销</li><li>移动性支持：确保移动设备的服务连续性</li></ul><p>进程迁移的组成</p><ul><li>指令段：包含程序的所有代码</li><li>资源段：包含程序所需的所有外部资源（设备访问、数据库连接、文件访问）</li><li>执行状态段：包含程序运行时的状态（变量值、程序堆栈）</li></ul><p>类型</p><ul><li>弱迁移：只迁移代码段，目标节点需要重新初始化运行环境，从起点开始运行</li><li>强迁移：迁移代码段和执行状态段，目标节点从迁移中断的地方继续执行</li></ul><h4 id="资源段处理">资源段处理</h4><p>资源绑定方式</p><ul><li>未连接（Unattached）：资源未绑定到任何特定机器，可以动态分配和移动。</li><li>附着连接（Attached）：资源附加到某一特定机器，但仍然可以移动。</li><li>紧固连接（Fixed）：资源绑定到特定机器，不能移动。</li></ul><p>绑定策略</p><ul><li>GR（Global Reference，全局引用）：创建一个系统范围内的全局引用</li><li>MV（Move，移动资源）：将资源移动到当前需要使用的机器</li><li>CP（Copy，复制资源的值）：复制资源的值到需要的机器上</li><li>RB（Rebind，重新绑定资源）：将进程重新绑定到本地可用资源</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601879.png" alt=""></p><h4 id="异构系统的迁移">异构系统的迁移</h4><p>异构系统指的是由不同的硬件架构、操作系统、编程语言或运行环境组成的系统，迁移后的代码可能不适合在目标机器上执行。</p><ul><li>抽象机：在不同平台上构建抽象层，使迁移代码运行在统一的抽象环境中，而无需关心底层硬件和操作系统</li><li>解释型语言：使得代码能在不同平台上通过解释器运行</li><li>虚拟机监控器：利用虚拟化技术在目标节点模拟一个与源节点一致的环境，使迁移的代码能够无缝运行</li></ul><p>虚拟机迁移：将整个虚拟机实例迁移</p><ul><li>静态迁移：停止当前的虚拟机，迁移内存，然后重新启动虚拟机</li><li>动态迁移：将源虚拟机的内存内容逐步推送到目标主机，在迁移过程中，如果出现脏页，则重新发送这些页面</li></ul><h2 id="进程通信">进程通信</h2><h3 id="网络通信">网络通信</h3><p>协议：对规则归纳总结，并加以形式化</p><p>OSI模型<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601884.png" alt=""></p><p>中间件协议</p><ul><li>提供高级通信协议</li><li>实现数据包装和解包装</li><li>支持资源命名和动态发现</li><li>提供复制和缓存优化性能</li></ul><h3 id="远程过程调用">远程过程调用</h3><h4 id="RPC-概念">RPC 概念</h4><p>RPC特性</p><ul><li>透明性：对用户来说，远程调用和本地调用几乎没有区别，隐藏了网络通信的细</li><li>同步调用：调用方在收到返回结果前会被阻塞，适合紧耦合的服务交互</li></ul><p>存根：客户端存根负责将远程过程调用转化为一个网络请求消息，并将传递参数依据通用格式封装进请求中，发送给服务器存根，服务器存根解析请求消息，得到传递参数，然后执行远程过程，将结果再通过消息返回给客户端存根<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601880.png" alt=""></p><p>客户端-服务器绑定：先通过目录服务器找到服务器所在的机器，然后在目标机器上找到运行服务器的进程<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601882.png" alt=""></p><h4 id="RPC-类型">RPC 类型</h4><ul><li>普通RPC：客户端发送请求后等待服务器返回结果</li><li>异步RPC：客户端发送请求后只等待只等待请求被接收的确认，无需等待服务器的处理请求的结果，客户端可以继续执行其他任务</li><li>延迟异步RPC：在异步RPC的基础上，服务器处理完请求后，主动通知客户端结果，然后等待来自客户端对结果的确认</li><li>多播RPC：发送RPC请求到一组服务器上</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601883.png" alt=""></p><h3 id="面向消息的通信">面向消息的通信</h3><h4 id="瞬态通信">瞬态通信</h4><p>瞬态通信（Transient）：通信双方需要同时在线</p><p>套接字（Socket）：一种通信端点，应用程序通过套接字直接进行消息传递<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601885.png" alt=""><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601886.png" alt=""></p><p>消息传递接口（Message-Passing Interface, MPI）：是一种用于并行计算和分布式计算的标准化消息传递库接口<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601887.png" alt=""></p><h4 id="持久通信">持久通信</h4><p>持久通信（Persistent）：在发送方和接收方不需要同时在线的情况下，依然能够确保消息的可靠传递</p><p>消息队列系统：发送方将请求消息放入队列后即可继续处理其他任务，接收方按需从队列中获取消息，发送方不需要在接收方运行的时候才能发送请求，接收方也不需要在发送方运行的时候才能处理请求<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601888.png" alt=""></p><p>队列管理器：查找映射信息，将消息从发送方路由到目标队列所在的主机和端口<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601889.png" alt=""></p><p>消息路由器：对消息进行路由与转发，确保消息能够准确地从发送方传递到接收方，也就是说，队列管理器不将消息发给目标队列，而是发给消息路由器，减少本次存储消耗，将工作转移到消息路由器来处理<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601890.png" alt=""></p><p>消息转换器：解决不同应用或系统之间消息格式不兼容的问题，将输入消息转换为目标应用能够识别和处理的格式<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601891.png" alt=""></p><h3 id="面向流的通信">面向流的通信</h3><p>面向流的通信：是一种专注于连续数据传输的通信方式</p><ul><li>连续性：数据以连续的流形式传输，而不是独立的消息或分段</li><li>时间敏感：对延迟和抖动有较高要求</li><li>双向通信：支持互相通信</li></ul><p>服务质量（Quality of Service, QoS）</p><ul><li>数据传输的比特率</li><li>创建会话的最大延时</li><li>端到端的最大延时</li><li>最大延时抖动</li><li>最大往返延时</li></ul><p>QoS技术</p><ul><li>缓冲区：调节速率差异，减少丢包和延迟，提高传输效率</li><li>编码：压缩数据提高效率，或加入冗余信息检测和纠正传输错误</li><li>帧交织：分散传输错误，减少连续错误的影响，提高数据恢复能力</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601892.png" alt=""></p><h3 id="多播通信">多播通信</h3><h4 id="基于网络协议">基于网络协议</h4><p>直接使用IP协议实现多播功能，将数据包高效地发送到一组接收方</p><ul><li>成本高：网络层支持多播通常需要专门的硬件配置和路由协议</li><li>部署受限：多播路由器和协议通常不在公共网络上部署，否则会造成大量网络拥堵</li></ul><h4 id="基于覆盖网络（Overlay）">基于覆盖网络（Overlay）</h4><p>Overlay Network：在应用层构建一个覆盖网络，用逻辑连接代替底层物理连接，在应用层通过逻辑连接确定多播的接收方<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601893.png" alt=""></p><p>评估</p><ul><li>链路压力：一个数据包在多播通信中重复经过同一个链路的次数</li><li>延迟比：覆盖网络中两个节点之间的通信延迟与底层物理网络中直接通信的延迟的比值</li><li>树成本：多播树中所有链路成本的总和，通常由链路的带宽占用、延迟、跳数等指标决定</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601894.png" alt=""></p><h4 id="基于Gossip">基于Gossip</h4><p>闲聊/感染协议：基于局部信息和概率传播的多播方式</p><ul><li>每个节点只需了解直接相邻的节点，不需要全局的拓扑信息</li><li>节点接收到数据后，随机选择若干目的地，将消息传播给它们</li><li>无严格交付保证，需要多轮传播，才能确保消息会覆盖网络大部分节点</li><li>适合高并发的分布式系统中，多节点间的状态同步或数据广播</li><li>存在消息冗余，浪费带宽资源</li><li>延迟较大，需多轮传播</li></ul><h4 id="总结">总结</h4><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601895.png" alt=""></p><ul><li>Overlay适合数据分发和实时通信，如分布式文件共享和流媒体分发</li><li>Gossip适合状态同步和数据广播，如分布式数据库和动态传感器网络</li></ul><h2 id="命名系统">命名系统</h2><h3 id="基本概念">基本概念</h3><p>命名系统：用于标识和访问分布式系统中资源的机制，通过名称将资源与其具体位置或属性关联起来，便于用户和系统之间的交互</p><p>组成</p><ul><li>名称：标识分布式系统中实体对象的可读字符串</li><li>标识符：唯一标识分布式系统中某个实体的名称</li><li>实体：分布式系统中的任何事物</li><li>访问点：访问实体的入口，提供与实体交互的接口</li><li>地址：访问点的名称，提供实体的物理或逻辑位置</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601896.png" alt=""></p><h3 id="无层次命名">无层次命名</h3><p>定义：命名只是单纯的标识符，可能是随机生成的字符串，没有层次结构，不包含位置信息</p><p>基于网络：通过网络广播或多播的方式查询目标名称对应的实体或资源（ARP协议）</p><p>转发指针：当实体移动时，在当前位置留下到下一个位置的<br>指针，客户端只需要沿着指针链搜索，找到之后更新自己的指针记录<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601897.png" alt=""></p><p>宿主地址：利用一个固定位置的宿主主机记录实体地址，客户端需要联系宿主获取实体地址<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601898.png" alt=""></p><p>分层定位：创建一个大规模的搜索树，底层的网络被划分成多个分层的域，每一个域由一个目录节点表示，实体地址存储在叶子节点上<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601899.png" alt=""></p><p>分布式哈希表（DHT）：将每个实体和资源的名称通过哈希函数映射为固定长度的键值，从客户端出发，通过邻居信息逐步查询，直到找到目标键值的后继节点</p><p>Chord系统</p><ul><li>实体有键值，资源也有键值，且他们是不冲突的</li><li>资源存储在第一个实体键值大于等于其资源键值的实体上</li><li>键值有m位，则键值范围是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mtext>～</mtext><msup><mn>2</mn><mi>m</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0 ～ 2^m - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mord cjk_fallback">～</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li><li>键值有m位，则指状表有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>条栏目</li><li>第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>条栏目指向距离当前节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mo stretchy="false">(</mo></msup><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2^(i-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>后的第一个存在节点</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601900.png" alt=""></p><h3 id="结构化命名">结构化命名</h3><p>无层次名称只适用于机器理解，结构化命名适合人类阅读，比如基于目录结构的文件命名和基于层次的主机命名</p><p>命名图：叶节点标识实体名称，还可以存储实体属性等信息，非叶子节点作为目录节点具有多条边<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601901.png" alt=""></p><p>命名空间</p><ul><li>全局层：由根节点以及其他逻辑上靠近根节点的目录节点组成</li><li>行政层：由那些在单个组织内一起被管理的目录节点组成</li><li>管理层：由经常改变的节点组成</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601905.png" alt=""></p><p>迭代式解析：客户端负责主动与每一级名称服务器交互，每次请求一个服务器，获取下一步的解析地址，直到最终获取资源的具体地址<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601902.png" alt=""></p><p>递归式解析：客户端将解析请求交给一个名称服务器，由该名称服务器代替客户端完成所有后续解析，最终将结果返回给客户端<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601904.png" alt=""></p><h3 id="基于属性的命名">基于属性的命名</h3><p>定义：直接通过实体的属性和值对资源进行标识和查询，而不是依赖简单的名称</p><ul><li>意义：通过实体的属性查询实体很方便</li><li>挑战：查找操作代价高，需要进行属性值匹配和比对</li></ul><p>实现方式</p><ul><li>集中式目录服务：所有属性和值数据存储在一个中心化的目录服务器中</li><li>层次化目录服务（LDAP）：属性和值以目录信息树的层次结构组织，每个节点表示一个属性</li><li>去中心化目录服务：属性和值分布式存储在多个节点中，没有单一的目录服务器</li><li>语义覆盖网络：节点按照特定的属性值语义（如主题、内容、属性等）进行组织和连接，只连接具有相似语义兴趣的节点</li></ul><h2 id="同步性">同步性</h2><h3 id="时钟">时钟</h3><h4 id="网络时间协议">网络时间协议</h4><p>网络时间协议（Network Time Protocol, NTP）：客户端向时间服务器发送时间同步请求，服务器返回当前时间、时间戳和其他相关信息，客户端计算往返延迟并校正本地时钟<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601906.png" alt=""></p><p>客户端修复：选择时间延迟最小值作为服务器之间的延迟，对应的时间偏移更可靠</p><ul><li>时间偏移 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>偏移</mtext><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>T</mi><mn>2</mn><mo>−</mo><mi>T</mi><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>T</mi><mn>3</mn><mo>−</mo><mi>T</mi><mn>4</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\text{偏移} = \frac{(T2 - T1) + (T3 - T4)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">偏移</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">2</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">3</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">4</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>时间延迟 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>偏移</mtext><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>T</mi><mn>2</mn><mo>−</mo><mi>T</mi><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>T</mi><mn>4</mn><mo>−</mo><mi>T</mi><mn>3</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\text{偏移} = \frac{(T2 - T1) + (T4 - T3)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">偏移</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">2</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">4</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><h4 id="Berkeley算法">Berkeley算法</h4><p>Berkeley算法：通过系统中的各节点相互协作，计算出一个统一的平均时间，并调整各节点的本地时钟，使其尽可能同步</p><ol><li>选出一个节点作为协调者/时间守护程序，负责时间同步的计算和协调</li><li>协调者向所有节点发送时间请求</li><li>各节点将其本地时钟值连同响应的网络延迟返回给协调者</li><li>协调者根据收到的时钟值和估算的网络延迟，计算系统中所有时钟的平均时间</li><li>协调者计算每个节点的时间偏差，将偏差值发送给各节点，通知它们调整本地时钟</li><li>各节点根据接收到的偏差值调整本地时钟，使其接近平均时间</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601907.png" alt=""></p><h4 id="Lamport算法">Lamport算法</h4><p>逻辑时钟：关心事件发生的相对顺序，而不关心事件的实际发生时间</p><p>基于“Happens-before”</p><ul><li>相同进程内，如果a先于b发生，则a-&gt;b</li><li>不同进程间，如果a向b发送消息，则a-&gt;b</li><li>如果a-&gt;b,b-&gt;c则a-&gt;c</li><li>如果a和b无法通过上述两个规则定义顺序，则a||b</li></ul><p>Lamport算法：每个进程维护一个本地计数器C</p><ol><li>每次发生一个事件，进程将自己的计数器的值+1</li><li>进程发送消息给其他进程时，需要携带自己的时间戳<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>s</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ts(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></li><li>进程收到消息后，根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>C</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>t</mi><mi>s</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C_j = \max(C_j, ts(m)) + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>$调整自己的本地计数器</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601908.png" alt=""></p><p>全序多播：确保所有进程以相同顺序交付消息</p><ol><li>消息发送：P_1 发送消息 m_1，附加时间戳 ts(m_1) = 1，并将消息存入自己的队列 queue_1。</li><li>消息接收：P_2 接收到消息 m_1，将其放入自己的队列 queue_2，并广播确认消息</li><li>消息排序：每个进程根据消息时间戳对队列中的消息进行排序。</li><li>消息交付：当所有进程都收到了 m_1 的确认消息，且 m_1 是 P_2 的队列头部时，P_2 才会将 m_1 交付给应用程序。</li></ol><p>局限性</p><ul><li>Lamport算法只能说a在b之前发生，但不代表b发生和a有关系</li><li>Lamport算法无法区分并发事件</li></ul><h4 id="向量时钟">向量时钟</h4><p>基于因果关系（causality）：如果a的向量时钟的全部分量都小于b的向量时钟，说明a有可能在因果关系上先于b，否则它们可能是并发的</p><p>向量时钟算法：每个进程维护维护一个向量时钟，每个分量 V_i[k] 表示当前进程 P_i 所知道的关于进程 k 的逻辑时钟</p><ol><li>本地事件：当一个进程 P_i 执行一个事件时，更新向量时钟自己的分量，V_i[i] = V_i[i] + 1</li><li>发送消息：当 P_i 发送一条消息 m 时，它将当前的向量时钟 V_i 附加到消息中，作为消息的时间戳 V_m</li><li>接收消息 当 P_j 接收消息 m 时，逐一更新每个进程的时钟，V_j[k] = \max(V_j[k], V_m[k])</li><li>交付消息：P_j 增加自己的分量，V_j[j] = V_j[j] + 1</li></ol><p>强制因果有序：P_j 交付 P_i 的消息 m 当且仅当</p><ul><li>P_j 希望接收 m：V_j[i] + 1 = V_m[i]</li><li>P_j 已经接收了所有前置消息：V_j[k] &gt;= V_m[k] (k != i)</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601909.png" alt=""></p><h3 id="互斥">互斥</h3><p>互斥：同一时间内，共享资源只能由一个进程访问</p><p>集中式算法：选举一个进程作为协作者，进程需要向协作者发送资源请求，协作者根据全局信息来判断请求是否被允许<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601912.png" alt=""></p><p>Ricart &amp; Agrawala算法：当进程要访问一个共享资源的时候，需要构造一个请求消息，发布给全部进程（包括自己），当且仅当接收到全部进程的OK消息，才能使用该资源</p><ol><li>接收进程在临界区内没有访问需求，直接返回OK</li><li>接收进程在临界区已获得对资源的访问，不应答，将请求放入队列</li><li>接收进程也在请求该资源，如果收到消息的时间戳比自己请求的时间戳小，则返回OK，将请求放入队列</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601910.png" alt=""></p><p>令牌环算法：将进程组织成逻辑环，令牌在这些进程之间传递，只有获得令牌的进程才能进入临界区访问共享资源<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601911.png" alt=""></p><h3 id="选举">选举</h3><p>选举：分布式系统中需要选取一个进程来作为特殊角色，实现特殊功能</p><p>Bully算法：假定每个节点都有唯一的 ID，ID 越大优先级越高</p><ol><li>如果节点发现当前的领导者失效（或未能响应），发起者向所有比自己 ID 大的节点发送选举消息</li><li>收到选举消息的节点会回应，表明自己存活，同时如果自己的 ID 更大，它会成为新的发起者，再次向所有比自己 ID 大的节点发送选举消息</li><li>如果某一阶段发起者没有收到任何回应，说明它的优先级最高，它将广播宣布自己为领导者</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601913.png" alt=""></p><p>Ring算法：假定所有节点组织成一个逻辑环，每个节点仅与它的前后节点直接通信</p><ol><li>如果节点发现领导者失效，它会将自己的 ID 放入选举消息中，并传递给下一个节点</li><li>每个节点收到选举消息后，比较消息中的 ID 与自己的 ID，选择较大的 ID，将消息继续传递</li><li>当消息传递一圈回到发起者时，发起者发现消息中的 ID 是最大的，宣布该 ID 的节点为新领导者，并广播确认消息</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601914.png" alt=""></p><h2 id="一致性">一致性</h2><h3 id="副本管理">副本管理</h3><p>副本的意义</p><ul><li>提高可靠性：即使某些节点故障，仍可以使用其他副本来维持服务</li><li>提高性能：副本的数量和位置可以根据客户端的地理分布或请求负载动态调整</li></ul><p>副本放置</p><ul><li>客户端感知：最小化客户端与副本服务器之间的平均距离，从而降低访问延迟</li><li>客户端非感知：优先选择具有最大带宽的来部署副本服务器</li><li>基于区域：在每个区域内选择一个低延迟节点部署副本</li></ul><p>副本类型</p><ul><li>永久副本：在系统设计时就静态配置，是稳定的存储节点，用于长期保存数据</li><li>服务器发起的副本：由服务器根据负载或访问模式动态生成和管理，用于优化系统性能</li><li>客户端发起的副本：当客户端访问某些数据时，本地保存一份缓存副本以降低重复请求</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601917.png" alt=""></p><p>内容分发</p><ul><li>类型：传播更新通知，传播更新数据，传播更新操作</li><li>推送机制：服务器主动向副本推送更新，适合读多写少的场景，客户端可以即时获取最新数据，但是可能导致不必要的网络开销</li><li>拉取机制：客户端或副本主动从服务器拉取更新，适合读少写多的场景，可以降低服务器负担，但是客户端可能会延迟获取最新数据</li></ul><p>CAP理论：一致性、可用性和分区容忍性不可兼得，因此分布式系统通常要牺牲一定程度的一致性</p><ul><li>一致性：客户端的读操作要么读到最新的数据，要么读取失败</li><li>可用性：任何客户端的请求都能得到响应数据</li><li>分区容忍性：不同分区间的消息丢失或延迟到达时，系统仍会继续提供服务，不会挂掉</li></ul><h3 id="以数据为中心的一致性">以数据为中心的一致性</h3><p>持续一致性：允许副本之间存在一定范围的偏差（数值、新旧程度、操作顺序）</p><p>顺序一致性：所有进程看到的操作顺序必须与程序员指定的操作顺序一致<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601915.png" alt=""></p><p>因果一致性：如果操作 A 导致了操作 B，则所有进程必须以相同的顺序观察到 A 和 B，但是并发操作可以按不同顺序处理<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601916.png" alt=""></p><p>操作分组一致性：将一组读写操作视为一个整体，确保它们在所有副本间的一致性</p><h3 id="以客户为中心的一致性">以客户为中心的一致性</h3><p>单调读：用户读取的数据版本只能是越来越新的，永远不会回退到旧版本</p><p>单调写：用户的写操作按顺序提交，后续写操作不会覆盖早期的写入</p><p>写后读一致性：读之前检查写操作集，用户写入的数据必须在后续读取中可见</p><p>读后写一致性：写之前检查读操作集，用户的写操作必须基于最近读取的数据，保证不会基于陈旧数据写入</p><h3 id="一致性协议">一致性协议</h3><p>主备份写–远程写：所有写操作都发送到主副本，由主副本执行写入并同步次副本<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601918.png" alt=""></p><p>主备份写–本地写：每个副本都可以充当主副本，但只处理本地写操作，之后，将更新同步到其他副本<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601919.png" alt=""></p><p>全副本写</p><ul><li>全复制写：所有副本同时接收写操作，并以相同的顺序执行</li><li>基于法定人数：写操作只需要发送到法定人数（Quorum）的副本集合，读操作从另一个法定人数集合中获取数据</li></ul><h2 id="容错性">容错性</h2><h3 id="故障">故障</h3><p>容错：允许系统部分组件失效，但系统仍可继续运行</p><p>可靠的系统</p><ul><li>可用性：系统在某一时间点可用，强调时刻</li><li>可靠性：长时间运行而不中断，强调时段</li><li>安全性：系统在出现故障后不会造成灾难</li><li>可维护性：系统能够快速检测并修复故障</li></ul><p>区分：故障导致错误，错误导致失败</p><ul><li>失败：系统未能提供预期的服务，用户视角</li><li>错误：系统内部状态偏离了其正确状态，软件视角</li><li>故障：系统组件中的缺陷或问题，底层视角</li></ul><p>故障类型</p><ul><li>暂时故障：一次性短暂故障，可能在不干预的情况下自动恢复</li><li>间歇故障：以周期性方式出现的故障，较难排查</li><li>持久故障：持续存在且需人工修复的故障，如芯片燃烧、磁盘损坏</li></ul><p>故障模式</p><ul><li>崩溃性：服务器停机（如操作系统进程错乱）</li><li>遗漏性：系统未能正确发送或接收消息（如网络传输错误）</li><li>定时性：系统未能按预期时间完成任务（如网络拥堵或阻塞过久）</li><li>响应性：系统返回错误的结果（如格式不符合）</li><li>随意性：又称为拜占庭故障，表现为系统的任意失效，随机返回结果，包括恶意行为</li></ul><h3 id="冗余掩盖故障">冗余掩盖故障</h3><p>信息冗余：通过附加信息来检测、定位或纠正错误<br>时间冗余：通过快速重复执行操作以掩盖临时故障<br>物理冗余：通过添加硬件组件来提供备用资源，应对硬件或软件故障</p><p>三倍模块冗余：通过在系统中复制三个独立的模块来执行相同的任务，并对其输出结果进行多数投票来决定最终的正确结果，如果一个模块出现故障（如硬件故障或计算错误），系统依然能够通过多数投票获得正确的结果，从而容忍单点故障</p><ul><li>通过复制和投票机制实现，设计和实现较为简单，可以快速检测故障</li><li>无法应对拜占庭故障，只是假设故障模块只会提供错误输出，而不是恶意或冲突的输出</li><li>可扩展性差，当需要容忍多个故障时，三倍的设计不足以满足需求</li></ul><h3 id="进程容错">进程容错</h3><p>通过创建多个进程副本构造容错进程组，把一个进程组作为一个单一抽象进程来处理，如果其中一个进程失败，可以让其他进程来接管它，从而实现故障掩盖</p><p>容错度：最多k个组件出现故障，系统仍能运行</p><ul><li>停止失效故障：进程组至少k+1个进程成员才能达到k容错度，也就是剩下一个可用的进程</li><li>随意性故障：进程组至少2k+1个进程成员才能达到k容错度，也就是说需要k+1个正确的输出在数量上多于k个错误的输出</li></ul><h3 id="故障检测">故障检测</h3><p>基于超时机制</p><ul><li>主动查询：进程 P 主动向进程 Q 发送探测消息并等待回复</li><li>被动等待：进程 P 被动地等待进程 Q 发来心跳消息</li><li>区分网络故障和节点故障：请邻居结点进行多方检查</li></ul><h3 id="RPC失效">RPC失效</h3><p>客户不能定位服务器：比如服务器关闭、服务端版本变化，客户端需要抛出异常，一定程度上损失透明性</p><p>丢失请求消息：客户端设置超时时间，未收到服务器响应时，重新发送请求，如果总是超时则认为网络错误</p><p>服务器崩溃：执行后崩溃，或者是执行前崩溃</p><ul><li>至少一次语义：不断尝试，直到得到应答</li><li>最多一次语义：立即放弃，并报告失败</li><li>不保证：RPC可能任意执行多次</li><li>恰好一次语义：理想情况，但无法实现</li></ul><p>丢失应答消息：客户端设置超时时间，未收到服务器响应时，重新发送请求</p><ul><li>幂等请求：重复执行不会造成任何影响</li><li>非幂等请求：同一个请求不能被执行两遍，需要通过标识符来确保服务器只处理一次</li></ul><p>客户崩溃：服务器上为该请求创建的进程或线程失去了与客户端的联系，服务器可能仍在处理该请求，造成资源浪费</p><ul><li>消灭：客户端根据日志向服务器通告杀死孤儿进程</li><li>再生：向服务器通知进入新周期，杀死旧周期与客户端相关的孤儿</li><li>温和再生：服务器会尝试找回client，如果找<br>不到拥有者则杀死孤儿</li><li>过期：每个RPC都被给定一个标准的时间量 T 来进行工作，超时后需要申请延期，否则会被终止</li></ul><h3 id="分组通信">分组通信</h3><p>接收方在成功接收到消息后返回ACK信号，如果发送方未在指定时间内收到ACK，判断消息丢失并重发，会引发ACK风暴<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601922.png" alt=""></p><p>接收方检测到消息丢失时主动发送NACK信号，其他接收方收到NACK就暂时抑制自己的NACK，发送方根据NACK重发丢失的消息，发送发不得不缓存大量分组以等待重发<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601923.png" alt=""></p><p>层次化多播，将所有接收进程分成若干小组，每个小组由一个协调者管理，协调者负责转发来自接收方的消息或来自其他协调者消息<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601924.png" alt=""></p><h3 id="分布式提交">分布式提交</h3><p>准备阶段</p><ol><li>协调者向所有参与者发送 “准备好提交吗？” 的投票请求（Vote-request）</li><li>参与者根据当前状态回复：同意提交（Vote-commit）或者拒绝提交（Vote-abort）</li></ol><p>提交阶段</p><ol><li>如果所有参与者都回复 Vote-commit，协调者发送 Global-commit，所有节点执行事务</li><li>如果有任一参与者回复 Vote-abort，协调者发送 Global-abort，所有节点中止事务</li></ol><p>失效情况</p><ul><li>参与者在 INIT 下超时，发送 Vote-abort，自己直接 Abort</li><li>协调者在 WAIT 下超时，发送 Global-abort，自己直接 Abort</li><li>参与者在 READY 下超时，获取其他参与者的状态<ul><li>都处于 READY 状态，继续等待协调者恢复</li><li>有一个处于 INIT 状态，自己 Abort</li><li>返回 COMMIT，执行提交</li><li>返回 ABORT，执行终止</li></ul></li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601925.png" alt=""></p><h3 id="恢复处理">恢复处理</h3><p>类别</p><ul><li>回退恢复：从错误状态返回到先前的正确状态</li><li>前进恢复：从某个状态开始执行到正确状态</li></ul><p>分布式快照 / 检查点：是分布式系统中每个进程的状态记录，以在系统故障时从检查点恢复</p><ul><li>独立检查点：每个进程创建检查点，但无法保证一致性，可能需要不断回滚到更早的检查点（多米诺效应）</li><li>协调检查点：检查点的创建由一个协调者统一触发，确保所有进程的状态是一致的，但检查点的开销较高，需要阻塞所有进程直到全局检查点完成</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601926.png" alt=""></p><p>消息日志：通过记录分布式系统中进程之间的消息传递历史，结合检查点，用于故障恢复的一种机制</p><ul><li>悲观日志：每条消息在应用之前记录到稳定存储，可能导致较高延时</li><li>乐观日志：每条消息在应用之后记录到稳定存储，可能会导致孤儿进程</li><li>因果日志：只记录与因果一致性相关的消息日志，但是实现很复杂</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601927.png" alt=""></p><h2 id="分布式协定协议">分布式协定协议</h2><p>分布式协定协议是为了解决分布式系统中在存在故障时，非故障进程能够在有限步骤内达成一致性的一类协议</p><h3 id="基于泛洪">基于泛洪</h3><p>基于泛洪的共识协议</p><ol><li>任一节点发现系统存在故障时，生成提案消息并通过泛洪传播</li><li>每个节点记录接收到的消息，转发给未收到该消息的节点</li><li>所有节点对消息的收敛状态达成一致</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601921.png" alt=""></p><h3 id="Paxos">Paxos</h3><p>节点角色：节点可以同时扮演多个角色</p><ul><li>提议者：提出要达成一致的值</li><li>接受者：决定是否接受提议者提出的值</li><li>学习者：获取被接受的值并更新</li></ul><p>执行轮次</p><ol><li>准备阶段<ol><li>提议者增加自己的轮次编号rnd，向所有接受者发送prepare消息，带上rnd</li><li>如果收到的rnd小于last_rnd，接受者则忽略请求</li><li>否则更新本地的last_rnd，回复一个promise消息，带有prev_rnd和prev_rnd对应的值v</li></ol></li><li>接受阶段<ol><li>提议者收到大多数的promise消息后，选择其中prev_rnd最大的消息对应的v，作为新提议的值</li><li>提议者发送accept消息，带上rnd和选定的值v</li><li>如果收到的rnd小于last_rnd，接受者则忽略请求，否则更新值为v</li></ol></li><li>学习阶段<ol><li>接受者将接受的值v广播给所有学习者</li><li>学习者一旦收到来自大多数接受者的值v，则更新自己的值</li></ol></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601920.png" alt=""></p><p>正确性</p><ul><li>决策主要是基于多数派</li><li>一旦一个值被多数派接收，那么后续都不会改变这个决定</li><li>不会同时存在两个不同的值被选为最终值</li></ul><p>局限性</p><ul><li>仅支持单个值的一致性</li><li>活锁问题：反复出现提议者，导致整个协议长时间没有结果或者崩溃</li><li>需要两轮消息传递才能确定一个值</li></ul><h3 id="RAFT">RAFT</h3><p>节点角色：</p><ul><li>跟随者：被动接受心跳或命令</li><li>候选者：在选举中自荐为领导者</li><li>领导者：负责处理客户端请求和日志复制</li></ul><p>工作流程</p><ol><li>候选者通过发送请求投票来选举，每次选举节点只能投票一次</li><li>如果某个候选者获取多数票，则成为领导者</li><li>领导者接收客户端命令，将其追加到日志中，同时将日志复制/覆盖到其他服务器</li><li>领导者按照分布式日志提交给每个节点的状态机执行，强行让整个系统恢复一致性</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601928.png" alt=""></p><p>局限性</p><ul><li>依赖于日志，如果磁盘损坏将会导致错误</li><li>领导者需要讲日志覆盖到全部节点，时间开销大</li><li>如果领导者崩溃，会导致选举新的领导者，期间无法处理客户端请求</li><li>领导者需要向全部节点发送心跳信号，来通知领导者有效</li></ul><h3 id="BFT">BFT</h3><p>BFT可以解决拜占庭协议问题，确保系统可以容忍最多f个恶意节点，前提是总节点数满足n &gt; 3f + 1</p><p>工作机制</p><ol><li>主节点提议一个值，向备份节点广播该值</li><li>备份节点接受主节点的提议，进一步广播消息与其他备份节点交换信息</li><li>每个备份节点都收到了来自其他节点的值，如果有超过 2f+1 个节点给出相同的值，则认为该值是最终协定值</li></ol><p>性质</p><ul><li>消息复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，随着节点数量增加，通信开销迅速增长</li><li>BFT假设系统是同步的，不适用现实情况</li></ul><h3 id="PBFT">PBFT</h3><p>工作流程</p><ol><li>请求阶段：客户端向主节点发送request消息</li><li>主节点收到请求后，广播pre-prepare消息给备份节点</li><li>备份节点收到请求后，广播PREPARE消息给其他备份节点</li><li>每个节点收集到2f + 1的PREPARE消息后，广播COMMIT消息给其他节点</li><li>当某个节点收到2f + 1条COMMIT消息后，认为请求已达成共识并将其执行，然欧向客户端发送REPLY消息</li><li>客户端在收到f + 1条一致的回复后，认为操作成功</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601929.png" alt=""></p><p>性质</p><ul><li>PBFT假设系统是异步的，利用标识符和多轮确认，可以处理消息延迟</li><li>消息复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>当主节点失效时，触发视图变更的过程需要额外的通信和时间成本</li></ul><h2 id="分布式文件系统">分布式文件系统</h2><p>属性</p><ul><li>文件系统的客户端、服务器、存储分散在不同物理机器上</li><li>各个部件通过网络互连</li><li>对于用户来讲，使用起来是就像是集中式文件系统</li><li>文件的访问时间应该满足QoS的要求</li><li>支持并发文件更新，支持多用户</li></ul><h3 id="NFS：基于客户-服务器">NFS：基于客户-服务器</h3><p>架构</p><ul><li>客户端通过VFS屏蔽本地和远程文件系统的差异</li><li>NFS客户端使用RPC来操作远程文件</li><li>NFS服务器提供其本地文件系统的视图</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601930.png" alt=""></p><p>优势：利用VFS支持异构系统，容易部署</p><p>局限性：访问速度受限于网络带宽，不适用于大规模集群环境</p><h3 id="HDFS：基于集群">HDFS：基于集群</h3><p>架构</p><ul><li>NameNode/主服务器：管理文件系统的元数据，将所有元数据存储在内存中，使用日志和检查点机制保证元数据一致性</li><li>DataNode/块服务器：存储实际数据块，定期向NameNode发送心跳信号报告状态</li><li>客户端：与NameNode/主服务器交互以获取元数据，与DataNode/块服务器交互以读写数据</li></ul><p>优势</p><ul><li>可靠性高：多副本存储实现数据可靠性</li><li>扩展性高：只需要修改主服务器就可以快速部署块服务器</li></ul><p>局限性：主服务器过载可能成为性能瓶颈</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601931.png" alt=""></p><h3 id="Ivy：对称式">Ivy：对称式</h3><p>架构</p><ul><li>基于P2P技术，无中央服务器，所有节点功能相同，任何节点都可以提供文件共享服务</li><li>利用分布式哈希表，实现节点间高效的数据定位</li><li>文件被分块存储，块通过 DHash 分散在不同的节点上</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DistributedSystem/chapter3-10/202501011601932.png" alt=""></p><p>优势</p><ul><li>高可用性：自动应对节点故障</li><li>负载均衡：所有节点均可分担数据存储和访问请求</li><li>高扩展性：支持节点动态加入或退出</li></ul><p>局限性：节点间的协调和一致性维护需要额外开销</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恢复系统</title>
      <link href="/posts/27689e44/"/>
      <url>/posts/27689e44/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-概述">1. 概述</h2><p>故障类型</p><ul><li>事务故障<ul><li>逻辑错误：遇到非法输入、违反约束、数据溢出等内部情况而无法继续正常执行</li><li>系统错误：进入不良状态（死锁或内存不足），事务停滞无法执行</li></ul></li><li>系统崩溃：由于硬件、软件或电力等问题导致系统崩溃，所有活动事务中断</li><li>磁盘故障：磁头损坏或存储介质损坏造成数据无法访问或者数据损坏</li></ul><div class="note warning flat"><p>故障-停止假设：系统崩溃不会破坏非易失性存储中的数据</p></div><p>恢复算法</p><ol><li>需要保证存在足够信息用于故障恢复</li><li>需要保证恢复到某个保证数据库一致性、事务原子性和持久性的状态</li></ol><p>存储器类型</p><p>|类型|定义|性质|例子|<br>|-|-|-|<br>|易失性存储器（volatile storage）|在断电或系统崩溃后，数据丢失|容量较小，读写速度非常快，常用于存储查询结果或中间计算数据|RAM、Cache|<br>|非易失性存储器（non-volatile storage）|在断电或系统崩溃后，数据仍然保存|容量较大，读写速度较慢，常用于存储表数据文件|SSD、HDD|<br>|稳定存储器（stable storage）|在断电或系统崩溃后，数据不仅可以保存，而且即使丢失也能恢复|利用冗余数据存储技术，常用于存储日志文件|RAID 阵列、云存储|</p><h2 id="2-数据访问机制">2. 数据访问机制</h2><div class="note info flat"><p>这在操作系统已经讲过了</p></div><p>驻留在磁盘上的块成为物理块，驻留在内存缓冲区中的块成为缓冲块，工作中的内存从缓冲块中读取所需要的数据进行访问，然后将读取完或更改后的数据写回缓冲块，内存缓冲区最后负责将缓冲块写回磁盘</p><p>内存缓冲区写回块原因</p><ol><li>内存缓冲区不够新块进入，需要替换一些不常使用的块</li><li>操作系统强制将块写回</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201657.png" alt=""></p><h2 id="3-基于日志的恢复">3. 基于日志的恢复</h2><h3 id="3-1-日志">3.1 日志</h3><p>日志：记录了数据库中所有更新活动，是按时间排序的日志记录序列</p><p>日志中的事务类型</p><ul><li>start：事务开始</li><li>commit：事务提交</li><li>abort：事务中止</li></ul><p>更新日志记录描述了一次数据库写操作，由以下字段组成</p><ul><li>标识：执行write操纵的事务的唯一标识</li><li>数据项标识：是所写数据项的唯一标识，即数据项在磁盘上的确切位置</li><li>旧值：数据项的写前值</li><li>新值：数据项的写后值</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201658.png" alt=""></p><p>日志操作</p><ol><li>撤销（UnDo）：当且仅当日志中只有事务的start记录，需要将该日志记录中指定数据项置为日志记录中包含的旧值</li><li>重做（ReDo）：当且仅当日志中有事务的start和abort/commit记录，需要将该日志记录中指定数据项置为日志记录中包含的新值</li></ol><table><thead><tr><th>方案</th><th>立即修改</th><th>延迟修改</th></tr></thead><tbody><tr><td>更新时机</td><td>事务未提交就更新缓冲区或磁盘</td><td>事务提交后才更新缓冲区或磁盘</td></tr><tr><td>日志记录</td><td>每一次更新前必须先写日志</td><td>只在提交前写日志</td></tr><tr><td>性能</td><td>支持高并发、实时性强</td><td>强一致性</td></tr><tr><td>适用场景</td><td>交易系统</td><td>仓库管理</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201659.png" alt=""></p><h3 id="3-2-检查点（checkpoint）">3.2 检查点（checkpoint）</h3><p>全日志扫描局限性</p><ul><li>从头往后扫描日志，重做或回滚所有记录在日志中的事务，可能会非常耗时</li><li>对于许多已经提交且数据已写入磁盘的事务，重做这些事务是没有必要的</li></ul><p>检查点执行</p><ol><li>输出日志记录：将主存中所有日志记录写入到稳定存储，确保所有日志在检查点之前完成持久化</li><li>将缓冲区数据块写入磁盘，确保提交事务真正应用到数据库</li><li>往稳定存储器中输出一条检查点记录，其中L记录了此事仍然活跃的事务</li></ol><div class="note warning flat"><p>上述过程中，需要禁止一切事务执行任何更新动作，确保检查点的有效性</p></div><p>检查点恢复</p><ol><li>从后往前扫描日志找到最近的检查点，得到仍然活跃的事务列表L</li><li>从检查点开始向后扫描，对L中的事务执行Redo和Undo操作</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201660.png" alt=""></p><div class="note success flat"><p>检查点除了可以减小扫描范围和重做次数，它还可以用于日志清理，L中最早的start记录之前的所有日志，都可以被安全删除，释放存储空间</p></div><h3 id="3-3-恢复算法">3.3 恢复算法</h3><ol><li>重做阶段：从检查点往后扫描<ol><li>一旦遇到更新日志记录或redo-only记录，就执行重做操作</li><li>一旦发现start记录，就将事务加入undo-list</li><li>一旦发现abort/commit记录，就将事务从undo-list去除</li></ol></li><li>撤销阶段：从后往前扫描<ol><li>一旦发现更新日志记录的事务属于undo-list，就执行撤销操作</li><li>一旦发现start记录的事务属于undo-list，就添加一条该事务的abort记录，并把该事务从undo-list去除</li><li>一旦undo-list变为空，则停止撤销阶段</li></ol></li></ol><div class="note warning flat"><p>重复历史：重做阶段是全部执行的，撤销阶段是条件执行的，虽然多了一些重做操作，但是从整体上来看确保了恢复的高效</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201662.png" alt=""></p><h2 id="4-缓冲区管理">4. 缓冲区管理</h2><h3 id="4-1-日志记录缓冲">4.1 日志记录缓冲</h3><p>日志记录缓冲：将事务生成的日志记录先存储在主存中的缓冲区，而不是立即写入稳定存储，只有当遇到特殊情况时，才将日志记录批量写入磁盘</p><ul><li>日志缓冲区满：需要写入磁盘来腾出空间</li><li>事务提交：强制将将事务相关日志记录写入磁盘</li><li>定时触发：操作系统定时器，周期性地将日志写入磁盘</li></ul><p>日志先写规则（Write-Ahead Logging, WAL）</p><ol><li>commit日志记录输出到稳定存储器后，事务才进入commit状态</li><li>commit日志记录输出到稳定存储器前，与事务有关的日志记录必须全部输出到稳定存储器</li><li>缓冲块输出到磁盘前，该块上所有数据有关的所有日志都必须输出到稳定存储器</li></ol><h3 id="4-2-数据库缓冲">4.2 数据库缓冲</h3><p>|策略|定义|性能|<br>|-|-|-|-|<br>|Steal|允许将未提交的块提前写回磁盘|缓冲区管理灵活，但恢复很复杂|<br>|No-force|事务提交时，修改的数据块不需要立即写回磁盘|加快事务提交，减少磁盘I/O，但空间开销大|<br>|Force|事务提交时，修改的数据块必须立即写回磁盘|恢复过程简单，提交事务的修改已持久化，减少数据丢失风险，但时间开销大|</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201663.png" alt=""></p><p>内存锁：防止提交时该块被其他事务进行修改</p><ol><li>在将块写入磁盘前，获取该块的独占内存锁</li><li>在写入数据块之前，执行日志刷新操作，确保与该块相关的日志记录已安全存储在稳定存储中</li><li>将数据块写入磁盘</li><li>写入完成后，释放内存锁，允许其他操作访问该块</li></ol><div class="note warning flat"><p>内存锁和并发控制中的锁没有关系，只要事务的写操作不在该块上，就不会阻塞事务的执行</p></div><h3 id="4-3-模糊检查点（Fuzzy-Checkpoint）">4.3 模糊检查点（Fuzzy Checkpoint）</h3><table><thead><tr><th>特性</th><th>普通检查点</th><th>模糊检查点</th></tr></thead><tbody><tr><td>事务处理</td><td>暂停所有其他事务，直到检查点完成</td><td>允许事务在生成检查点的同时继续处理</td></tr><tr><td>脏块处理</td><td>一次性将所有脏块写入磁盘</td><td>分阶段写回脏块</td></tr><tr><td>日志记录</td><td>记录活动事务的状态</td><td>记录活动事务状态，并标记脏块列表</td></tr><tr><td>恢复过程</td><td>写日志，写回全部脏块</td><td>先写日志，再写部分脏块，最后更新 last_checkpoint 指针</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201664.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并发控制</title>
      <link href="/posts/7b6fb0d3/"/>
      <url>/posts/7b6fb0d3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-锁机制">1. 锁机制</h2><h3 id="1-1-锁的模式">1.1 锁的模式</h3><p>|类型|拥有|功能|适用|<br>|-|-|-|<br>|排他锁（Exclusive Lock, X-Lock）|只允许一个事务拥有数据的排他锁|拥有排他锁的事务可以对数据进行读和写操作，同时禁止其他事务对该数据进行任何操作|需要修改数据，如UPDATE|<br>|共享锁（Shared Lock, S-Lock）|允许多个事务拥有同一数据的共享锁|拥有共享锁的多个事务都可以读取数据，但是任何事务都不能对数据进行更改|只需要读取数据，如SELECT|</p><p>相容性</p><ul><li>被共享锁锁住的数据，事务可以申请该数据的共享锁，但是不能申请该数据的排他锁</li><li>被排他锁锁住的数据，事务不能申请该数据的任何锁</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201647.png" alt=""></p><p>锁的授予流程</p><ol><li>事务向并发控制管理器发出锁请求 <code>lock-X/S(data)</code></li><li>并发控制管理器根据规则决定是否授予锁 <code>grant-X/S(T,data)</code></li><li>如果成功获取锁，事务继续执行，否则事务被迫阻塞等待</li><li>事务执行完毕或者不再需要对数据加锁，则释放锁 <code>unlock-X/S(data)</code></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201648.png" alt=""></p><h3 id="1-2-锁的问题">1.2 锁的问题</h3><p>死锁（deadline）：多个事务彼此等待对方的锁释放，形成了闭合的等待链，从而陷入了<strong>无限阻塞的状态</strong>（如下图，T4等待T3释放锁B，T3等待T4释放锁A，陷入了死锁）</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201649.png" alt=""></p><p>饥饿（starvation）：某个数据一直被申请共享锁，导致某个对该数据申请排他锁的事务陷入了<strong>长期等待的状态</strong></p><p>破坏冲突可串行化：事务因等待锁而被迫阻塞，使得事务之间的冲突顺序不再与某种串行调度等价</p><h3 id="1-3-封锁协议">1.3 封锁协议</h3><p>封锁点（lock point）：调度中事务获得最后锁的位置</p><table><thead><tr><th>协议</th><th>特点</th><th>优点</th></tr></thead><tbody><tr><td>两阶段封锁协议（2PL）</td><td>在增长阶段事务只能请求锁，在缩减阶段事务只能释放锁</td><td>按封锁点顺序确保了冲突可串行化</td></tr><tr><td>严格两阶段封锁协议（Strict 2PL）</td><td>排他锁必须在事务必须在提交或回滚后才能释放</td><td>避免了级联回滚，保证调度的可恢复性</td></tr><tr><td>强两阶段封锁协议（Rigorous 2PL）</td><td>所有锁必须在事务提交或回滚后才能释放</td><td>完全避免所有并发问题，按提交点顺序确保了冲突可串行化</td></tr><tr><td>带锁转换的两阶段封锁协议（Lock Conversions）</td><td>允许在增长阶段将共享锁升级为排他锁，允许在缩减阶段将排他锁降级为共享锁</td><td></td></tr></tbody></table><div class="note warning flat"><p>事务一开始处于增长阶段，一旦释放了锁就转为缩减阶段，且无法返回增长阶段</p></div><h3 id="1-4-锁管理器">1.4 锁管理器</h3><p>功能</p><ol><li>管理事务的锁请求与释放，以及要求事务等待锁</li><li>通过**锁表（Lock Table）**记录所有已授予的锁和未决的锁请求</li><li>如果发生死锁，锁管理器可能要求某些事务回滚，以打破循环依赖</li></ol><p>锁表：根据数据项名称为索引的散列表来查找一个数据项的链表，链表记录了<strong>由哪个事务提出的锁请求，请求什么模式的锁，以及请求是否被授予还是处于等待</strong></p><ul><li>锁请求：如果数据项已经存在链表，锁管理器在链表末尾增加一条新的请求记录，否则为该数据项创建一个仅包含该请求记录的新链表</li><li>锁解除：锁管理器从链表中删除解锁事务的请求记录，然后检查链表中随后的请求记录能否被授予</li><li>事务中止：锁管理器会删除该事务持有的所有锁记录，以及该事务的所有等待请求记录</li></ul><div class="note warning flat"><p>锁授予前提</p><ol><li><strong>当前事务的锁请求与已授予的锁相兼容</strong></li><li><strong>之前的相同模式锁请求都已被授予（遵循FIFO）</strong></li></ol></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201650.png" alt=""></p><h3 id="1-5-树型协议">1.5 树型协议</h3><p>数据库图：是一个有向无环图（DAG），用来表示数据项之间的部分顺序约束关系</p><ul><li>节点代表数据库中的数据项</li><li>有向边<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>→</mo><msub><mi>d</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">d_i \to d_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>意味着如果一个事务访问了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">d_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，它必须先访问<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后才能访问<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">d_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></li><li>可以选择一个没有入边的节点作为树的根节点，将有向无环图转换为树</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201651.png" alt=""></p><p>规则</p><ol><li><strong>事务只能对数据项加排他锁</strong> -&gt; 所有数据访问都以写操作为主</li><li><strong>事务的首次封锁可以在任何数据项上进行</strong> -&gt; 没有固定的起点限制</li><li><strong>事务对一个数据项Q加锁的前提是事务当前持有Q的父节点的锁</strong> -&gt; 事务必须按树自顶向下的顺序访问数据项</li><li><strong>事务对数据项解锁可以随时进行</strong> -&gt; 不局限于两阶段，没有扩展阶段和收缩阶段的限制</li><li><strong>一个数据项被T加锁并解锁之后，T不能随后再对该数据项加锁</strong> -&gt; 确保事务只访问一次每个数据项</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201652.png" alt=""></p><p>性质</p><ul><li>优点：保证了冲突可串行化，不会产生死锁，可以随时解锁不需要再访问的的数据项</li><li>缺点：不保证可恢复性，无法避免级联回滚，需要给根本不访问的父亲数据项加锁来访问子数据项，不支持动态顺序</li></ul><h2 id="2-死锁处理">2. 死锁处理</h2><div class="note info flat"><p>很像操作系统</p></div><h3 id="2-1-死锁避免（prevention）">2.1 死锁避免（prevention）</h3><table><thead><tr><th>策略</th><th>定义</th><th>缺点</th></tr></thead><tbody><tr><td>一次性封锁</td><td>在每个事务开始执行之前必须封锁它所需要的全部数据项</td><td>降低并发性</td></tr><tr><td>优先级封锁</td><td>为所有数据项设定一个固定的次序（优先级），只能按照次序来封锁数据项</td><td>灵活性受限</td></tr><tr><td>等待死亡（wait-die）</td><td>老事务可以等待新事务，如果出现新事务等待老事务则回滚新事务</td><td>产生频繁或不必要的回滚</td></tr><tr><td>伤害等待（wound-wait）</td><td>新事务可以等待老事务，如果出现老事务等待新事务则回滚新事务</td><td>产生频繁或不必要的回滚</td></tr><tr><td>锁超时（timeout）</td><td>申请锁的事务至多等待一段指定的时间，否则会自动回滚并重启</td><td>无法区分死锁和长等待，需要合理设置超时时间</td></tr></tbody></table><div class="note warning flat"><p>最简单的策略就是一次性封锁和锁超时，但由于前者会破坏并发性，因此实际情况下很少使用，而后者通常作为一种辅助配合其他策略使用</p></div><h3 id="2-2-死锁检测与恢复（detection-and-recovery）">2.2 死锁检测与恢复（detection and recovery）</h3><p>等待图（wait-for graph）：顶点集是事务集合，边Ti-&gt;Tj表示事务Ti正在等待事务Tj释放封锁的数据项</p><p>死锁检测：系统维护等待图，并周期性地在等待图中执行搜索环路算法，当且仅当等待图中包含环路时，系统中存在死锁</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201653.png" alt=""></p><p>死锁恢复</p><ol><li>根据以下代价因素，来选择破解环路需要牺牲/回滚哪一个或哪一些事务</li></ol><ul><li>事务已经执行了多久，还需要执行多久</li><li>事务当前封锁了多少数据项，事务还需要封锁多少数据项</li><li>回滚会牵扯到多少个事务需要级联回滚</li><li>事务的优先级</li></ul><ol start="2"><li>不回滚整个事务，而是只回滚导致死锁的部分操作</li><li>防止有些事务总是被牺牲从而长时间无法执行</li></ol><h2 id="3-多粒度（granularity）">3. 多粒度（granularity）</h2><p>多粒度：数据项可以指代不同层次的数据，其中最粗粒度为整个数据库，最细粒度为一个元组/记录，粒度越粗，锁的范围越大，事务可以一次性锁住更多数据</p><p>粒度控制：如果事务显式对粗粒度封锁，那么事务会隐式对其下细粒度也封锁</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201654.png" alt=""></p><p>意向锁（intention lock）：当事务需要<strong>给某个细粒度节点显式加锁前，他会给该节点的所有祖先节点都加上意向锁</strong>，因此如果某个节点存在意向锁，就代表他的某个后代节点存在该锁，从而避免在给粗粒度节点加锁时遍历全树</p><div class="note warning flat"><p>意向锁只用于声明某个事务的意图，不会实际锁住数据项</p></div><p>多粒度封锁协议</p><ul><li>加锁顺序必须从根节点开始，按照自顶向下的顺序加锁</li><li>解锁顺序必须按照自底向上的顺序加锁</li><li>两阶段封锁，即一旦开始解锁就不能再加锁</li><li>只有拥有父节点的IX或IS，才能对子节点加S或IS</li><li>只有拥有父节点的IX或SIX，才能对子节点加X、SIX或IX</li><li>锁必须满足相容性矩阵</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201655.png" alt=""></p><h2 id="4-数据库操作">4. 数据库操作</h2><h3 id="4-1-插入和删除">4.1 插入和删除</h3><div class="note info flat"><p>之前一直聚焦于对数据项read和write，相当于DML中的select和update，现在聚焦于增加和删除数据项，相当于DML中的insert和delete</p></div><p>冲突情况</p><ol><li>删除数据项之后，不能对该数据项进行select、update和delete</li><li>插入数据项之前，不能对该数据项进行select、update和delete</li><li>不存在数据项，则不能进行delete</li><li>已存在数据项，则不能进行insert</li></ol><p>锁规则</p><ul><li>在对某个数据项执行删除操作之前，事务必须获得该数据项的排他锁</li><li>当事务向数据库插入新元组时，系统会自动为该新元组分配一个排他锁，并且在提交时才解锁</li></ul><h3 id="4-2-谓词读和幻读">4.2 谓词读和幻读</h3><p>谓词读（Predicate Read）：实际上就是<strong>带有where条件的select操作</strong></p><p>幻读（Phantom Read）：谓词读期间，其他事务对查询范围内的数据进行了插入、更新和删除，导致查询结果的记录数发生了变化</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201656.png" alt=""></p><table><thead><tr><th>处理措施</th><th>定义</th></tr></thead><tbody><tr><td>基于信息</td><td>给所有具有谓词信息的数据项加共享锁</td></tr><tr><td>基于索引</td><td>利用索引查询，给所有索引叶节点加共享锁</td></tr></tbody></table><div class="note warning flat"><p>锁定信息或索引不会与锁定数据项冲突</p></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>事务</title>
      <link href="/posts/6d75022e/"/>
      <url>/posts/6d75022e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-事务">1. 事务</h2><p>ACID 特性</p><table><thead><tr><th>特性</th><th>解释</th><th>意义</th></tr></thead><tbody><tr><td>原子性（Atomicity）</td><td>确保事务是数据库执行的最小单位，即事务的操作要么全部成功反映到数据库中，要么完全不执行回滚到事务开始前的状态</td><td>防止事务部分执行导致数据不一致</td></tr><tr><td>一致性（Consistency）</td><td>确保数据库在事务执行前后，数据始终符合完整性约束</td><td>保证数据库的合法性</td></tr><tr><td>隔离性（Isolation）</td><td>确保多个事务并发执行时，彼此不互相干扰</td><td>防止并发冲突</td></tr><tr><td>持久性（Durability）</td><td>确保事务提交后的数据永久保存</td><td>确保数据可靠性，不会因为故障导致数据丢失</td></tr></tbody></table><p>事务的五种状态</p><table><thead><tr><th>状态</th><th>含义</th><th>下一刻状态</th></tr></thead><tbody><tr><td>活动（Active）</td><td>事务正在执行</td><td>部分提交、失败</td></tr><tr><td>部分提交（Partially Commited）</td><td>事务完成所有操作，但尚未提交</td><td>提交</td></tr><tr><td>提交（Commited）</td><td>事务成功执行并提交，更改已经永久保存</td><td>事务周期结束</td></tr><tr><td>失败（Failed）</td><td>事务被中断或事务出错无法继续执行</td><td>终止</td></tr><tr><td>终止（Aborted）</td><td>事务回滚，更改被撤销</td><td>事务周期结束</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201637.png" alt=""></p><h2 id="2-调度">2. 调度</h2><p>调度机制：保留每个事务内部的操作顺序的前提下，决定多个事务的全部指令如何顺序执行</p><ul><li>串行调度：多个事务按照顺序执行，即一个事务的全部指令执行完毕后，另一个事务才开始执行</li><li>并发调度：可以交替执行来自多个事务的不同指令</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201638.png" alt=""><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201639.png" alt=""></p><div class="note warning flat"><p>n个事务有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">n!</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">n</span><span class="mclose">!</span></span></span></span>种串行调度方式</p></div><p>优势</p><ol><li>提高CPU和磁盘利用率，使得不同事务可以利用系统的不同资源</li><li>减少事务的平均响应时间，提升用户体验</li></ol><p>挑战</p><ol><li>脏读（Dirty Read）：事务A读取了事务B修改尚未提交的数据，如果该数据之后被回滚，事务A读取到的值就是错的</li><li>幻读（Phantom Read）：一个事务在两次读取同一行数据的期间，数据被其他事务更改，导致读取的结果不同</li></ol><h2 id="3-可串行化">3. 可串行化</h2><p>调度的可串行化（Serializable）：即使事务操作交替执行，调度仍能保持数据库的一致性，也就是说调度的执行结果与某种串行调度的执行结果相同</p><p>冲突</p><ul><li>冲突行为：两个来自不同事务的操作作用于同一个数据项，且至少有一个是写操作</li><li>冲突等价：两个调度具有相同的事务集合和冲突行为集合（上图中，调度3冲突等价于调度1）</li><li>冲突可串行化：当前调度与某种串行调度是冲突等价的</li></ul><p>优先图：顶点集由参与到调度中的所有事务构成，边集中的边满足下列三条件</p><ul><li>在事务A执行read(Q)之前，事务B执行write(Q)</li><li>在事务A执行write(Q)之前，事务B执行read(Q)</li><li>在事务A执行write(Q)之前，事务B执行write(Q)</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201641.png" alt=""><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201640.png" alt=""></p><p>定理</p><ol><li>串行调度的优先图一定不存在环</li><li>如果某种调度的优先图不存在环，则该调度是冲突可串行化的</li></ol><p>根据<strong>对优先图的拓扑排序</strong>，可以得出与调度冲突等价的所有串行调度</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201642.png" alt=""></p><p>视图可串行化：最终结果是否与某种串行调度一致，包含了冲突可串行化，限制更加宽松</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201643.png" alt=""></p><h2 id="4-可恢复调度">4. 可恢复调度</h2><p>可恢复的（Recoverable）：对于每对事务T1和T2，如果T2读取了事务T1之前所写过的数据，则事务T1必须先于T2提交</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201645.png" alt=""></p><p>级联回滚（cascading rollback）：一个事务回滚后，其他依赖于该事务且未提交的事务也必须回滚</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201646.png" alt=""></p><h2 id="5-隔离性级别">5. 隔离性级别</h2><ul><li>可串行化（serializable）：最严格，事务完全串行化执行</li><li>可重复读（repeatable read）：只允许读取已提交数据，同时不允许其他事务更新正在读的数据</li><li>已提交读（read committed）：只允许读取已提交数据，但可以允许其他事务修改正在读的数据</li><li>未提交读（read uncommitted）：最宽松，允许读取未提交数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查询优化</title>
      <link href="/posts/7e1296ef/"/>
      <url>/posts/7e1296ef/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-含义">1. 含义</h2><p>考虑以下两个表达式树，他们代表的表达式等价，即结果一样，但右边的代价是更小，这是因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>d</mi><mi>e</mi><mi>p</mi><msub><mi>t</mi><mi>n</mi></msub><mi>a</mi><mi>m</mi><mi>e</mi><mo>=</mo><mi>M</mi><mi>u</mi><mi>s</mi><mi>i</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{dept_name=Music}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">p</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的位置不同</p><ul><li>左边：先连接，再选择，这会造成大量的无用连接</li><li>右边：先选择，再连接，提前过滤掉全部不满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>d</mi><mi>e</mi><mi>p</mi><msub><mi>t</mi><mi>n</mi></msub><mi>a</mi><mi>m</mi><mi>e</mi><mo>=</mo><mi>M</mi><mi>u</mi><mi>s</mi><mi>i</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{dept_name=Music}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">p</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的元组</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201665.png" alt=""></p><p>查询计划：决定了查询表达式中每个操作<strong>应该使用什么算法</strong>，并指定这些操作<strong>应该以什么顺序执行</strong></p><p>查询优化器：产生一个最优查询执行计划，该计划能计算出与给定初始表达式相同的结果，并且能以最小或接近最小的代价来执行</p><ol><li>产生逻辑上与给定表达式等价的表达式</li><li>以可替代的方式对所产生的表达式做注释，以产生备选的查询计划</li><li>估计每个执行计划的代价，选择估计代价最小的一个</li></ol><p>表达式等价：在每个合法的数据库实例上都会产生相同的元组集合</p><ul><li>合法：数据库实例必须满足所有完整性约束</li><li>集合：不关注元组的顺序</li></ul><p>查询计划评估因素</p><ul><li>统计信息：元组数量，属性值数量，分布情况</li><li>中间结果：中间结果对后续操作成本的影响</li><li>算法成本：连接、排序、选择等操作所使用算法的代价</li></ul><p>MySQL查看查询计划：<code>explain &lt;query&gt;</code></p><ul><li>id：查询的标识符，区分不同子查询和主查询</li><li>select_type：查询类型<ul><li>SIMPLE：普通查询（没有子查询）</li><li>PRIMARY：主查询</li><li>SUBQUERY：子查询</li></ul></li><li>table：查询的表</li><li>type：连接类型<ul><li>ALL：全表扫描</li><li>index：索引扫描</li><li>range：范围扫描</li><li>ref：非唯一索引扫描</li><li>const：常量匹配</li><li>NULL：不需要访问表</li></ul></li><li>possible_keys：可能使用到的索引</li><li>key：实际使用到的索引</li><li>key_len：用于查询的索引长度</li><li>rows：预估扫描的行数</li><li>Extra：额外信息<ul><li>Using where：查询是否包含 WHERE 过滤</li><li>Using filesort：查询是否需要排序</li><li>Using index：查询是否使用了索引</li></ul></li></ul><h2 id="2-等价转换">2. 等价转换</h2><h3 id="2-1-规则">2.1 规则</h3><ol><li><p><strong>合取选择运算可分解为单个选择运算的级联</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>θ</mi><mn>1</mn><mo>∧</mo><mi>θ</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>σ</mi><mrow><mi>θ</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>θ</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{\theta 1 \land \theta 2}(E) = \sigma_{\theta 1}(\sigma_{\theta 2}(E))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">1</span><span class="mbin mtight">∧</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span></span></span></span></p></li><li><p><strong>选择运算满足交换律</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>θ</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>θ</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><msub><mi>σ</mi><mrow><mi>θ</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>θ</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{\theta 1}(\sigma_{\theta 2}(E)) = \sigma_{\theta 2}(\sigma_{\theta 1}(E))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span></span></span></span></p></li><li><p><strong>投影运算的级联等于最外层的投影运算</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>L</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>L</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">(</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>L</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>L</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{L1}(\Pi_{L2}(...(\Pi_{Ln}(E))...)) = \Pi_{L1}(E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">...</span><span class="mopen">(</span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mord">...</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>选择运算+笛卡尔积 = 连接运算</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo>×</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mn>1</mn><msub><mo>⋈</mo><mi>θ</mi></msub><mi>E</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\sigma_{\theta}(E1 \times E2) = E1 \bowtie_{\theta} E2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span></span></span></span></p></li><li><p><strong>连接运算满足交换律</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mn>1</mn><msub><mo>⋈</mo><mi>θ</mi></msub><mi>E</mi><mn>2</mn><mo>=</mo><mi>E</mi><mn>2</mn><msub><mo>⋈</mo><mi>θ</mi></msub><mi>E</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">E1 \bowtie_{\theta} E2 = E2 \bowtie_{\theta} E1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span></span></span></span></p></li><li><p><strong>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\theta2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">2</span></span></span></span>不涉及E1属性时，选择运算对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>连接运算满足结合律</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>（</mtext><mi>E</mi><mn>1</mn><msub><mo>⋈</mo><msub><mi>θ</mi><mn>1</mn></msub></msub><mi>E</mi><mn>2</mn><mtext>）</mtext><msub><mo>⋈</mo><msub><mi>θ</mi><mn>2</mn></msub></msub><mi>E</mi><mn>3</mn><mo>=</mo><mi>E</mi><mn>1</mn><msub><mo>⋈</mo><msub><mi>θ</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>E</mi><mn>2</mn><msub><mo>⋈</mo><msub><mi>θ</mi><mn>2</mn></msub></msub><mi>E</mi><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">（E1 \bowtie_{\theta_1} E2） \bowtie_{\theta_2} E3 = E1 \bowtie_{\theta_1} (E2 \bowtie_{\theta_2} E3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9334em;vertical-align:-0.2501em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9334em;vertical-align:-0.2501em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9334em;vertical-align:-0.2501em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\theta1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">1</span></span></span></span>只涉及E1的属性时，选择运算对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>连接运算满足分配律</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><msub><mi>θ</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><msub><mo>⋈</mo><mi>θ</mi></msub><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>σ</mi><msub><mi>θ</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msub><mo>⋈</mo><mi>θ</mi></msub><mi>E</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\sigma_{\theta_1}(E1 \bowtie_{\theta} E2) = (\sigma_{\theta_1}(E1)) \bowtie_{\theta} E2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span></span></span></span></p></li><li><p><strong>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>只涉及投影属性时，投影运算对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>连接运算满足分配律</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>L</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><msub><mo>⋈</mo><mi>θ</mi></msub><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">Π</mi><mi>L</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>L</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo stretchy="false">)</mo><msub><mo>⋈</mo><mi>θ</mi></msub><msub><mi mathvariant="normal">Π</mi><mrow><mi>L</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_L(E1 \bowtie_{\theta} E2) = \Pi_L(\Pi_{L1}(E1) \bowtie_{\theta} \Pi_{L2}(E2))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">))</span></span></span></span></p></li><li><p><strong>选择运算对集合的并、交、差满足分配律</strong>：</p></li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo>∪</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo stretchy="false">)</mo><mo>∪</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo>∩</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo stretchy="false">)</mo><mo>∩</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo>−</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{\theta}(E1 \cup E2) = \sigma_{\theta}(E1) \cup \sigma_{\theta}(E2)\\\sigma_{\theta}(E1 \cap E2) = \sigma_{\theta}(E1) \cap \sigma_{\theta}(E2)\\\sigma_{\theta}(E1 - E2) = \sigma_{\theta}(E1) - \sigma_{\theta}(E2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p><ol start="10"><li><strong>投影运算对并运算满足分配律</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>L</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo>∪</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><msub><mi mathvariant="normal">Π</mi><mi>L</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo stretchy="false">)</mo><mo>∪</mo><msub><mi mathvariant="normal">Π</mi><mi>L</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_L(E1 \cup E2) = \Pi_L(E1) \cup \Pi_L(E2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></li></ol><h3 id="2-2-示例">2.2 示例</h3><p>对于以下表达式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>M</mi><mi>u</mi><mi>s</mi><mi>i</mi><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∧</mo><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo>⋈</mo><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>s</mi><mo>⋈</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{name, title}(\sigma_{deptname=&#x27;Music&#x27; \land year=2017}(instructor \bowtie (teaches \bowtie \Pi_{courseid, title}(course))))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">pt</span><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight"><span class="mrel mtight">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">in</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">es</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">rse</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rse</span><span class="mclose">))))</span></span></span></span></span></p><p>根据自然连接的交换律得到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>M</mi><mi>u</mi><mi>s</mi><mi>i</mi><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∧</mo><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo>⋈</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>s</mi><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{name, title}(\sigma_{deptname=&#x27;Music&#x27; \land year=2017}((instructor \bowtie teaches) \bowtie \Pi_{courseid, title}(course)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">pt</span><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight"><span class="mrel mtight">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">((</span><span class="mord mathnormal">in</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">es</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">rse</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rse</span><span class="mclose">)))</span></span></span></span></span></p><p>根据选择运算对连接运算的分配律得到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>M</mi><mi>u</mi><mi>s</mi><mi>i</mi><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∧</mo><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo>⋈</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{name, title}((\sigma_{deptname=&#x27;Music&#x27; \land year=2017}(instructor \bowtie teaches)) \bowtie \Pi_{courseid, title}(course))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">((</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">pt</span><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight"><span class="mrel mtight">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">in</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">es</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">rse</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rse</span><span class="mclose">))</span></span></span></span></span></p><p>根据选择运算对连接运算的分配律得到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>M</mi><mi>u</mi><mi>s</mi><mi>i</mi><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi>σ</mi><mrow><mo>∧</mo><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>t</mi><mi>i</mi><mi>t</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{name, title}((\sigma_{deptname=&#x27;Music&#x27;}(instructor) \bowtie \sigma_{\land year=2017}(teaches)) \bowtie \Pi_{courseid, title}(course))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">((</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">pt</span><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight"><span class="mrel mtight">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">in</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∧</span><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">es</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">rse</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rse</span><span class="mclose">))</span></span></span></span></span></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201633.png" alt=""></p><h3 id="2-3-枚举">2.3 枚举</h3><p>枚举算法</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201635.png" alt=""></p><p>局限性：生成所有可能的等价表达式需要重复地对每个子表达式应用等价转换规则，计算量呈指数级增长，同时需要存储所有生成的等价表达式，可能导致内存使用量过大</p><p>优化方法</p><ol><li>只根据代价模型选择最有潜力的等价转换规则来应用</li><li>检测和消除重复的子表达式，利用指针指向相同的子表达式实现共享</li><li>利用动态规划算法来确定最优连接次序</li></ol><h2 id="3-统计信息">3. 统计信息</h2><p>统计信息存储在系统目录中</p><ul><li>关系r的元组总数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">n_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>关系r的块总数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">b_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>关系r的一个元组的字节数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">l_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>关系r的元组存储密度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub><mo>=</mo><mo stretchy="false">⌊</mo><mfrac><msub><mi>n</mi><mi>r</mi></msub><msub><mi>b</mi><mi>r</mi></msub></mfrac><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">f_r = \lfloor \frac{n_r}{b_r} \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1951em;vertical-align:-0.4451em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7115em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span></span></span></span></li><li>关系r的属性A的非重复值数量：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(A, r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></li><li>属性值的分布情况：直方图</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter15-19/202412251201636.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查询处理</title>
      <link href="/posts/2e9d5c8b/"/>
      <url>/posts/2e9d5c8b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-查询处理">1. 查询处理</h2><p>处理流程</p><ol><li>查询分析：检查查询语句的拼写、语法、权限、安全性等</li><li>查询翻译：将查询语句转换为内部的表示形式，通常是<strong>关系代数表达式</strong></li><li>查询优化：构造具有最小查询执行代价的查询执行计划（原语操作序列）</li><li>查询执行：代码生成器接受优化器的查询执行计划并生成内部执行代码，然后由执行引擎执行代码并返回结果</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202412091542494.png" alt=""></p><p>查询原语：数据库引擎用来执行查询操作的基本运算步骤</p><ul><li><strong>选择（selection）</strong>：根据选择条件筛选元组</li><li><strong>连接（join）</strong>：根据连接条件合并两个元组</li><li><strong>排序（sort）</strong>：根据排序键排序元组</li><li><strong>投影（projection）</strong>：根据投影条件筛选属性</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202412091542488.png" alt=""></p><h2 id="2-查询代价">2. 查询代价</h2><p>影响因素</p><ul><li><strong>磁盘访问</strong>：读取或写入数据时进行磁盘 I/O 操作</li><li><strong>CPU资源</strong>：查询进程是否需要排队来等待调度</li><li><strong>网络通信</strong>：对于分布式数据库系统，数据分布在不同的网络节点上，需要考虑网络延迟</li></ul><p>代价度量</p><ul><li><strong>响应时间</strong>：查询从发起到返回结果所经历的时间</li><li><strong>资源消耗总量</strong>：执行查询时消耗的资源总量</li></ul><div class="note warning flat"><p>优化器通常努力去将查询计划的资源消耗总量降到最低，而不是努力将响应时间降到最低，这是因为<strong>准确的响应时间依赖于缓存和磁盘的物理布局，而数据库无法预先知道这些信息，也就无法预估响应时间</strong></p></div><p><strong>查询代价 = 传输次数 x 平均传输时间 + 寻道次数 x 平均寻道时间</strong></p><ul><li>假设平均传输时间和平均寻道时间<strong>固定不变</strong>，因此只需要计算传输次数和寻道次数</li><li><strong>如果两个块是相邻的，可以认为寻道时间为0</strong></li><li>基于<strong>最坏打算</strong>：初始缓冲区为空，且不利用缓冲区</li></ul><h2 id="3-选择运算">3. 选择运算</h2><p>假设数据库的总块数为b，索引树的高度为h，满足等值条件的块数为n</p><table><thead><tr><th>算法</th><th>传输次数</th><th>寻道次数</th><th>分析</th></tr></thead><tbody><tr><td>线性搜索，码上等值</td><td>最好1，最坏b，平均b/2</td><td>1</td><td>只需要寻道初始块，然后顺序读取全部块，只要发现等值即可停止扫描</td></tr><tr><td>线性搜索，非码上等值</td><td>b</td><td>1</td><td>只需要寻道初始块，然后顺序读取接下来的全部块</td></tr><tr><td>B+树聚集索引，码上等值</td><td>h+1</td><td>h+1</td><td>每一层索引块和最后的等值数据块需要一次寻道和一次传输</td></tr><tr><td>B+树聚集索引，非码上等值</td><td>h+n</td><td>h+1</td><td>聚集索引确保数据块之间的连续性，因此在索引的基础上，寻道1次，传输n次</td></tr><tr><td>B+树辅助索引，码上等值</td><td>h+1</td><td>h+1</td><td>每一层索引块和最后的等值数据块需要一次寻道和一次传输</td></tr><tr><td>B+树辅助索引，非码上等值</td><td>h+n</td><td>h+n</td><td>辅助索引需要对每个数据块都进行一次寻道</td></tr></tbody></table><p>合取/析取：假设数据库的总块数为b，码x和码y的索引树的高度为h1和h2，满足等值条件的块数为n1和n2（假设都是聚集索引）</p><table><thead><tr><th>算法</th><th>传输次数</th><th>寻道次数</th></tr></thead><tbody><tr><td>x索引，y线性</td><td>h1+1+b</td><td>h+2</td></tr><tr><td>分别索引</td><td>h1+h2+n1+n2</td><td>h1+h2+2</td></tr><tr><td>组合索引</td><td>h+1</td><td>h+1</td></tr></tbody></table><div class="note warning flat"><p>索引搜索相较于线性搜索，<strong>虽然可以减少了传输次数，但是增加了寻道次数</strong>，所以索引搜索更适合大规模数据（传输作为瓶颈），线性搜索更适合小规模数据（寻道作为瓶颈）</p></div><h2 id="4-排序运算">4. 排序运算</h2><p>假设一共有 B 个数据块，可用 M 个内存块</p><ol><li>内排序<ol><li>从磁盘中读取 M 个数据块到内存中</li><li>在内存中对这 M 个数据块进行内排序</li><li>将排序后的 M 个数据块作为 1 个归并段写回磁盘</li><li>重复上述过程，直到所有数据块被处理完毕，一共生成生成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil B/M \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span></span></span></span>个归并段</li></ol></li><li>外排序<ol><li>为每个归并段分配 n 个内存块作为输入缓冲，同时必须保留 1 个内存块作为输出缓冲</li><li>对输入缓冲中的内存块进行外排序，将结果放入输出缓冲的内存块中</li><li>当输出缓冲的内存块满时，将该内存块写入磁盘作为新归并段的一部分</li><li>当输入缓冲的某个内存块空时，从对应的归并段中读取下一个数据块到输入缓冲</li><li>重复上述过程，直到所有小的归并段都处理完成，一次外排序可以处理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>M</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor M/n \rfloor - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">/</span><span class="mord mathnormal">n</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个归并段</li></ol></li><li>重复第 2 步，直到得到最后唯一的全局有序的归并段，一共进行了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy="false">⌊</mo><mi>M</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log_{\lfloor M/n \rfloor - 1}(\lceil B/M \rceil)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">⌋</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span></span></span></span>趟归并</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202412091542489.png" alt=""></p><p>传输次数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>B</mi><mo>+</mo><mn>2</mn><mi>B</mi><mo>∗</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy="false">⌊</mo><mi>M</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2B + 2B * log_{\lfloor M/n \rfloor - 1}(\lceil B/M \rceil)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">⌋</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>B</mi></mrow><annotation encoding="application/x-tex">2B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>：内排序需要读取和写回全部数据块</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>B</mi><mo>∗</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy="false">⌊</mo><mi>M</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2B * log_{\lfloor M/n \rfloor - 1}(\lceil B/M \rceil)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">⌋</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span></span></span></span>：外排序每趟都需要读取和写回全部数据块</li></ul><p>寻道次数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo>+</mo><mn>2</mn><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo>∗</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy="false">⌊</mo><mi>M</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">2\lceil B / M \rceil + 2\lceil B / M \rceil * log_{\lfloor M/n \rfloor - 1}(\lceil B/M \rceil) - \lceil B / M \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">⌋</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">2\lceil B / M \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span></span></span></span>：每次创造一个归并段，都需要寻道起始块的位置和寻道归并段的位置</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo>∗</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy="false">⌊</mo><mi>M</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2\lceil B / M \rceil * log_{\lfloor M/n \rfloor - 1}(\lceil B/M \rceil)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">⌋</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span></span></span></span>：每次创造一个更大的归并段，都需要寻道起始归并段的位置和寻道更大归并段的位置</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mo stretchy="false">⌈</mo><mi>B</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">-\lceil B / M \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span></span></span></span>：注意最后一次外排序不需要写回，所以寻道次数变少了</li></ul><h2 id="5-连接运算">5. 连接运算</h2><div class="note info flat"><p>以下讨论的连接都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><msub><mo>⋈</mo><mi>θ</mi></msub><mi>s</mi></mrow><annotation encoding="application/x-tex">r \bowtie_\theta s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.655em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">b_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示关系x的块数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">n_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示关系x的元组数</p></div><h3 id="5-1-元组嵌套循环连接">5.1 元组嵌套循环连接</h3><p><strong>对于外关系中的每一元组，遍历内关系中的所有元组，检查是否满足连接条件</strong></p><ul><li>传输次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>n</mi><mi>r</mi></msub><mo>∗</mo><msub><mi>b</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">b_r + n_r * b_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6153em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：外关系的每一行都需要传输内关系的全部块</li><li>寻道次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>n</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">b_r + n_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：外关系的每一行都需要寻道内关系的起始块，从内关系回到外关系也需要寻道一次</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for each tuple_r in r:</span><br><span class="line">  for each tuple_s in s:</span><br><span class="line">    if join_condition(tuple_r, tuple_s):</span><br><span class="line">      add (tuple_r, tuple_s) to result</span><br></pre></td></tr></table></figure><h3 id="5-2-块嵌套循环连接">5.2 块嵌套循环连接</h3><p><strong>对于外关系中的每一块，遍历内关系中的所有块，检查是否满足连接条件</strong></p><ul><li>传输次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>b</mi><mi>r</mi></msub><mo>∗</mo><msub><mi>b</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">b_r + b_r * b_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：外关系的每一块都需要传输内关系的全部块</li><li>寻道次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><msub><mi>b</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">2 * b_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：从外关系进入内关系寻道一次，从内关系返回外关系寻道一次</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for each block_r of r:</span><br><span class="line">  for each block_s of s:</span><br><span class="line">    for each tuple_r in block_r:</span><br><span class="line">      for each tuple_s in block_s:</span><br><span class="line">        if join_condition(tuple_r, tuple_s):</span><br><span class="line">          add (tuple_r, tuple_s) to result</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>如果分配了M个数据块作为输出缓冲区，那么只有输出缓冲区满了才需要寻道写回</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>传输次数</mtext><mo>=</mo><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo stretchy="false">⌉</mo><mo>∗</mo><msub><mi>b</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\text{传输次数} = b_r + \lceil b_r/(M) \rceil * b_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">传输次数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>寻道次数</mtext><mo>=</mo><mn>2</mn><mo>∗</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\text{寻道次数} = 2 * \lceil b_r/(M) \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">寻道次数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)⌉</span></span></span></span></li></ul></div><h3 id="5-3-索引嵌套循环连接">5.3 索引嵌套循环连接</h3><p><strong>对于外关系的每个元组，利用索引直接选择内关系满足条件的行</strong></p><ul><li>传输次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>n</mi><mi>r</mi></msub><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>t</mi><mrow><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">b_r + n_r * cost_{index}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6153em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord mathnormal">cos</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>寻道次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>r</mi></msub><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>t</mi><mrow><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">n_r * cost_{index}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6153em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord mathnormal">cos</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">in</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for each tuple_r in r:</span><br><span class="line">  use index_s on tuple_s where join_condition:</span><br><span class="line">    add (tuple_r, tuple_s) to result</span><br></pre></td></tr></table></figure><h3 id="5-4-归并排序连接">5.4 归并排序连接</h3><p><strong>先对两个表进行内排序，然后在外排序的时候，只需要找到匹配的行，不需要进行实际的归并操作</strong></p><ul><li>传输次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo stretchy="false">(</mo><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>b</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3(b_r+b_s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><ul><li>内排序阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>b</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2(b_r+b_s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：读入和写回各需一次</li><li>外排序阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>b</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">b_r+b_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：只需要读入</li></ul></li><li>寻道次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">2(\lceil b_r/M \rceil + \lceil b_s / M \rceil) + \lceil b_r / b_b \rceil + \lceil b_s / b_b \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span></span></span></span><ul><li>内排序阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2(\lceil b_r/M \rceil + \lceil b_s / M \rceil)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span></span></span></span></li><li>外排序阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil b_r / b_b \rceil + \lceil b_s / b_b \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span></span></span></span></li></ul></li></ul><div class="note warning flat"><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>是内存中可以容纳的块数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">b_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是每个归并段分配的输入缓冲块数</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">runs_r = internel_sort(r)</span><br><span class="line">runs_s = internel_sort(s)</span><br><span class="line">for tuple_r, tuple_s in runs_r, runs_s:</span><br><span class="line">  if join_condition(tuple_r, tuple_s):</span><br><span class="line">    add (tuple_r, tuple_s) to result</span><br></pre></td></tr></table></figure><h3 id="5-5-哈希连接">5.5 哈希连接</h3><p><strong>构建阶段利用第一个哈希函数，将两个关系按照连接键的值划分到多个分区中；探测阶段利用第二个哈希函数，对相同分区的元组进行精确匹配</strong></p><ul><li>传输次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo stretchy="false">(</mo><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>b</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3(b_r+b_s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><ul><li>构建阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>b</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2(b_r+b_s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：每次读取或写入一个块需要一次传输</li><li>探测阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>r</mi></msub><mo>+</mo><msub><mi>b</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">b_r+b_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：只有读取需要一次传输，不需要写入</li></ul></li><li>寻道次数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">2(\lceil b_r / M \rceil + \lceil b_s / M \rceil) + \lceil b_r / b_b \rceil + \lceil b_s / b_b \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span></span></span></span><ul><li>构建阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">⌉</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2(\lceil b_r / M \rceil + \lceil b_s / M \rceil)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">⌉)</span></span></span></span>：每次读取或写入一个块需要一次寻道</li><li>构建阶段 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>r</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo><mo>+</mo><mo stretchy="false">⌈</mo><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">/</mi><msub><mi>b</mi><mi>b</mi></msub><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil b_r / b_b \rceil + \lceil b_s / b_b \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌉</span></span></span></span>：每次读取一个分区需要一次寻道</li></ul></li></ul><div class="note warning flat"><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>是内存中可以容纳的块数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">b_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是每个分区分配的输入缓冲块数</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">R = hash1(r)</span><br><span class="line">S = hash1(s)</span><br><span class="line">for area_r, area_s in R, S:</span><br><span class="line">    for tuple_r in area_r:</span><br><span class="line">      key_r = hash2(tuple_r)</span><br><span class="line">      for tuple_s in area_s:</span><br><span class="line">        key_s = hash2(tuple_s)</span><br><span class="line">          if key_r == key_s:</span><br><span class="line">            add (tuple_r, tuple_s) to result</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202412091542492.png" alt=""></p><h2 id="6-执行模式">6. 执行模式</h2><p>执行模式：如何处理包含多个运算的表达式</p><table><thead><tr><th>特性</th><th>物化</th><th>流水线</th></tr></thead><tbody><tr><td>定义</td><td>得到整个中间结果集后，存储磁盘中，后续的查询步骤从磁盘中获取数据</td><td>指每一步的计算结果直接传递给下一步进行处理</td></tr><tr><td>局限性</td><td>必须等待前一个操作完全执行完毕并物化结果；引入了将中间结果写回磁盘和从磁盘读取中间结果的时延</td><td>如果某个操作依赖于前一个操作的完整结果（聚合、排序），则流水线失效</td></tr><tr><td>适用场景</td><td>中间结果较小，且需要反复利用</td><td>操作可以并行处理，且中间结果是一次性使用的</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202412091542493.png" alt=""></p><p>驱动方式</p><ul><li>需求驱动模式 (Demand-Driven) / 拉模式（Pull）/ 按需模式（Lazy）：每当上游操作需要数据时，下游操作才生成数据</li><li>生产驱动模式 (Producer-Driven) / 推模式（Push） / 驱动模式（Eager）：下游操作不断执行，主动将数据传递给上游</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FrontEnd：CSS深入</title>
      <link href="/posts/f5e1ee56/"/>
      <url>/posts/f5e1ee56/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-选择器的优先级问题">1. 选择器的优先级问题</h2><h3 id="1-1-特异度（specificity）">1.1 特异度（specificity）</h3><ol><li>ID选择器的数量</li><li>类选择器、属性选择器、伪类的数量</li><li>标签选择器、伪元素选择器的数量</li></ol><p>考虑下面例子：前者的特异度比后者的特异度大</p><table><thead><tr><th>选择器</th><th>id</th><th>类</th><th>标签</th></tr></thead><tbody><tr><td>#nav .list li a:link</td><td>1</td><td>2</td><td>2</td></tr><tr><td>.hd ul.link a</td><td>0</td><td>2</td><td>2</td></tr></tbody></table><p>考虑下面代码：常用于设置基础样式和特殊样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">button</span> class=&quot;btn&quot;&gt;基础按钮&lt;/<span class="selector-tag">button</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">button</span> class=&quot;btn special&quot;&gt;特殊按钮&lt;/<span class="selector-tag">button</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">36em</span> .<span class="number">8em</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">226</span>, <span class="number">69</span>, <span class="number">17</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#090101</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.btn</span><span class="selector-class">.special</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#218de6</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><div class="note success flat"><p>优先级顺序：<strong>!important &gt; 内联样式 &gt; ID选择器 &gt; 类选择器 &gt; 标签选择器 &gt; 通配符</strong></p></div><h3 id="1-2-继承">1.2 继承</h3><p>继承：属性值与父元素对应的属性值一样</p><ul><li>自动继承：文本和字体相关的值</li><li>不自动继承：盒子模型相关的属性</li><li>显式继承：<code>inherit</code></li><li>显式不继承：<code>initial</code></li></ul><h2 id="2-盒子模型">2. 盒子模型</h2><div class="note warning flat"><p><strong>布局是通过CSS样式将HTML元素按照特定的规则在网页中排列和分布，决定了页面的结构和视觉呈现</strong></p></div><h3 id="2-1-组成">2.1 组成</h3><ol><li>内容（content）：元素实际展示内容的区域，通过属性<code>width、height</code>控制</li><li>内边距（padding）：内容和边框之间的距离，通过属性<code>padding、padding-top、padding-right、padding-bottom、padding-left</code>控制</li><li>边框（border）：包裹住内容和内边距的框线，通过属性<code>border、border-width、border-style、border-color</code>控制</li><li>外边距（margin）：当前元素与相邻元素之间的距离，通过属性<code>margin、margin-top、margin-right、margin-bottom、margin-left</code>控制</li></ol><p>图片</p><h2 id="3-四个方向的设置">3. 四个方向的设置</h2><p>以margin为例子</p><ul><li>一个值：<code>margin: 10px</code>，该值将同时应用于四个方向</li><li>两个值：<code>margin: 5px 15px</code>，第一个值作用于上下，第二个值作用于左右</li><li>三个值：<code>margin: 5px 10px 15px</code>，第一个值作用于上，第二个值作用于左右，第三个值作用于下</li><li>四个值：<code>margin 5px 10px 15px 20px</code>，按照<strong>上、右、下、左</strong>顺时针作用</li></ul><h3 id="2-3-边框">2.3 边框</h3><p>三个基本子属性：从左到右按顺序</p><ul><li>宽度：长度单位或者关键字（thin细、medium中、thick粗）</li><li>样式：none没有边框、solid实线、dashed虚线、dotted点线、double双线、groove凹槽、ridge脊槽、inset嵌入式、outset突出</li><li>颜色：关键字、rgb、十六进制或hsl</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">2px</span> solid red;</span><br></pre></td></tr></table></figure><p>border是同时设置四个方向的边框，如果要单独设置，需要显式单独指定</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">2px</span> solid red;</span><br><span class="line"><span class="attribute">border-right</span>: <span class="number">3px</span> dashed blue;</span><br></pre></td></tr></table></figure><p>特殊设置</p><ul><li>边框圆角（border-radius）：使元素的角变得圆润，单位是px</li><li>边框分离（border-collaspse）：常用于表格元素，默认值是合并边框，而<code>separate</code>使得表格的单元格边框保持分开，并通过<code>border-spacing</code>设置单元格间距</li></ul><div class="note success flat"><p>border的神奇应用：如果内容的宽度和高度都为0，那么边框之间会斜切形成一个三角形，此时再将颜色设置为透明<code>transparent</code>，则可以得到三角形</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;<span class="selector-tag">a</span>&quot;&gt;&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.a</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">100px</span> solid red;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">100px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">100px</span> solid green;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">100px</span> solid yellow;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>图片</p></div><h3 id="2-4-外边距合并">2.4 外边距合并</h3><p><code>margin-collapse</code>是默认行为，会将相邻的块级元素的<strong>上下 margin</strong>合并为一个边距，且大小取决于<strong>较大</strong>的margin值，而不是两个margin值的和</p><div class="note warning flat"><p>水平的margin是不会合并的</p></div><p>什么时候不会有外边距合并</p><ul><li>存在边框和内边距</li><li>不是块级布局</li><li>存在<code>overflow</code>属性</li></ul><h3 id="2-5-盒子类型">2.5 盒子类型</h3><p>通过属性<code>box-sizing</code>设置盒子类型</p><table><thead><tr><th>类型</th><th>content-box</th><th>border-box</th></tr></thead><tbody><tr><td>计算方式</td><td>width和height只包括内容</td><td>width和height包括内容、内边距和边框</td></tr><tr><td>常见用途</td><td>针对内容，元素尺寸 = 内容尺寸 + 内边距尺寸 + 边框尺寸</td><td>针对元素，内容尺寸 = 元素尺寸 - 边框尺寸 - 内边距尺寸</td></tr><tr><td>影响布局</td><td>内边距和边框增加了元素的外部空间</td><td>内边距和边框不会影响外部空间</td></tr></tbody></table><h3 id="2-6-overflow属性">2.6 overflow属性</h3><p>overflow属性是用于控制当一个元素的内容超出其区域时，如何显示多余的内容</p><ul><li><code>visible</code>：溢出的内容会被显示出来（默认值）</li><li><code>hidden</code>：溢出的内容会被隐藏</li><li><code>scroll</code>：始终显示</li><li><code>auto</code>：只有超出才会显示滚动条。</li></ul><h2 id="3-盒子排版">3. 盒子排版</h2><h3 id="3-1-类型">3.1 类型</h3><p><strong>CSS的控制对象是盒子，而HTML的控制对象是元素/标签，不同HTML元素会生成不同排版的CSS盒子</strong></p><p>盒子排版：通过属性<code>display</code>设置</p><ul><li><strong>常规流（normal flow）</strong>：盒子按照文档顺序排列<ul><li><strong>行级（inline）</strong>：盒子<strong>从左到右</strong>排列，适合小盒子，如<code>&lt;span&gt;、&lt;a&gt;、&lt;strong&gt; </code></li><li><strong>块级（block）</strong>：盒子<strong>从上到下</strong>排列，适合大盒子，如<code>&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;</code></li><li><strong>行块级（inline-block）</strong>：盒子可以像行级别一样从左到右排列，也可以像块级一样设置宽和高</li><li><strong>表格（table）</strong>：盒子<strong>以行和列的形式</strong>排列，适用于表格布局，如<code>&lt;table&gt;、&lt;tr&gt;、&lt;td&gt;</code></li><li><strong>弹性盒（flexbox）</strong>：<strong>沿主轴排列</strong>子元素（水平或竖直），常用于响应式布局</li><li><strong>网格布局（grid）</strong>：<strong>同时定义行和列</strong>，适用于复杂布局</li></ul></li><li><strong>浮动（float）</strong>：盒子<strong>浮动到容器的一侧</strong>，后续元素会环绕浮动元素</li><li><strong>定位（position）</strong>：盒子<strong>相对于某个位置进行定位</strong></li></ul><div class="note warning flat"><p>行级盒子只有在一行放不下的时候才会换行，</p></div><h3 id="3-2-弹性盒（flexbox）">3.2 弹性盒（flexbox）</h3><p>flexbox可以<strong>将父元素定义为flex容器，子元素则自动成为flex项目</strong>，从而实现统一控制flex项目的排版</p><p>基本属性</p><ul><li><code>flex-direction</code>：定义主轴的方向，决定了项目的排列方式<ul><li><code>row</code>：从左到右（默认）</li><li><code>column</code>：从上到下</li><li><code>row-reverse</code>：从右到左</li><li><code>column-reverse</code>：从下到上</li></ul></li><li><code>flex-wrap</code>：决定项目是否换行<ul><li><code>no-wrap</code>：不允许换行（默认）</li><li><code>wrap</code>：允许换行</li><li><code>wrap-reverse</code>：换行但反向排列</li></ul></li><li><code>justify-content</code>：决定项目之间的间隔<ul><li><code>flex-start</code>：项目紧靠容器的起始位置</li><li><code>flex-end</code>：项目紧靠容器的结束位置</li><li><code>center</code>：项目居中</li><li><code>space-between</code>：项目之间有均等的空间，首尾没有间隔</li><li><code>space-around</code>：项目之间有均等的空间，首尾有部分间隔</li><li><code>space-evenly</code>：项目之间有均等的空间，首位也有相同大小的间隔</li></ul></li><li><code>align-items</code>：决定项目的对齐方式<ul><li><code>stretch</code>：项目拉伸以填充容器（默认）</li><li><code>flex-start</code>：项目对齐到交叉轴的起始位置</li><li><code>flex-end</code>：项目对齐到交叉轴的结束位置</li><li><code>center</code>：项目在交叉轴上居中对齐</li><li><code>baseline</code>：项目按照其文本基线对齐</li></ul></li></ul><p>flexibility：控制项目的伸缩行为</p><ul><li><code>flex-grow</code>：定义项目的放大比例，默认值是0，表示项目不会主动放大填充容器</li><li><code>flex-shrink</code>：定义项目的缩小比例，默认值是1，表示项目会缩小以适应容器</li><li><code>flex-basis</code>：定义项目的初始大小（px），默认值是auto，表示项目的初始大小由内容决定</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;<span class="selector-tag">a</span>&quot;&gt;<span class="selector-tag">A</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;<span class="selector-tag">b</span>&quot;&gt;<span class="selector-tag">B</span>&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;c&quot;&gt;C&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#966</span>;</span><br><span class="line">    <span class="attribute">align-items</span>: baseline;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.a</span>,</span><br><span class="line">  <span class="selector-class">.b</span>,</span><br><span class="line">  <span class="selector-class">.c</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.a</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fcc</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.b</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#cfc</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.c</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ccf</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>图片</p><h3 id="3-3-网格（grid）">3.3 网格（grid）</h3><p>grid是一种二维的布局系统，可以<strong>同时控制行和列的排列</strong></p><ol><li>grid先将父元素定义为grid容器，其子元素自动成为grid项目</li><li>划分grid容器为网格格子</li><li>设置网格线为grid项目分配网格区域</li></ol><p>图片</p><p>如何划分网格区域</p><ul><li>属性<ul><li><code>gird-template-columns</code>：定义一共有多少列，每列格子的宽度是多少</li><li><code>gird-template-rows</code>: 定义一共有多少行，每行格子的宽度是多少</li></ul></li><li>单位<ul><li><code>px</code>：直接指定绝对长度</li><li><code>%</code>：基于容器的百分比宽度或高度</li><li><code>auto</code>：自动适配内容，列或行的大小由内容决定</li><li><code>fr</code>：根据剩余空间等比例分配的单位</li></ul></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-template-columns</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">grid-template-rows</span>: <span class="number">50px</span> <span class="number">50%</span> <span class="number">2</span>fr;</span><br></pre></td></tr></table></figure><p>如何设置网格线来分配网格区域：画四条线，四条线形成的区域就是网格区域，线用数字标识，如下图</p><p>图片</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-row-start</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">grid-column-start</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">grid-row-end</span>: <span class="number">3</span>;</span><br><span class="line"><span class="attribute">grid-column-end</span>: <span class="number">3</span>;</span><br><span class="line"><span class="comment">/* 或者 */</span></span><br><span class="line"><span class="attribute">grid-area</span>: <span class="number">1</span>/<span class="number">1</span>/<span class="number">3</span>/<span class="number">3</span>; </span><br></pre></td></tr></table></figure><h3 id="3-4-浮动（float）">3.4 浮动（float）</h3><p>浮动的作用：让元素浮动到容器的一侧，其他内容会环绕在浮动元素周围，最常用的功能是实现<strong>文字环绕图片</strong></p><p>通过<code>float</code>属性设置浮动，通过<code>clear</code>属性清除浮动</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">section</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">img</span> <span class="attribute">src</span>=&quot;https://p4.ssl.qhimg.com/t017aec0e7edc961740.jpg<span class="string">&quot; width=&quot;</span><span class="number">300</span><span class="string">&quot; alt=&quot;</span>mojave<span class="string">&quot; /&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;</span></span><br><span class="line"><span class="string">      莫哈韦沙漠不仅纬度较高，而且温度要稍微低些，是命名该公园的短叶丝兰——约书亚树的特殊栖息地。</span></span><br><span class="line"><span class="string">      约书亚树以从茂密的森林到远远间隔的实例等各种形式出现。</span></span><br><span class="line"><span class="string">      除了约书亚树森林之外，该公园的西部包括加州沙漠里发现的最有趣的地质外观。</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/section&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">    img &#123;</span></span><br><span class="line"><span class="string">        float: left;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    p &#123;</span></span><br><span class="line"><span class="string">        clear: both;</span></span><br><span class="line"><span class="string">        line-height: 1.8;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>float 布局在现代布局中逐渐被 Flexbox 和 Grid 取代</p></div><h3 id="3-5-定位（position）">3.5 定位（position）</h3><ol><li>相对定位（relative）：相对于自身的原始位置进行定位</li><li>绝对定位（absolute）：相对于最近的定位祖先进行定位</li><li>固定定位（fixed）：始终相对于视口进行定位</li><li>粘性定位（sticky）：在指定滚动范围内相对于视口定位</li></ol><div class="note warning flat"><p>relative实际上并没有脱离文档流</p></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引</title>
      <link href="/posts/ca74f096/"/>
      <url>/posts/ca74f096/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-基本概念">1. 基本概念</h2><p>索引（index）：是一种数据结构，通过<strong>记录搜索码和维护一个指向表中数据的指针或引用</strong>，使得查询操作可以跳过全表扫描，直接定位到目标数据，用于快速查找数据库表中的特定记录</p><table><thead><tr><th>类型</th><th>顺序索引（Orderd）</th><th>散列索引（Hash）</th></tr></thead><tbody><tr><td>操作</td><td>按照搜索码的值进行排序</td><td>按照搜索码的散列函数值将数据分布到多个桶中</td></tr><tr><td>适用</td><td><code>ORDERD BY</code>和<code>BETWEEN</code></td><td><code>=</code>和<code>IN</code></td></tr><tr><td>优势</td><td>适合范围查询，时间复杂度高</td><td>适合精准查询，时间复杂度低</td></tr><tr><td>劣势</td><td>插入和删除操作的成本高</td><td>破坏了顺序信息</td></tr></tbody></table><h2 id="2-顺序索引">2. 顺序索引</h2><h3 id="2-1-聚集和辅助">2.1 聚集和辅助</h3><table><thead><tr><th>类型</th><th>聚集索引（Clustered ）</th><th>辅助索引（Secondary）</th></tr></thead><tbody><tr><td>定义</td><td>数据顺序与索引顺序一致</td><td>数据存储顺序与索引顺序无关</td></tr><tr><td>特性</td><td>一个表只能有一个聚集索引</td><td>一个表可以有多个辅助索引</td></tr><tr><td>适用</td><td>范围查询</td><td>多条件查询</td></tr></tbody></table><p>聚集索引<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219352.png" alt=""></p><p>辅助索引<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219353.png" alt=""></p><h3 id="2-2-稠密和稀疏">2.2 稠密和稀疏</h3><table><thead><tr><th>类型</th><th>稠密索引（dense）</th><th>稀疏索引（sparse）</th></tr></thead><tbody><tr><td>定义</td><td>每条数据都有索引</td><td>只有部分数据有索引</td></tr><tr><td>特性</td><td>辅助索引是稠密的</td><td>稀疏索引是聚集的</td></tr><tr><td>适用</td><td>等值查询</td><td>范围查询</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219350.png" alt=""></p><h3 id="2-3-多级索引">2.3 多级索引</h3><p>多级索引：将索引结构分为多个层级，<strong>每一层索引都是对下一层数据的索引</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219351.png" alt=""></p><h3 id="2-4-桶索引">2.4 桶索引</h3><p>用于处理非唯一搜索码，索引包含指向桶的指针，每个桶包含指向记录的指针</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219354.png" alt=""></p><h2 id="3-B-树索引">3. B+树索引</h2><h3 id="3-1-树结构">3.1 树结构</h3><ul><li>平衡性：<strong>所有叶子节点位于同一层</strong></li><li>有序性：<strong>所有叶子节点按顺序从左到右连接</strong>，形成一个有序链表</li><li>内部节点/索引节点：存储指向索引的指针，用于引导搜索过程</li><li>叶子节点/数据节点：存储指向数据的指针</li><li>阶：节点最多可以拥有的孩子个数</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219358.png" alt=""></p><h3 id="3-2-节点结构">3.2 节点结构</h3><p>若阶为n，则有：</p><ul><li><strong>除了根节点之外，节点必须是半满的</strong>，即至少有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lceil n/2 \rceil - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个关键字</li><li><strong>每个节点的指针数量总是比关键字数量多1</strong></li><li><strong>每个节点的关键字数量最多有n-1个</strong></li><li><strong>每个节点的指针数量最多有n个</strong></li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219357.png" alt=""></p><p>叶子节点：代表着<strong>稠密索引</strong></p><ul><li>指针<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指向具有关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的一条文件记录</li><li>最后一个指针<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">p_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指向下一个叶子节点</li></ul><p>内部节点：代表着<strong>多级稀疏索引</strong></p><ul><li>指针<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">p_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指向搜索码值小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的子树</li><li>指针<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">p_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指向搜索码值小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">k_{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>的子树</li><li>指针<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指向<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>≤</mo></mrow><annotation encoding="application/x-tex">k_{i-1} \leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span></span></span></span> 搜索码值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">&lt; k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的子树</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219349.png" alt=""></p><h3 id="3-3-查找操作">3.3 查找操作</h3><p>假设每个节点的搜索码列表用<code>key</code>表示，指针列表用<code>point</code>数组表示，搜索码是<code>value</code></p><ol><li>从根节点开始<code>node = root</code></li><li>在当前节点中找到满足 <code>value &lt;= node.key[i]</code> 的最小 i<ol><li>如果 i 不存在，则 <code>node = node.point[-1]</code></li><li>如果 <code>value = node.key[i]</code>，则 <code>node = node.point[i+1]</code></li><li>如果 <code>value &lt; node.key[i]</code>，则 <code>node = node.point[i]</code></li></ol></li><li>重复第2步直到叶子结点，找到满足 <code>key[i] = value</code>的 i，返回 <code>node.point[i]</code></li></ol><div class="note info flat"><p>实际上，B+树也可以在所有叶子节点组成的链表上遍历搜索，一种是随机查找，一种是顺序查找，前者适合单值查询，后者适合范围查询</p></div><h3 id="3-4-插入操作">3.4 插入操作</h3><ol><li><strong>寻找插入位置</strong>：根据关键字的顺序，从根节点出发，递归地查找合适的叶子节点，在该节点中插入新关键字</li><li><strong>叶子节点插入</strong>：如果目标叶子节点此时关键字个数小于n，则结束，否则进入第3步</li><li><strong>叶子节点分裂</strong>：将这个叶子节点分裂成左和右两个叶子节点<ol><li>左叶子节点包含前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor n/2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>个关键字，右叶子节点包含剩下的关键字</li><li>将第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor n/2 \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个关键字插入到父节点中，其中该关键字的左边指针指向左叶子结点，右边指针指向右叶子节点</li><li>若当前父节点的关键字的个数小于n，则结束，否则进入第4步</li></ol></li><li><strong>内部节点分裂</strong>：将这个内部节点分裂成左和右两个内部节点<ol><li>左内部节点包含前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor n/2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>个关键字，右内部节点包含剩下的关键字</li><li>将第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor n/2 \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个关键字插入到父节点中，其中该关键字的左边指针指向左叶子结点，右边指针指向右叶子节点</li><li>递归执行上述过程直到结束或者父节点是根节点，进入第5步</li></ol></li><li><strong>创建新根节点</strong>：将原根节点的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor n/2 \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个关键字提升到新根节点，令新根节点的左指针指向分裂后的左子节点，右指针指向分裂后的右子节点（树的高度+1）</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219346.jpg" alt=""></p><h3 id="3-5-删除操作">3.5 删除操作</h3><ol><li><strong>寻找目标关键字位置</strong>：从根节点出发，根据关键字的顺序递归查找目标关键字所在的叶子节点，如果关键字不存在，删除操作结束，否则进入第2步</li><li><strong>删除关键字</strong>：在目标叶子节点中直接删除该关键字，同时如果该关键字是内部节点的分隔关键字，需要修改分隔关键字为更大的关键字，如果删除后关键字数量仍然不少于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lceil n/2 \rceil - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，则删除操作结束，否则进入第3步</li><li><strong>借关键字</strong>：选择左兄弟或右兄弟中关键字数量大于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lceil n/2 \rceil - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的节点，如果不存在这样的兄弟节点则进入第4步<ol><li>如果是左兄弟节点：借最大关键字，更换父节点中对应关键字为左兄弟节点的次大关键字</li><li>如果是右兄弟节点：借最小关键字，更换父节点中对应关键字为右兄弟节点的次小关键字</li></ol></li><li><strong>合并节点</strong><ol><li>如果有左兄弟节点则合并左兄弟节点，否则合并右兄弟节点</li><li>如果是叶子结点合并，删除父节点中的对应关键字</li><li>如果是内部节点合并，将父节点中分隔关键字下移到合并节点中</li><li>递归处理父节点，直到满足关键字要求或父节点是根节点，进入第5步</li></ol></li><li><strong>根节点调整</strong>：直接删除空的根节点即可（树的高度-1）</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter14/202411191219348.jpg" alt=""></p><p>推荐一个可视化B+树的网址：</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">可视化B+树</div>          <div class="tag-link-sitename">Data Structure Visualizations</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h2 id="4-Mysql使用索引">4. Mysql使用索引</h2><h3 id="4-1-命令">4.1 命令</h3><p>创建索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index 索引名 <span class="keyword">on</span> 表(属性);</span><br></pre></td></tr></table></figure><p>删除索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> index 索引名;</span><br></pre></td></tr></table></figure><h3 id="4-2-存储引擎">4.2 存储引擎</h3><table><thead><tr><th>类型</th><th>InnoDB</th><th>MyISAM</th><th>MEMORY</th></tr></thead><tbody><tr><td>索引类型</td><td>聚集索引，索引存储数据</td><td>辅助索引，索引存储指向数据的地址</td><td>散列索引，数据存储在内存中</td></tr><tr><td>索引结构</td><td>B+树索引</td><td>B+树索引</td><td>散列索引</td></tr><tr><td>特性</td><td>支持事务和外键约束</td><td>适用于以读为主的场景</td><td>支持极高的查询性能，但不适合范围查询</td></tr></tbody></table><h3 id="4-3-默认索引">4.3 默认索引</h3><p>主键索引：添加<code>primary key</code>约束，数据库会自动创建主键索引，是聚集索引</p><p>唯一索引：添加<code>unique</code>约束，数据库会自动创唯一索引，是辅助索引</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS Intro</title>
      <link href="/posts/ecad9eb3/"/>
      <url>/posts/ecad9eb3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-什么是CSS">1. 什么是CSS</h2><p><strong>层叠样式表（Cascading Style Sheets,CSS）</strong>：通过不同的规则来控制页面上元素的样式，并根据优先级应用不同的样式，使网页在不同设备和屏幕上都呈现良好的视觉体验</p><p>层叠性的体现：</p><ul><li>来源的优先级：<strong>内联样式优先级最高，接下来是内部样式表，最后是外部样式表</strong></li><li>选择器的优先级：从高到低依次是<strong>内联样式、ID 选择器、类选择器、标签选择器</strong></li><li>顺序优先级：如果两个样式的来源和选择器相同，那么<strong>后定义的样式会覆盖先定义的样式</strong></li></ul><h2 id="2-CSS使用">2. CSS使用</h2><h3 id="2-1-基本语法">2.1 基本语法</h3><p>属性后跟冒号<code>:</code>，属性值后面需要有分号<code>;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line">  属性1: 属性值1;</span><br><span class="line">  属性2: 属性值2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>注意html是属性后跟等于号<code>=</code>，属性值后面需要有空格<code> </code></p></div><p><strong>冒号后跟一个空格，每一个属性值后都需要有分号</strong></p><h3 id="2-2-设置手段">2.2 设置手段</h3><ul><li>外链：引用外部CSS文件（最常用，<strong>实现css和html的分离</strong>）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/url/to/style.css&quot;</span></span></span><br></pre></td></tr></table></figure><ul><li>嵌入：写在css文件中的<code>&lt;style&gt;&lt;/style&gt;</code>标签内（一般用于全局设置和特殊页面的设置）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">li</span> &#123; <span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">list-style</span>: none; &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">p</span> &#123; <span class="attribute">margin</span>: <span class="number">1em</span> <span class="number">0</span>; &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>內联：作为标签内的属性值（不推荐，html的属性不应该用于样式）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin: 1em 0&quot;</span>&gt;</span>contene<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-CSS后台">2.3 CSS后台</h3><ol><li>解析 HTML：浏览器会首先解析 HTML 文件，构建 DOM 树</li><li>解析 CSS：浏览器会解析所有的 CSS 规则，它将根据不同的 CSS 文件、内联样式或内部样式表构建一个 CSSOM 树</li><li>计算样式：浏览器会将 DOM 树和 CSSOM 树结合起来，计算每个 DOM 元素的最终样式</li><li>布局：浏览器计算每个元素的确切位置和尺寸</li><li>绘制：浏览器会将元素渲染到屏幕上，应用颜色、背景、边框、阴影等样式</li><li>合成：当页面元素绘制完成后，浏览器会将各个图层合成在一起并最终呈现在用户屏幕上</li></ol><h2 id="3-选择器">3. 选择器</h2><h3 id="3-1-基本选择器">3.1 基本选择器</h3><ul><li>通配选择器：使用<code>*</code>选择所有元素</li><li>元素/标签选择器：填写指定的html元素/标签名称</li><li>ID 选择器：使用<code>#</code>选择具有唯一ID的元素</li><li>类选择器：使用<code>.</code>选择属于某个类的所有元素</li></ul><div class="note warning flat"><p>类选择器可以其他选择器复合使用，比如<code>p.center</code>表示选择类为center中的所有p标签<br>可以一次性选择多个选择器，用逗号隔开，如<code>h1, h2, .center</code></p></div><h3 id="3-2-属性选择器">3.2 属性选择器</h3><ul><li><code>[attribute]</code>：选择具有某个属性的所有元素</li><li><code>[attribute=&quot;value&quot;]</code>：选择具有特定属性值的元素</li><li><code>[attribute^=&quot;value&quot;]</code>：选择属性值以指定字符串开头的元素</li><li><code>[attribute$=&quot;value&quot;]</code>：选择属性值以指定字符串结尾的元素</li><li><code>[attribute*=&quot;value&quot;]</code>：选择属性值包含指定字符串的元素</li></ul><h3 id="3-3-组合选择器">3.3 组合选择器</h3><ul><li>后代选择器：使用一个空格<code> </code>选择父元素的所有后代元素</li><li>子元素选择器：使用<code>&gt;</code>选择父元素的直接子元素</li><li>相邻选择器：使用<code>+</code>选择紧邻某元素之后的第一个元素</li><li>兄弟选择器：使用<code>~</code>选择某元素后面的所有元素</li></ul><h3 id="3-4-伪元素选择器">3.4 伪元素选择器</h3><ul><li><code>::before</code>：在元素的内容之前插入内容（常用于添加图标）</li><li><code>::after</code>：在元素的内容之后插入内容（常用于添加分隔符）</li><li><code>::first-letter</code>：选择元素的首个字母（常用于大写字母）</li><li><code>::first-line</code>：选择元素的首行文本（常用于首行突出）</li><li><code>a:link</code>：选择未被访问的链接</li><li><code>a:visited</code>：选择已经被访问过的链接</li><li><code>a:hover</code>：选择鼠标悬停在的链接</li><li><code>a:active</code>：选择正在被点击的链接</li><li><code>input:focus</code>：选择当前具有焦点的元素（常用于表单填写）</li><li><code>tr:first-child</code>：选择父元素中的第一个子元素（常用于首行加粗）</li><li><code>td:last-child</code>：选择父元素中的第一个子元素（常用于首列加粗）</li></ul><div class="note warning flat"><p>伪元素是<strong>处于特殊状态的元素</strong>，它不能被看作为一个新的 HTML 元素，也无法成为真正的 DOM 元素，但是可以添加独立的 CSS 样式，甚至改变页面布局</p></div><h2 id="4-基本属性">4. 基本属性</h2><h3 id="4-1-颜色：color">4.1 颜色：color</h3><ul><li><strong>RGB</strong>：通过红、绿、蓝三种色光的强度值表示颜色<ul><li>十六进制表示，每一字段从00到ff：<code>#rrggbb</code></li><li>十进制表示，每一字段从0到255：<code>rgb(red, green, blue)</code></li></ul></li><li><strong>HSL</strong>：通过色相、饱和度和亮度来表达颜色<ul><li>Hue：控制颜色的色相（0-360）</li><li>Saturation：控制色彩的饱和度（0-100%），越大颜色越鲜艳</li><li>Lightness控制颜色的亮度（0-100%），越大颜色越亮</li></ul></li><li><strong>关键字</strong>：black，white，skyblue，maroon等预定义的经典颜色</li><li><strong>透明度（transparent）</strong>：控制颜色的透明程度，范围从 0（完全透明）到 1（完全不透明），放在第四通道（rgba和hsla）</li></ul><h3 id="4-2-文本">4.2 文本</h3><h4 id="4-2-1-字体风格：font-family">4.2.1 字体风格：font-family</h4><p>font-family：用于指定文本的字体序列，浏览器会按顺序尝试使用第一个可用的字体，字体名称之间用逗号<code>,</code>分隔</p><p>通用字体族：font-familt的最后一个值，是浏览器都具有的字体风格</p><table><thead><tr><th>风格</th><th>字体样式</th><th>例子</th><th>适用</th></tr></thead><tbody><tr><td>serif</td><td>衬线字体</td><td>Times New Roman、宋体</td><td>正式和传统的文本风格</td></tr><tr><td>sans-serif</td><td>无衬线字体</td><td>Arial、黑提</td><td>现代和简洁的设计</td></tr><tr><td>monospace</td><td>等宽字体</td><td>Courier、中文</td><td>代码显示和技术文档</td></tr><tr><td>cursive</td><td>手写字体</td><td>Comic Sans、楷体</td><td>适合个性化的场景</td></tr><tr><td>fantasy</td><td>装饰性字体</td><td>Papyrus</td><td>通常用于特定主题设计</td></tr></tbody></table><h4 id="4-2-2-字体大小：font-size">4.2.2 字体大小：font-size</h4><ul><li><code>px</code>：像素大小</li><li><code>%</code>和<code>em</code>：相对于父元素的比例</li><li><code>rem</code>：相对于根元素的比例</li><li>关键字：<code>small</code>、<code>medium</code>、<code>large</code></li></ul><h4 id="4-2-3-字体粗细：font-weight">4.2.3 字体粗细：font-weight</h4><ul><li><code>normal</code>：正常字体粗细（相当于 400）</li><li><code>bold</code>：粗体（相当于 700）</li><li><code>bolder</code>：比父元素更粗</li><li><code>lighter</code>：比父元素更细</li><li>数字值：从 100 到 900</li></ul><div class="note warning flat"><p>需要字体支持粗细，否则不会有变化！</p></div><h4 id="4-2-4-字体风格：font-style">4.2.4 字体风格：font-style</h4><ul><li><code>normal</code>：使文本竖直（默认值）</li><li><code>italic</code>：使文本斜体</li><li><code>oblique</code>：使文本倾斜，通常比斜体的倾斜程度稍微小一些</li></ul><h4 id="4-2-5-文本修饰：text-decoration">4.2.5 文本修饰：text-decoration</h4><ul><li><code>none</code>：移除任何装饰（通常用于去掉链接的下划线）</li><li><code>underline</code>：添加下划线</li><li><code>line-through</code>：添加删除线</li><li><code>overline</code>：添加上划线</li></ul><h4 id="4-2-6-字符间距：letter-spacing">4.2.6 字符间距：letter-spacing</h4><ul><li><code>normal</code>：使用浏览器默认的字符间距（默认值）</li><li>长度单位：可以使用px、em、rem等来修改字符之间的间距</li></ul><h4 id="4-2-7-行高：line-height">4.2.7 行高：line-height</h4><ul><li><code>normal</code>：使用浏览器默认的行高（默认值）</li><li>单一数值：相对于字体大小的比例</li><li>比例：使用%，em，rem设置相对于字体大小的比例</li><li>像素单位：设置固定的行高</li></ul><h4 id="4-2-8-对齐：text-align">4.2.8 对齐：text-align</h4><ul><li><code>left</code>：将文本对齐到容器的左边（默认值）</li><li><code>right</code>：将文本对齐到容器的右边</li><li><code>center</code>：将文本居中对齐</li><li><code>justify</code>：使文本两端对齐，行内文字会自动调整间距以填满整行</li></ul><div class="note warning flat"><p><code>justify</code>对最后一行不生效，因为最后一行内容较少，强行填满会破坏美观</p></div><h4 id="4-2-9-缩进：text-indent">4.2.9 缩进：text-indent</h4><ul><li>单位可以是px、em、rem等长度单位</li><li>使用负值时，文本会向左缩进</li></ul><div class="note warning flat"><p>text-indent只影响段落的第一行，对其他行无效</p></div><h3 id="4-3-空白符处理：white-spacecuno">4.3 空白符处理：white-spacecuno</h3><table><thead><tr><th>方式</th><th>合并空格</th><th>保留换行符</th><th>自动换行</th></tr></thead><tbody><tr><td>normal</td><td>是</td><td>否</td><td>是</td></tr><tr><td>nowrap</td><td>是</td><td>否</td><td>是</td></tr><tr><td>pre</td><td>否</td><td>是</td><td>否</td></tr><tr><td>pre-wrap</td><td>否</td><td>是</td><td>是</td></tr><tr><td>pre-line</td><td>否</td><td>是</td><td>是</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据存储结构</title>
      <link href="/posts/93a68ef7/"/>
      <url>/posts/93a68ef7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-数据的组织方式">1. 数据的组织方式</h2><p>记录（record）/ 元组（tuple）：是数据库中的最小逻辑单位，对应于数据库中的一行，由多个字段组成</p><p>块（block）：是数据在磁盘上存储和管理的最小单位，每个块包含多条记录</p><p>文件（file）：是数据在磁盘上存储和管理的最高级别的物理结构，每个文件包含多个块</p><div class="note warning flat"><p>每条记录必须被完全包含在单个块中，也就是说，不存在一个记录的部分字段在一个块，剩余字段在另一个块</p></div><h2 id="2-记录的组织方式">2. 记录的组织方式</h2><h3 id="2-1-定长记录">2.1 定长记录</h3><p>定义：每条记录的长度都是固定的，可以存<strong>块长度整除记录长度</strong>个记录</p><p>删除记录方法</p><ul><li>将被删除记录的位置之后的所有记录都向前移动一步</li><li>只将最后一条记录移动到被删记录的位置</li><li>从文件头开始，用一个指针指向距离当前位置最近的空闲记录空间，形成<strong>自由链表</strong></li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059562.png" alt=""></p><h3 id="2-2-变长记录">2.2 变长记录</h3><p>变长记录的结构：用定长的存储空间记录变长数据的信息（偏移量，长度）</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059563.png" alt=""></p><p>存储变长记录的块结构</p><ul><li>块头：当前存储的记录数量，自由空间的末尾位置，由每条记录的起始位置和大小组成的数组</li><li>自由空间：是一块连续的、空闲的存储空间</li><li>记录空间：连续存储变长记录</li><li>插入：从自由空间的末尾插入，并将记录的信息添加到块头中</li><li>删除：将删除记录位置之前的所有记录向后移动，并修改自由空间末尾指针</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059564.png" alt=""></p><h2 id="3-文件的组织方式">3. 文件的组织方式</h2><h3 id="3-1-堆">3.1 堆</h3><p>定义：数据以<strong>无序</strong>的方式存储在文件中</p><p>插入：新记录直接追加到文件的末尾</p><p>删除：记录被标记为“无效”，但物理空间不会被立即回收，会产生空间碎片</p><p>特性：插入删除高效、查询低效、空间利用率低</p><h3 id="3-2-顺序">3.2 顺序</h3><p>定义：根据<strong>搜索码</strong>，将记录按<strong>顺序存储</strong>在文件中，每个记录都维护一个指针，每个指针都指向按搜索码顺序排列的下一条记录</p><p>插入：先将记录放到一个空闲空间中，然后找到位于待记录顺序码之前和之后的记录，调整指针插入新纪录</p><p>删除：需要按顺序将上一个数据的指针指向下一个数据</p><p>特性：查询高效、插入删除低效、空间利用率高</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059566.png" alt=""></p><h3 id="3-3-多表聚簇">3.3 多表聚簇</h3><p>定义：根据<strong>聚簇码</strong>，将多个<strong>相关联</strong>的表的记录合并存储在文件中</p><p>特性：适合于执行大量的连接查询，但是聚簇维护的成本很大</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059567.png" alt=""></p><h3 id="3-4-哈希">3.4 哈希</h3><p>定义：通过哈希函数将记录分配到多个分区，然后将不同分区的数据存储在不同文件中</p><p>特性：</p><ul><li>支持数据归档：将较新的数据放到SSD以支持快速访问，将较旧的数据放到磁盘上</li><li>提高管理灵活性：可以独立地对每个分区进行维护</li><li>提高查询效率：可以只检索某个分区的数据，而不是加载整张大表</li></ul><h2 id="3-数据字典">3. 数据字典</h2><p>定义：集中存储数据库<strong>元数据</strong>的系统表，包含了数据库中<strong>所有对象的定义和描述信息</strong></p><ul><li>表的结构（表名、列名、数据类型、约束等）</li><li>索引的定义（索引名、索引类型、索引列等）</li><li>视图的定义（视图名、视图查询等）</li><li>用户权限（用户、角色、权限等）</li><li>存储过程和触发器的定义</li></ul><p>存储位置</p><ul><li>内存数据字典：数据库启动时，将数据字典的元数据加载到内存中，以便快速访问和管理</li><li>磁盘数据字典：数据字典的元数据以表的形式存储在磁盘上</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059568.png" alt=""></p><h2 id="4-数据库缓冲区">4. 数据库缓冲区</h2><h3 id="4-1-缓冲区管理器功能">4.1 缓冲区管理器功能</h3><p>定义：是<strong>内存中</strong>的一块区域，用于<strong>临时存储</strong>从磁盘读取的数据块或即将写入磁盘的数据块，从而<strong>减少磁盘I/O操作，提供数据的一致性管理和并发控制</strong></p><ul><li>替换：当缓冲区没有剩余空间时，需要使用<strong>替换策略</strong>决定哪个块需要被移出</li><li>钉住：在一个进程读取或写入缓冲块时，钉住该块以确保该块不会被其他进程替换</li><li>上锁：在一个进程读取或写入缓冲块时，上锁该块以确保该块不会被其他进程使用</li><li>读：检查缓冲区中是否已经缓存了所需读的数据块</li><li>写：先将修改的数据写入缓冲区并标记为脏页，然后根据策略写回磁盘来保证数据一致性</li></ul><h3 id="4-2-写出策略">4.2 写出策略</h3><table><thead><tr><th>写出策略</th><th>写入时机</th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td>立即写出</td><td>每次操作后立即写入磁盘</td><td>确保数据实时持久化，避免数据丢失</td><td>磁盘I/O开销大，影响性能</td><td>高一致性要求的系统，如金融系统</td></tr><tr><td>延迟写出</td><td>数据先保存在内存，稍后批量写入</td><td>减少频繁的磁盘I/O，提升性能</td><td>数据可能丢失，系统崩溃时有风险</td><td>高性能要求且数据丢失可以容忍的系统</td></tr><tr><td>强制写出</td><td>事务提交时强制写入磁盘</td><td>确保数据持久性，一致性强</td><td>性能开销大，影响系统吞吐量</td><td>需要严格保证数据一致性的系统</td></tr></tbody></table><h3 id="4-3-替换策略">4.3 替换策略</h3><table><thead><tr><th>方法</th><th>最近最少使用（LRU）</th><th>最近最常使用（MRU）</th><th>最不经常使用（LFU）</th></tr></thead><tbody><tr><td>淘汰依据</td><td>选择时间戳最小的</td><td>选择时间戳最大的</td><td>选择访问次数最少的</td></tr><tr><td>适用场景</td><td>局部性较强的数据</td><td>一次性访问的数据</td><td>局部性较强的数据</td></tr><tr><td>缺点</td><td>可能会替换掉需要长期保留数据</td><td>可能会替换掉仍然需要被访问的数据</td><td>可能会替换掉偶尔访问但很重要的数据</td></tr></tbody></table><h2 id="5-面向列的存储">5. 面向列的存储</h2><p>定义：每个属性都被单独存储在一个单独的文件中，来自相邻元组的属性值存储在文件中相邻的位置上，也被称为<strong>柱状存储</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059569.png" alt=""></p><p>优势</p><ul><li>减少I/O：面向列存储使得数据库只加载查询所需的列，避免了读取整行数据的开销，减少了不必要的I/O操作</li><li>提高CPU缓存性能：由于同一列的数据存储在一起，提高了数据访问的局部性，使得CPU缓存的利用率更高，从而加速数据的访问速度</li><li>提高压缩效率：同一列中的数据类型相同，数据具有较高的相似性，这使得列存储能够使用更高效的压缩算法，节省存储空间</li><li>向量处理：面向列的存储非常适合SIMD等向量化处理，可以高效地对一列数据进行并行计算，显著提升计算性能</li></ul><p>缺点：</p><ul><li>元组重构的代价大：重构完整的行数据时，必须从多个列中读取数据，增加了重构的复杂性和I/O成本</li><li>元组删除和更新的代价大：需要修改多个列的数据块，且可能涉及到数据重排或压缩，这会导致更高的写操作代价</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter13/202411100059570.png" alt=""></p><div class="note success flat"><p><strong>行式存储适合事务处理，列式存储适合数据分析</strong></p></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/posts/4ab788fc/"/>
      <url>/posts/4ab788fc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-基础概念">1. 基础概念</h2><p>【HTML定义】</p><p><strong>超文本标记语言（HyperText Markup Language,HTML）</strong>：是标签语言，而不是编程语言，用于<strong>在网页中显示内容，而不是根据输入来输出结果</strong></p><ul><li>超文本：指的是<strong>图片、链接、表格等不局限于文本</strong>的内容</li><li>标记：利用<strong>标签标记超文本</strong></li></ul><p>【HTML作用】</p><p>负责<strong>构建网页结构和设置网页内容</strong>，实际上任何网页本质上都是一个html文件，只不过添加了各种样式和功能</p><p>【HTMl元素】</p><p>html元素指的是<strong>开始标签、内容和结束标签</strong>三部分组成的整体，但是不是所有标签都是成对出现的，还有自闭合标签，如<code>&lt;img /&gt;</code></p><p>可以通过在标签中设置html元素的属性，格式需要满足</p><ul><li>属性之间用空格隔开</li><li>属性名后需要跟一个<code>=</code>号</li><li>属性值用双引号<code>&quot;&quot;</code>括起来</li></ul><div class="note warning flat"><p>注意区分html和css设置属性值的区别！</p></div><p>【语义化元素】</p><p>实践中总是根据内容和内容结构来选择对应的标签，这样做不仅帮助开发者和浏览器理解网页内容，还对搜索引擎优化和无障碍访问有积极影响。</p><p>比如说文章可以使用<code>&lt;article&gt;&lt;/article&gt;</code>，章节可以使用<code>&lt;section&gt;&lt;/section&gt;</code>，页脚使用<code>&lt;footer&gt;&lt;/footer&gt;</code>等</p><p>【无语义元素】</p><p>html提供了<code>&lt;div&gt;&lt;/div&gt;</code>和<code>&lt;span&gt;&lt;/span&gt;</code>无语义标签，一般是为了实现特殊样式和特殊功能，配合class属性或id属性使用</p><div class="note warning flat"><p>元素非常便利但容易被滥用，只有在没有更好的语义方案时才选择它，而且要尽可能少用，否则文档的升级和维护工作会非常困难</p></div><h2 id="2-html文件的基本结构">2. html文件的基本结构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    网页内容</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;!DOCTYPE html&gt;</code>：<strong>声明文档类型</strong></p></li><li><p><code>&lt;html&gt;&lt;/html&gt;</code>：根元素，包裹了页面的所有内容</p></li><li><p><code>&lt;head&gt;&lt;/head&gt;</code>：是html文件的首部，包含文档的<strong>元数据</strong>，这部分内容不会呈现在页面上</p><ul><li><code>&lt;meta&gt;</code>：定义页面的字符编码、作者、描述和关键字等</li><li><code>&lt;title&gt;&lt;/title&gt;</code>：定义页面标题（不属于内容，不是内容标题！）</li><li><code>&lt;link&gt;</code>：引入外部资源，常用于引入CSS文件</li></ul></li><li><p><code>&lt;body&gt;&lt;/body&gt;</code>：包含页面的所有可视内容</p></li><li><p><code>&lt;script&gt;&lt;/script&gt;</code>：设置执行脚本</p></li></ul><div class="note warning flat"><p>实践中总是将script标签放在页面的底部而不是首部中，因为这样可以先呈现页面内容，再加载页面行为，有利于降低用户视角下的网页加载时间</p></div><h2 id="3-html内容的基本结构">3. html内容的基本结构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#home&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#services&quot;</span>&gt;</span>服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#contact&quot;</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>文章标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是文章的第一段内容。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>章节标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这里是章节内容。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>广告<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>广告1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>广告2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>广告3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>禁止侵权！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>隐私政策<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>服务条款<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span> </span><br></pre></td></tr></table></figure><ul><li><code>&lt;header&gt;&lt;/header&gt;</code>：<strong>页眉</strong>，位于网页顶部，通常包含<strong>大标题，导航菜单，logo图案</strong>等内容</li><li><code>&lt;nav&gt;&lt;/nav&gt;</code>：导航，位于网页边上，通常包含<strong>每个子页面的超链接和搜索栏目</strong></li><li><code>&lt;main&gt;&lt;/main&gt;</code>：<strong>主体</strong>，<strong>位于网页中心</strong>，通常包含<strong>文章、图片、视频</strong>等内容</li><li><code>&lt;aside&gt;&lt;/aside&gt;</code>：<strong>侧边栏</strong>，位于网页两边，通常包含<strong>广告、目录</strong>等内容</li><li><code>&lt;footer&gt;&lt;/footer&gt;</code>：<strong>页脚</strong>，位于网页底部，通常包含<strong>版权声明、隐私政策</strong>等内容</li></ul><div class="note warning flat"><p>上述内容都是在html文件的<code>&lt;body&gt;&lt;/body&gt;</code>标签内，注意内容结构和文件结构的不同！</p></div><h2 id="3-文本标签">3. 文本标签</h2><ul><li><p><code>&lt;h1&gt;&lt;/h1&gt;</code>：标题，支持级别1到级别6</p></li><li><p><code>&lt;p&gt;&lt;/p&gt;</code>：段落</p></li><li><p><code>&lt;u&gt;&lt;/u&gt;</code>：下划线</p></li><li><p><code>&lt;strong&gt;&lt;/strong&gt;</code>和<code>&lt;b&gt;&lt;/b&gt;</code>：强调，文本加粗</p></li><li><p><code>&lt;em&gt;&lt;/em&gt;</code>和<code>&lt;i&gt;&lt;/i&gt;</code>：着重，文本斜体</p></li><li><p><code>&lt;code&gt;&lt;/code&gt;</code>：代码，显示为等宽字体</p></li><li><p><code>&lt;pre&gt;&lt;/pre&gt;</code>：预格式化，保留空格和换行</p></li><li><p><code>&lt;blockquote&gt;&lt;/blockquote&gt;</code>和<code>&lt;q&gt;&lt;/q&gt;</code>：引用，会有文本缩进</p></li><li><p><code>&lt;sup&gt;&lt;/sup&gt;</code>和<code>&lt;sub&gt;&lt;/sub&gt;</code>：上标和下标</p></li></ul><h2 id="4-列表标签">4. 列表标签</h2><p>有序列表（ordered list,ol）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p>无序列表（unordered list,ul）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>自定义列表（definition list,dl）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>项目<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>python<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>html<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>人员<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>时间<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>一月<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>二月<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-多媒体标签">5. 多媒体标签</h2><div class="note info flat"><p>网址/URL/链接：虽然狭义上有区别，但是广义上都可以认为是指向html、文本、图像、视频和音频等可以在网络上保存的任何文件的指针</p></div><h3 id="5-1-锚点链接">5.1 锚点链接</h3><p><code>&lt;a&gt;&lt;/a&gt;</code>：用于嵌入外部URL，又称为超链接/超文本引用（hypertext reference）</p><ul><li><code>href</code>：超文本引用（hypertext reference），值为链接目标的URL</li><li><code>title</code>：提供链接的额外信息或提示文本，鼠标悬停时显示</li><li><code>download</code>：提供一个默认的保存文件名</li><li><code>target</code>：指定链接的打开方式<ul><li><code>_self</code>：在同一个窗口或标签页打开链接（默认值）</li><li><code>_blank</code>：在新窗口或新标签页中打开链接</li><li><code>_parent</code>：在父框架中打开链接</li><li><code>_top</code>：在整个浏览器窗口中打开链接</li></ul></li><li><code>rel</code>：定义当前页面与目标页面之间的关系，增强安全性和 SEO 效果<ul><li><code>noopener</code>：防止新页面访问当前页面的 window 对象，提高安全性</li><li><code>noreferrer</code>：不仅防止新页面访问当前页面的 window 对象，还会隐藏引用来源，通常用于增强隐私性</li><li><code>nofollow</code>：告诉搜索引擎不要跟踪该链接，用于防止传递链接权重</li><li><code>external</code>：指示链接是外部链接</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://dasi.net.cn/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;即将进入dasi博客&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external&quot;</span>&gt;</span>达斯的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-图片链接">5.2 图片链接</h3><p>【基本属性】</p><p><code>&lt;img&gt;</code>：用于嵌入静态图像文件，是一个<strong>自闭合</strong>的标签</p><ul><li><code>src</code>：指定图片的来源URL（必选）</li><li><code>alt</code>：指定图片的替代文本，在图片无法加载时显示（必选）</li><li><code>title</code>：指定了鼠标悬停在图片上显示的文本</li><li><code>width</code>和<code>height</code>：设置图片的显示宽度和高度</li><li><code>srcset</code>：提供不同分辨率或尺寸图片的URL，以适配不同的设备（电脑、手机、平板）</li><li><code>sizes</code>：指示图片在不同视口尺寸下的显示尺寸，配合<code>srcset</code>使用</li><li><code>loading</code>：设置图片的加载方式，可以帮助提升网页加载速度<ul><li><code>lazy</code>：懒加载，只有页面滚动到图片所在位置时才加载</li><li><code>eager</code>：立即加载（默认值）</li></ul></li></ul><p>【绑定图片和描述】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/dinosaur.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;dinosaur&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;341&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span></span><br><span class="line">    A T-Rex on display in the Manchester University Museum.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-3-视频链接：-video-video">5.3 视频链接：<code>&lt;video&gt;&lt;/video&gt;</code></h3><p>【基本属性】</p><ul><li><code>src</code>：指定视频的URL路径</li><li><code>width</code>和<code>height</code>：设置视频的宽度和高度</li><li><code>controls</code>：布尔属性，添加后启用视频控件，如播放、暂停、音量调节等</li><li><code>autoplay</code>：布尔属性，添加后自动播放</li><li><code>muted</code>：布尔属性，添加后静音播放</li><li><code>loop</code>：布尔属性，添加后会自动循环播放</li><li><code>poster</code>：指定视频加载或播放之前显示的封面</li><li><code>preload</code>：是否预加载，有助于增快页面加载<ul><li><code>auto</code>：自动加载</li><li><code>metadata</code>：仅加载视频的元数据</li><li><code>none</code>：不预加载</li></ul></li><li><code>&lt;source&gt;</code>标签：提供不同格式的视频源</li><li><code>&lt;track&gt;</code>标签：用于添加字幕、说明等轨道信息</li><li>标签之间的备用文字：提供浏览器不支持音频播放时的提示信息</li></ul><p>【指定不同播放源和轨道信息】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;example.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">track</span> <span class="attr">kind</span>=<span class="string">&quot;subtitles&quot;</span> <span class="attr">src</span>=<span class="string">&quot;subtitles_es.vtt&quot;</span> <span class="attr">srclang</span>=<span class="string">&quot;es&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Spanish&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-4-音频链接：-audio-audio">5.4 音频链接：<code>&lt;audio&gt;&lt;/audio&gt;</code></h3><p>【基本属性】</p><ul><li><code>src</code>：指定音频的 URL 路径</li><li><code>controls</code>：布尔属性，添加后启用音频控件，如播放、暂停、音量调节等</li><li><code>autoplay</code>：布尔属性，添加后自动播放</li><li><code>muted</code>：布尔属性，添加后静音播放</li><li><code>loop</code>：布尔属性，添加后会自动循环播放</li><li><code>preload</code>：是否预加载，有助于增快页面加载<ul><li><code>auto</code>：自动加载</li><li><code>metadata</code>：仅加载音频的元数据</li><li><code>none</code>：不预加载</li></ul></li><li><code>&lt;source&gt;</code>标签：提供不同格式的音频源</li><li>标签之间的备用文字：提供浏览器不支持音频播放时的提示信息</li></ul><p>【指定不同播放源】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">muted</span> <span class="attr">loop</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;audio.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mpeg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;audio.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span> /&gt;</span></span><br><span class="line">您的浏览器不支持 HTML5 音频。</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-表格标签">6. 表格标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>考试成绩表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>科目<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>分数<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="comment">&lt;!-- 跨两行 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>85<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>总分<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="comment">&lt;!-- 跨两列 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>175<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【基本标签】</p><ul><li><code>&lt;table&gt;&lt;/table&gt;</code>：声明一个表格</li><li><code>&lt;caption&gt;&lt;/caption&gt;</code>：设置表格标题，显示在表格上方并居中</li><li><code>&lt;th&gt;&lt;/th&gt;</code>：设置表头内容，字体默认加粗</li><li><code>&lt;tr&gt;&lt;/tr&gt;</code>：声明表格的一行</li><li><code>&lt;td&gt;&lt;/td&gt;</code>：设置单元格数据</li><li><code>&lt;thead&gt;&lt;/thead&gt;</code>，<code>&lt;tbody&gt;&lt;/tbody&gt;</code>和<code>&lt;tfood&gt;&lt;/tfood&gt;</code>：将表格分为表头、表体和表脚，便于组织和样式化</li></ul><p>【合并单元格】</p><p>使用 colspan 属性将一个单元格跨越多列<br>使用 rowspan 属性将一个单元格跨越多行</p><h2 id="5-表单标签">5. 表单标签</h2><h3 id="5-1-输入标签：-input">5.1 输入标签：<code>&lt;input /&gt;</code></h3><p><code>type</code>：指定输入框的类型</p><ul><li><code>text</code>：单行文本输入框</li><li><code>password</code>：密码输入框，输入的内容会被隐藏</li><li><code>email</code>：邮箱输入框，浏览器会自动验证格式是否有效</li><li><code>number</code>：数字输入框，限制用户只能输入数字</li><li><code>radio</code>：单选按钮</li><li><code>checkbox</code>：复选框</li><li><code>button</code>：普通按钮</li><li><code>file</code>：文件选择器</li><li><code>date</code>：日期输入框</li><li><code>time</code>：时间输入框</li><li><code>submit</code>：上传按钮，用于提交表单</li><li><code>name</code>：指定输入字段的名称，表单提交时会使用该名称作为键</li><li><code>value</code>：指定选型的值</li><li><code>maxlength</code>：限制输入框中可输入的最大字符数</li><li><code>size</code>：设置输入框的可见字符宽度</li><li><code>placeholder</code>：占位符文本，帮助用户理解要输入什么内容</li><li><code>required</code>：布尔属性，指定当前输入框为必填</li><li><code>readonly</code>：布尔属性，指定当前输入框为只读</li><li><code>pattern</code>：指定一个正则表达式，用于验证输入值的格式</li><li><code>min</code>和<code>max</code>：指定能够输入的数量最值</li></ul><h3 id="5-2-其他常用标签">5.2 其他常用标签</h3><p><code>&lt;button&gt;&lt;/button&gt;</code>：用于创建按钮，可以在表单中使用，也可以作为单独的控件，支持更灵活的内容和样式，常用类型有：</p><ul><li><code>submit</code>：提交表单</li><li><code>reset</code>：用于重置表单所有字段</li><li><code>button</code>：用于 javascript 事件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 重置按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 普通按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;按钮被点击了&#x27;)&quot;</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;textarea&gt;&lt;/textarea&gt;</code>：用于创建多行文本输入框，以接收较长的文本数据，需要指定行和列的长度</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;4&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;50&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入评论&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;select&gt;&lt;/select&gt;</code>、<code>&lt;optgroup&gt;&lt;/optgroup&gt;</code>和<code>&lt;option&gt;&lt;/option&gt;</code>：第一个标签对定义了一个下拉列表，第二个标签对定义选项分组，第三个标签设置列表中的每个选项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;fruits&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;常见水果&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;apple&quot;</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;banana&quot;</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">&quot;热带水果&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;mango&quot;</span>&gt;</span>芒果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;papaya&quot;</span>&gt;</span>木瓜<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贪心算法</title>
      <link href="/posts/a4ce31d2/"/>
      <url>/posts/a4ce31d2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-基本原理">1. 基本原理</h2><p>贪心（Greedy）：在每一步选择中，都选择当前状态下最优的选择，以希望通过一系列的局部最优的选择达到全局最优的结果</p><p>基本步骤：</p><ol><li>建立数学模型来描述问题，然后将问题分成若干个子问题</li><li>对每一个子问题求局部最优解</li><li>将子问题的局部最优解合并为原问题的最优解</li></ol><p>三种方法的比较</p><table><thead><tr><th>特性</th><th>分治策略</th><th>动态规划</th><th>贪心算法</th></tr></thead><tbody><tr><td>子问题处理</td><td>独立解决</td><td>保存结果</td><td>求局部最优解</td></tr><tr><td>时间复杂度</td><td>通常较高，依赖于分解的层数</td><td>通常是O(n^2)或O(n log n)</td><td>通常是O(n)或O(log n)</td></tr><tr><td>空间复杂度</td><td>不存储中间结果，递归合并子问题的解</td><td>需要存储dp数组</td><td>不存储中间结果，直接使用局部最优解</td></tr><tr><td>方向</td><td>自顶向下</td><td>自底向上</td><td>自顶向下</td></tr></tbody></table><div class="note success flat"><p>可以发现，无论是分治策略还是动态规划还是贪心算法，他们都是将原问题分成多个子问题，再利用子问题的解求解原问题<br>差别在于，<strong>分治策略不会修剪子问题递归树，而贪心算法和动态规划都会根据问题的性质和结构对子问题递归树进行修剪</strong><br>其实，<strong>动态规划可以看作是分治策略的一种特殊情况，而贪心算法是动态规划的一种特殊情况</strong></p></div><p>贪心算法的必要条件：</p><ul><li><strong>无后效性：已经做出的决策或选择不会影响未来决策的有效性和可行性</strong>，也就是说，一旦做出选择，就不能改变，并且该选择对后续决策不会造成负面影响</li><li><strong>最优子结构：当前问题的最优解包含其子问题的最优解</strong></li></ul><h2 id="2-经典问题">2. 经典问题</h2><blockquote><p>贪心算法的核心就是理解为什么局部最优解是全局最优解！</p></blockquote><h3 id="2-1-活动选择问题">2.1 活动选择问题</h3><p>问题描述：有n个需要在同一天使用同一个教室的活动，教室同一时刻只能由一个活动使用，给定每个活动的名字、起始时间start和结束时间end，问怎样安排活动能够使当天举行的活动的数量最多</p><p>贪心：总是选择最早结束的活动，因为这样就能够使得剩下的时间最多，剩下的时间越多，理论上能举行的活动自然就越多</p><div class="note warning flat"><p>如果我们总是选择最早开始的，那么很有可能持续很长时间<br>如果我们总是选择最短持续的，那么可能会有很多时间碎片无法利用</p></div><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">select_activities</span>(<span class="params">activities, n</span>):</span><br><span class="line">    activities = <span class="built_in">sorted</span>(activities, key=<span class="keyword">lambda</span> x: x[<span class="number">2</span>])</span><br><span class="line">    result = []</span><br><span class="line">    end = -<span class="number">1</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i != n:</span><br><span class="line">        begin = activities[i][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> begin &gt;= end:</span><br><span class="line">            result.append(activities[i][<span class="number">0</span>])</span><br><span class="line">            end = activities[i][<span class="number">2</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;choose activity <span class="subst">&#123;activities[i][<span class="number">0</span>]&#125;</span> which begins at <span class="subst">&#123;activities[i][<span class="number">1</span>]&#125;</span> and ends at <span class="subst">&#123;activities[i][<span class="number">2</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h3 id="2-2-分数背包问题">2.2 分数背包问题</h3><p>问题描述：有n个物品，每个物品对应的价值为v，每个物品对应的重量为w，背包容量是c，可以选择任意部分物品放入背包，即不需要将整个物品装入背包，求不超过背包容量的前提下能拿的物品的最大总价值</p><p>贪心：总是选择拿均重价值最高的物品，相当于每单位背包容量都要放当前最大价值的物品</p><div class="note warning flat"><p>0/1背包不能用贪心算法，因为每选取一个物品，都会影响背包的剩余容量，而当前最大价值的物品很有可能重量很大</p></div><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">partial_knapsack</span>(<span class="params">items, capacity, n</span>):</span><br><span class="line">    <span class="comment"># items(名称，价值，重量)，计算得到性价比(名称，性价比，重量)</span></span><br><span class="line">    v_per_w = [[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        v_per_w[i][<span class="number">0</span>] = items[i][<span class="number">0</span>]</span><br><span class="line">        v_per_w[i][<span class="number">1</span>] = <span class="built_in">float</span>(items[i][<span class="number">1</span>] / items[i][<span class="number">2</span>])</span><br><span class="line">        v_per_w[i][<span class="number">2</span>] = items[i][<span class="number">2</span>]</span><br><span class="line">    <span class="comment"># 按照性价比降序排序</span></span><br><span class="line">    v_per_w.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 一直拿整份性价比最高的，直到背包容量不够只能拿部分</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">if</span> v_per_w[i][<span class="number">2</span>] &lt;= capacity:</span><br><span class="line">            value = v_per_w[i][<span class="number">1</span>] * v_per_w[i][<span class="number">2</span>]</span><br><span class="line">            total += value</span><br><span class="line">            capacity -= v_per_w[i][<span class="number">2</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Take full <span class="subst">&#123;v_per_w[i][<span class="number">0</span>]&#125;</span>: weight = <span class="subst">&#123;v_per_w[i][<span class="number">2</span>]&#125;</span>, value per weight = <span class="subst">&#123;v_per_w[i][<span class="number">1</span>]:<span class="number">.2</span>f&#125;</span>, value = <span class="subst">&#123;value&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = v_per_w[i][<span class="number">1</span>] * capacity</span><br><span class="line">            total += value</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Take partial <span class="subst">&#123;v_per_w[i][<span class="number">0</span>]&#125;</span>: weight = <span class="subst">&#123;capacity&#125;</span>, value per weight = <span class="subst">&#123;v_per_w[i][<span class="number">1</span>]:<span class="number">.2</span>f&#125;</span>, value = <span class="subst">&#123;value&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Total value in knapsack: <span class="subst">&#123;total:<span class="number">.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> total</span><br></pre></td></tr></table></figure><h3 id="2-3-钱币支付问题">2.3 钱币支付问题</h3><p>问题描述：假设有1，2，5，10，20，50，100元的纸币，要支付价格为price元的物品，至少要用到什么纸币？</p><p>贪心：总是选择小于等于price的最大纸币</p><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cash</span>(<span class="params">value, price</span>):</span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    index = <span class="built_in">len</span>(value) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> price != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> value[index] &lt;= price:</span><br><span class="line">            <span class="keyword">if</span> value[index] <span class="keyword">not</span> <span class="keyword">in</span> result:</span><br><span class="line">                result[value[index]]  = <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result[value[index]] += <span class="number">1</span></span><br><span class="line">            price -= value[index]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            index -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> denomination, count <span class="keyword">in</span> result.items():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;需要<span class="subst">&#123;count&#125;</span>张面值为<span class="subst">&#123;denomination&#125;</span>的纸币&quot;</span>)</span><br><span class="line"></span><br><span class="line">value = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">100</span>]</span><br><span class="line">price = <span class="number">3564</span></span><br><span class="line">cash(value, price)</span><br></pre></td></tr></table></figure><h3 id="2-4-小船过河问题">2.4 小船过河问题</h3><p>问题描述：有n个人，只有一艘船，船只能坐两人，每个人都有一个对应的划船速度，船的速度取决于船中两人较慢的人的划船速度，一开始n个人和船都在岸a，问将这n个人运到岸b，最少需要多久？（注意船划过去还要划回来，一来一回可以是不同的人）</p><p>贪心：实际上一个来回只能送一个人到对岸，假设一轮为两个来回，以下两个选择之一是最优选择，它们都在一轮中将当前的最慢和次慢送到岸b，并且保证剩下所有人都在岸a，因此具有最优子结构（假设按照划船时间从大到小排序）</p><ul><li>选择一：次快-最快-最慢-次快，即t[-1]+2*t[-2]+t[0]<ul><li>第一个来回：过去选择最快的两个人，回来选择最快的人</li><li>第二个来回：过去选择最慢的两个人，回来选择次快的人</li></ul></li><li>选择二：最慢-最快-次慢-最快，即2*t[-1]+t[0]+t[1]<ul><li>第一个来回：过去选择最快和最慢的人，回来选择最快的人</li><li>第二个来回：过去选择最快和次慢的人，回来选择最快的人</li></ul></li></ul><div class="note warning flat"><p>重点在于如何节省回来的时间，要尽可能让快的人驾船回来，也就对应着两种方法：一是让快的人即负责过去也负责回来，二是提前送一个快的人到对岸为下一次回来做准备<br>注意如果岸a只有三个人属于特殊情况需要单独处理！同时如果岸a只有两个人过去就不需要再回来了！</p></div><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cross_river</span>(<span class="params">speed, n</span>):</span><br><span class="line">    <span class="comment"># 倒序排列，因为时间越短的代表速度越快</span></span><br><span class="line">    speed.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 输出排序后的信息</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>&#x27;s speed is <span class="subst">&#123;speed[i]&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment"># 记录总时间</span></span><br><span class="line">    time = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 记录位于岸a的最慢的人的索引</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> index != n:</span><br><span class="line">        <span class="keyword">if</span> index == n - <span class="number">2</span>:</span><br><span class="line">            time += speed[index]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;GO: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span> and <span class="subst">&#123;n-<span class="number">2</span>&#125;</span>, COST: <span class="subst">&#123;speed[-<span class="number">2</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;END! TOTAL COST: <span class="subst">&#123;time&#125;</span>&quot;</span>)</span><br><span class="line">            index += <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> index == n - <span class="number">3</span>:</span><br><span class="line">            time += speed[index] + speed[index+<span class="number">1</span>] + speed[-<span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;GO: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span> and <span class="subst">&#123;index&#125;</span>, COST: <span class="subst">&#123;speed[index]&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;BACK: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span>, COST: <span class="subst">&#123;speed[-<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;GO: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span> and <span class="subst">&#123;index+<span class="number">1</span>&#125;</span>, COST:<span class="subst">&#123;speed[index+<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;END! TOTAL COST: <span class="subst">&#123;time&#125;</span>&quot;</span>)</span><br><span class="line">            index += <span class="number">3</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            time1 = <span class="number">2</span> * speed[-<span class="number">2</span>] + speed[-<span class="number">1</span>] + speed[index]</span><br><span class="line">            time2 = <span class="number">2</span> * speed[-<span class="number">1</span>] + speed[index] + speed[index+<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> time1 &gt; time2:</span><br><span class="line">                time += time2</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;GO: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span> and <span class="subst">&#123;index&#125;</span>, COST: <span class="subst">&#123;speed[index]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;BACK: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span>, COST: <span class="subst">&#123;speed[-<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;GO: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span> and <span class="subst">&#123;index+<span class="number">1</span>&#125;</span>, COST: <span class="subst">&#123;speed[index+<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;BACK: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span>, COST: <span class="subst">&#123;speed[-<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                time += time1</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;GO: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span> and <span class="subst">&#123;n-<span class="number">2</span>&#125;</span>, COST: <span class="subst">&#123;speed[-<span class="number">2</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;BACK: <span class="subst">&#123;n-<span class="number">1</span>&#125;</span>, COST: <span class="subst">&#123;speed[-<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;GO: <span class="subst">&#123;index&#125;</span> and <span class="subst">&#123;index+<span class="number">1</span>&#125;</span>, COST: <span class="subst">&#123;speed[index]&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;BACK: <span class="subst">&#123;n-<span class="number">2</span>&#125;</span>, COST: <span class="subst">&#123;speed[-<span class="number">2</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            index += <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> time</span><br><span class="line"></span><br><span class="line">speed = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">10</span>]</span><br><span class="line">cross_river(speed, <span class="built_in">len</span>(speed))</span><br></pre></td></tr></table></figure><h3 id="2-5-区间覆盖问题">2.5 区间覆盖问题</h3><p>问题描述</p><p>贪心：</p><p>代码：</p><h3 id="2-6-赫夫曼编码">2.6 赫夫曼编码</h3><p>问题描述</p><p>贪心：</p><p>代码：</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web开发</title>
      <link href="/posts/3f3c3ccb/"/>
      <url>/posts/3f3c3ccb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-什么是Web开发？">1. 什么是Web开发？</h2><p>Web开发是指<strong>构建和维护网站或应用的过程</strong>，结合了<strong>技术和美术</strong>，为用户提供良好的、交互式的在线体验</p><p>Web开发可以分为两部分</p><ul><li>前端（FrontEnd）：构建网站用户界面，面向客户端</li><li>后端（BackEnd）：处理网站服务器逻辑、数据库操作和业务功能，面向服务器</li></ul><div class="note info flat"><p>实际上，Web开发还包括网络通信和Web安全，属于Web开发的辅助功能</p></div><h2 id="2-什么是前端？">2. 什么是前端？</h2><p>前端技术栈</p><ul><li>html：设置网页结构</li><li>css：设置网页样式</li><li>javascript：设置网页行为</li></ul><p>前端应该关注哪些方面</p><ul><li><strong>功能</strong>：是否满足用户需求</li><li><strong>美观</strong>：是否符合用户审美</li><li><strong>无障碍</strong>：是否能保证无论是什么人，无论在哪儿，无论什么时候都是可用的</li><li><strong>安全</strong>：是否能够有效保护用户隐私</li><li><strong>性能</strong>：是否具有较高的网页运行速度</li><li><strong>兼容</strong>：是否能够兼容手机、平板、笔记本等设备</li></ul><p>前端的边界</p><ul><li>node.js：是一个后段环境，被广泛应用于前端开发工具的构建，也允许前端开发者使用 JavaScript 构建服务器端应用，是前端和后端的桥梁</li><li>electron：是一个框架，用于使用前端技术开发跨平台的桌面应用程序，将网页从浏览器应用扩展到桌面平台</li><li>react：是一个用于构建用户界面的 JavaScript 库，专注于通过组件化的方式构建动态的、交互丰富的 UI</li><li>webgl：是一个 JavaScript API，允许在网页中直接渲染 3D 图形，将网页从 2D 扩展到了图形和动画等领域</li></ul><h2 id="3-什么是后端？">3. 什么是后端？</h2><p>后端技术栈</p><ul><li>编程框架：帮助开发者快速构建高效、标准化的后端系统，是实现业务逻辑的基础工具，常见的有Python中的Flask和Django，Java中的Spring，Node.js的Express等</li><li>数据库：负责存储和管理数据，如MySQL、PostgreSQL、Oracle、MongoDB等</li><li>API：是连接前端和后端的通信接口，如RESTful API和WebSocket等</li><li>服务器：是运行和托管后端代码的平台，用于接收请求、处理业务逻辑和返回结果，又分为Web服务器、应用服务器和云服务器</li></ul><p>后端核心职责</p><ul><li>数据管理：管理和操作数据库，支持数据的“CURD”和复杂查询操作，并确保数据的持久性和一致性</li><li>业务逻辑：接受前端请求-&gt;获得程序输入-&gt;得出程序输出-&gt;返回后端响应</li><li>性能优化：利用缓存数据、延迟加载、异步处理、流量分配等机制提高程序响应速度</li><li>用户管理：用户注册与登录、身份认证、权限管理等常见功能</li><li>系统集成：通过API与第三方服务交互</li></ul><p>简单来说，后端是系统的“动力引擎”，负责驱动和支持前端的功能展示，是现代Web开发的重要组成部分。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态规划</title>
      <link href="/posts/7bb01bb2/"/>
      <url>/posts/7bb01bb2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-原理">1. 原理</h2><p><strong>动态规划（Dynamic Programming,DP）</strong>：通过把复杂的问题分解成更小的子问题，并记录这些子问题的解来避免计算重复子问题，从而达到降低计算复杂度的目的</p><p>两种分解的区别</p><table><thead><tr><th>区别</th><th>分治策略</th><th>动态规划</th></tr></thead><tbody><tr><td>划分点</td><td>通常只有一个划分点</td><td>可以有多个划分点</td></tr><tr><td>子问题性质</td><td>子问题之间都是相互独立的</td><td>子问题是重叠的：一是存在重复的子问题，而是子问题的解依赖于其他子问题</td></tr><tr><td>如何处理子问题</td><td>将子问题的解合并返回到上一级</td><td>低级子问题的解被全局存储，以供更高级的子问题使用</td></tr></tbody></table><p>动态规划的三要素</p><ul><li><strong>最优子结构</strong>：一个问题的最优解可以通过其子问题的最优解来构建</li><li><strong>重叠子问题</strong>：一个问题的子问题在解决过程中会被多次计算，并且不会生成新的子问题</li><li><strong>状态转移方程</strong>：构建<strong>动态规划表（DP TABLE）</strong></li></ul><div class="note warning flat"><p>考虑寻找一个图中从起点到终点的最长简单路径，假设图为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⇆</mo><mi>B</mi><mo>⇆</mo><mi>C</mi><mo>⇆</mo><mi>D</mi><mo>⇆</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">A \leftrightarrows B \leftrightarrows C \leftrightarrows D \leftrightarrows A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641em;vertical-align:-0.1808em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⇆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;vertical-align:-0.1808em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⇆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;vertical-align:-0.1808em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⇆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;vertical-align:-0.1808em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel amsrm">⇆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>，从A到D的最长简单路径是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>←</mo><mi>B</mi><mo>←</mo><mi>C</mi><mo>←</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">A \leftarrow B \leftarrow C \leftarrow D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>，如果拆成两个子问题，A到B的最长简单路径是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>←</mo><mi>D</mi><mo>←</mo><mi>C</mi><mo>←</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A \leftarrow D \leftarrow C \leftarrow B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，B到D的最长简单路径是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>←</mo><mi>A</mi><mo>←</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">B \leftarrow A \leftarrow D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>，合并在一起就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>←</mo><mi>D</mi><mo>←</mo><mi>C</mi><mo>←</mo><mi>B</mi><mo>←</mo><mi>A</mi><mo>←</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">A \leftarrow D \leftarrow C \leftarrow B \leftarrow A \leftarrow D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>，显然这不是简单路径，不符合最优子结构！</p></div><p>动态规划的核心步骤</p><ol><li><strong>刻画一个最优子结构</strong></li><li><strong>递归地定义重叠子问题 / 设计状态转移方程</strong></li><li><strong>采用自底向上的方法计算最优解的值</strong></li><li><strong>利用结果构造得到最优解的过程</strong></li></ol><div class="note warning flat"><p>第4步是可选的，因为有时候题目不需要知道过程只需要知道结果</p></div><p>刻画最优子结构的方式</p><ol><li><strong>证明求最优解的第一步总是做出一个选择，然后假定该选择就是最优的</strong></li><li><strong>基于上述选择，确定划分为多少个子问题，以及每个子问题空间是什么</strong></li><li><strong>利用“剪切-粘贴”法，证明子问题的最优解与原问题的最优解是一致的</strong></li></ol><p>自底向上的方式</p><ul><li><strong>只求解一次子问题：精心安排求解顺序，保证第一次求解某个子问题时就可以得到其最优解</strong></li><li><strong>问题只依赖于其子问题：精心设计求解方程，保证所有依赖的子问题都已经求解完毕</strong></li></ul><h2 id="2-典例">2. 典例</h2><h3 id="2-1-钢条切割">2.1 钢条切割</h3><h5 id="问题介绍">问题介绍</h5><p>问题描述：有一根长度为n的钢条和一张价格表，目标是切割这根钢条使得销售这些片段可以获得最高收益（也可以不切割，一整根卖出去）</p><p>案例分析：假设有一根长度为4的钢条和如下的价格表，则有8种切割方案：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mo stretchy="false">(</mo><mn>4</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;(4),(1,3),(2,2),(3,1),(1,1,2),(1,2,1),(2,1,1),(1,1,1,1)&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2,2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>的方案可以获得最高收益10</p><table><thead><tr><th>长度</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th></tr></thead><tbody><tr><td>价格</td><td>1</td><td>5</td><td>8</td><td>9</td><td>10</td><td>17</td><td>17</td><td>20</td><td>24</td><td>30</td></tr></tbody></table><h5 id="第1步：刻画一个最优子结构">第1步：刻画一个最优子结构</h5><p>对于当前钢条，考虑全部最佳切割点中最左边的切割点，该切割点将钢条分为左段和右段，<strong>可知左段不需要继续切割，右段需要继续切割（也可以不切割）</strong>，因此<strong>当前钢条的最优收益 = 左段价格 + 右段的最佳收益</strong></p><h5 id="第2步：递归地定义重叠子问题">第2步：递归地定义重叠子问题</h5><p>假设钢条总长为n，左段长度为i，最佳收益为r，钢条价格为p，则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mi>n</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>n</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo>+</mo><msub><mi>r</mi><mrow><mi>n</mi><mo>−</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mn>0</mn><mo>&lt;</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">r_n = \begin{cases}0 &amp; \text{if }n = 0 \\\max(p_i + r_{n-i}) &amp; \text{if }0 &lt; i \leq n\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop">max</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h5 id="第3步：采用自底向上的方法计算最优解的值">第3步：采用自底向上的方法计算最优解的值</h5><p>考虑每个长度l的钢条及其最大收益</p><ul><li>对于长为0的钢条，最大收益就是0</li><li>对于长为1的钢条，最大收益就是价格</li><li>对于长为2的钢条，最大收益可以分为左1加右1，左2加右0，其中长为0、1的最大收益由前面步骤可得</li><li>对于长为3的钢条，最大收益可以分为左1加右2，左2加右1，左3加右0，其中长为0、1、2的最大收益由前面步骤可得</li><li>对于长为4的钢条，最大收益可以分为左1加右3，左2加右2，左3加右1，左4加右0，其中长为0、1、2、3的最大收益由前面步骤可得</li><li>以此类推，直到长为n，其中长为0、1、2、3、…、n-1的最大收益由前面步骤可得</li></ul><h5 id="第4步：利用结果构造得到最优解的过程">第4步：利用结果构造得到最优解的过程</h5><p>记录长为l的钢条对应的最佳切割点，相当于记录最佳切割点对应的左段长度，那么<strong>最优解 = 左段长度 + 右段钢条的左段长度 + 右段钢条的右段钢条的左段长度，以此类推，直到某次右段钢条的长度为0</strong></p><h5 id="代码实现">代码实现</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从左到右输出每段长度</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">optimal</span>(<span class="params">left_len, n</span>):</span><br><span class="line">  left = <span class="number">0</span></span><br><span class="line">  right = n</span><br><span class="line">  <span class="keyword">while</span> right != <span class="number">0</span>:</span><br><span class="line">    left = left_len[right]</span><br><span class="line">    <span class="built_in">print</span>(left)</span><br><span class="line">    right = right - left</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cut_rod</span>(<span class="params">p, n</span>):</span><br><span class="line">  <span class="comment"># 最大收益</span></span><br><span class="line">  reward = [<span class="number">0</span>] * (n + <span class="number">1</span>)</span><br><span class="line">  <span class="comment"># 最佳切割点对应的左段长度</span></span><br><span class="line">  left_len = [<span class="number">0</span>] * (n + <span class="number">1</span>)</span><br><span class="line">  <span class="comment"># 每次循环得到长度为curlen的钢条的最大收益</span></span><br><span class="line">  <span class="keyword">for</span> cur_len <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    <span class="comment"># 初始化最大收益为负数，用于比较</span></span><br><span class="line">    max_price = -<span class="number">1</span></span><br><span class="line">    <span class="comment"># 遍历所有切割点，i是左段长度，cur_len - i是右段长度</span></span><br><span class="line">    <span class="keyword">for</span> left <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, cur_len + <span class="number">1</span>):</span><br><span class="line">      right = cur_len - left</span><br><span class="line">      cur_price = p[left] + reward[right]</span><br><span class="line">      <span class="comment"># 更新最大收益和对应的切割点</span></span><br><span class="line">      <span class="keyword">if</span> cur_price &gt; max_price:</span><br><span class="line">        max_price = cur_price</span><br><span class="line">        left_len[cur_len] = left</span><br><span class="line">    <span class="comment"># 记录cur_len的最大收益</span></span><br><span class="line">    reward[cur_len] = max_price</span><br><span class="line">  <span class="comment"># 长度为n的最大收益</span></span><br><span class="line">  max_price = reward[n]</span><br><span class="line">  <span class="comment"># 获取最优解的过程</span></span><br><span class="line">  optimal(left_len, n)</span><br><span class="line">  <span class="keyword">return</span> max_price</span><br></pre></td></tr></table></figure><h3 id="2-2-矩阵乘法链">2.2 矩阵乘法链</h3><h4 id="问题介绍-2">问题介绍</h4><p>问题描述：给定n个矩阵的乘法链，目标是找到一种结合顺序，使得计算矩阵乘法链所需要的标量乘法次数最小，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>×</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p \times q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>×</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">q \times r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>的矩阵相乘所需要的标量乘法次数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>⋅</mo><mi>q</mi><mo>⋅</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">p \cdot q \cdot r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，得到的结果矩阵为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>×</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">p \times r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></p><p>案例分析：假设有三个矩阵A、B、C，它们的维度分别为10x100、100x5和5x50，有以下两种结合顺序，显然选择第1种的顺序所需的标量乘法次数更少</p><ol><li>(AB)C：需要10x100x5 + 10x5x50 = 7500次标量乘法</li><li>A(BC)：需要10x100x50 + 100x5x50 = 75000次标量乘法</li></ol><h4 id="第1步：刻画一个最优子结构-2">第1步：刻画一个最优子结构</h4><p>对于当前矩阵乘法链，找到一个最佳切割点分成左链和右链，相当于给左链和右链都加上一个括号，则<strong>当前链的最小次数 = 左链的最小次数 + 右链的最小次数 + 两链结果相乘的次数</strong></p><h4 id="第2步：递归地定义重叠子问题-2">第2步：递归地定义重叠子问题</h4><p>假设第i个矩阵的行值是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>，列值是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[i+1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，假设某条链的链首是第i个矩阵，链尾是第j个矩阵，该链的最小标量乘法次数表示为二维数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">m[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，对于切割点k，则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>i</mi><mo>≤</mo><mi>k</mi><mo>&lt;</mo><mi>j</mi></mrow></munder><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>+</mo><mi>m</mi><mo stretchy="false">[</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>⋅</mo><mi>p</mi><mo stretchy="false">[</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>⋅</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m[i][j] = \min_{i \leq k &lt; j} (m[i][k] + m[k+1][j] + p[i] \cdot p[k+1] \cdot p[j+1])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6382em;vertical-align:-0.8882em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">])</span></span></span></span></span></p><h4 id="第3步：采用自底向上的方法计算最优解的值-2">第3步：采用自底向上的方法计算最优解的值</h4><p>考虑每个链长l以及对应的链首i和链尾j，有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>=</mo><mi>j</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">l = j - i + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><ul><li>l=2，最小标量乘法次数就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>⋅</mo><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>⋅</mo><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>+</mo><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[i] \cdot p[i+1] \cdot p[i+2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span></span></span></span></li><li>l=3，那么可以分解为左1乘右2，左2乘右1，其中长为2的由前面步骤可得</li><li>l=4，那么可以分解为左1乘右3，左2乘右2，左3乘右1，其中长为2、3的由前面步骤可得</li><li>l=5，那么可以分解为左1乘右4，左2乘右3，左3乘右2，左4乘右1，其中长为2、3、4的由前面步骤可得</li><li>以此类推，直到l=n，其中长为1、2、3、…、n-1的由前面步骤可得</li></ul><h4 id="第4步：利用结果构造得到最优解的过程-2">第4步：利用结果构造得到最优解的过程</h4><p>需要额外的一个数组s[i][j]来保存该链对应的最佳切割点，那么<strong>最优解 = （最佳切割点） 和 （左链的最佳切割点）和 （右链的最佳切割点） 和 （左链-左链的最佳切割点和左链-右链的最佳切割点） 和 （右链-左链的最佳切割点和右链-右链的最佳切割点）和 …，以此类推，直到所有子链长度都是2即无法再分</strong></p><h4 id="代码实现-2">代码实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 递归求最优解</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">optimal</span>(<span class="params">s,i,j</span>):</span><br><span class="line">  <span class="keyword">if</span> i == j:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span> + <span class="built_in">str</span>(i)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;(&#x27;</span> + optimal(s,i,s[i][j]) + <span class="string">&#x27;x&#x27;</span> + optimal(s,s[i][j]+<span class="number">1</span>,j) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自底向上求最优解</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">matrix_chain_order</span>(<span class="params">p</span>):</span><br><span class="line">  <span class="comment"># 矩阵个数即链的长度，-1是因为p多存了一个元素表示最后一个矩阵的列值</span></span><br><span class="line">  n = <span class="built_in">len</span>(p) - <span class="number">1</span></span><br><span class="line">  <span class="comment"># 最小标量乘法次数</span></span><br><span class="line">  m = [[<span class="number">0</span>] * n <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">  <span class="comment"># 最佳切割点</span></span><br><span class="line">  s = [[<span class="number">0</span>] * n <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">  <span class="comment"># 每次循环得到长度为l的每个矩阵乘法链的最小标量乘法次数</span></span><br><span class="line">  <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):</span><br><span class="line">    <span class="comment"># 遍历链首上标，根据公式l=j-i+1，且j最大为n-1，可知i最大为n-l</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,n-l+<span class="number">1</span>):</span><br><span class="line">      <span class="comment"># 定义最小标量乘法次数为正无穷，用于比较</span></span><br><span class="line">      min_mult = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">      <span class="comment"># 计算链尾下标</span></span><br><span class="line">      j = i + l - <span class="number">1</span></span><br><span class="line">      <span class="comment"># 遍历每个切割点</span></span><br><span class="line">      <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(i,j):</span><br><span class="line">        <span class="comment"># 左链</span></span><br><span class="line">        left = m[i][k]</span><br><span class="line">        <span class="comment"># 右链</span></span><br><span class="line">        right = m[k+<span class="number">1</span>][j]</span><br><span class="line">        <span class="comment"># 当前最小标量乘法次数</span></span><br><span class="line">        cur_mult = left + right + p[i]*p[k+<span class="number">1</span>]*p[j+<span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 比较最小标量乘法次数</span></span><br><span class="line">        <span class="keyword">if</span> cur_mult &lt; min_mult:</span><br><span class="line">          min_mult = cur_mult</span><br><span class="line">          s[i][j] = k</span><br><span class="line">      <span class="comment"># 得到长度为l的每个矩阵乘法链的最小标量乘法次数</span></span><br><span class="line">      m[i][j] = min_mult</span><br><span class="line">  <span class="comment"># 最优解</span></span><br><span class="line">  min_mult = m[<span class="number">0</span>][n-<span class="number">1</span>]</span><br><span class="line">  res = optimal(s,<span class="number">0</span>,n-<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span> min_mult,res</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>m必须初始化为0，由于j=i+l-1，因此始终有j&gt;i，所以要保证j&lt;=i的矩阵值一直是0才能计算子问题的解</p></div><h3 id="2-3-最长公共子序列">2.3 最长公共子序列</h3><h4 id="问题介绍-3">问题介绍</h4><p>问题描述：给定两个序列X和Y，目标是找到它们的最长公共子序列，其中子序列是指下标递增（不一定连续）的元素组成的序列，该问题又称为LCS问题（Longest Common Subsequence）</p><p>案例分析：假设X = ABDAB，Y = BCCDAACAB，它们的公共子序列有AB，BD，BDA，BDB，DAB，BDAB，其中最长的是BDAB，长度为4</p><h4 id="第1步：刻画一个最优子结构-3">第1步：刻画一个最优子结构</h4><p>定理：对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo>&lt;</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>m</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">X = &lt;x_1,x_2,\ldots,x_m&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mo>&lt;</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">Y = &lt;y_1,y_2,\ldots,y_n&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，它们之间任意一个LCS，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>=</mo><mo>&lt;</mo><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>z</mi><mi>k</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">Z = &lt;z_1,z_2,\ldots,z_k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，则有以下三种情况</p><ul><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_m = y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><msub><mi>x</mi><mi>m</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">z_k = x_m = y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">X_{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">Y{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span></span>的LCS：只有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>k</mi></msub><mo>=</mo><msub><mi>x</mi><mi>m</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">z_k = x_m = y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>才能保证公共子序列是最大的，因此三个序列都减去这个元素同样满足LCS性质</li><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_m \neq y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>k</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>x</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">z_k \neq x_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">X_{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>的LCS：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>减去一个与LCS毫不相干的元素，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>依旧保持LCS性质</li><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_m \neq y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>k</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">z_k \neq y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>的LCS：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>减去一个与LCS毫不相干的元素，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>依旧保持LCS性质</li></ul><p>因此，问题可以分解为</p><ul><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_m = y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则相当于求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">X_{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">Y{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span></span>的LCS</li><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_m \neq y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则相当于求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">X_{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>的LCS和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>的LCS中的较长者</li></ul><h4 id="第2步：递归地定义重叠子问题-3">第2步：递归地定义重叠子问题</h4><p>假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo>&lt;</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>m</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">X = &lt;x_1,x_2,\ldots,x_m&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mo>&lt;</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">Y = &lt;y_1,y_2,\ldots,y_n&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">c[i,j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">Y_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的LCS的长度，则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>=</mo><mn>0</mn><mtext> or </mtext><mi>j</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>&gt;</mo><mn>0</mn><mtext> and </mtext><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>&gt;</mo><mn>0</mn><mtext> and </mtext><msub><mi>x</mi><mi>i</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">c[i,j] = \begin{cases}0 &amp; \text{if } i = 0 \text{ or } j = 0 \\c[i-1,j-1] + 1 &amp; \text{if } i,j &gt; 0 \text{ and } x_i = y_j \\\max(c[i,j-1],c[i-1,j]) &amp; \text{if } i,j &gt; 0 \text{ and } x_i \neq y_j\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop">max</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">])</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mord text"><span class="mord"> or </span></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mord text"><span class="mord"> and </span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mord text"><span class="mord"> and </span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="第3步：采用自底向上的方法计算最优解的值-3">第3步：采用自底向上的方法计算最优解的值</h4><p>考虑每个长度下的X和每个长度下的Y对应的c[i][j]</p><ul><li>如果X或Y当前长为0，则对应的LCS都是0</li><li>X最长为1<ul><li>Y最长为1：LCS(1,1)的长度取决于LCS(0,1)，LCS(1,0)，LCS(0,0)，而这三个都在之前得到</li><li>Y最长为2：LCS(1,2)的长度取决于LCS(0,2)，LCS(1,1)，LCS(0,1)，而LCS(1,1)在之前已经得到</li><li>以此类推，直到Y最长为n</li></ul></li><li>X最长为2<ul><li>Y最长为1：LCS(2,1)的长度取决于LCS(1,1)，LCS(2,0)，LCS(1,0)，而LCS(1,1)在之前已经得到</li><li>Y最长为2：LCS(2,2)的长度取决于LCS(1,2)，LCS(2,1)，LCS(1,1)，而LCS(2,1)在之前已经得到</li><li>以此类推，直到Y最长为n</li></ul></li><li>以此类推，直到X最长为m</li></ul><h4 id="第4步：利用结果构造得到最优解的过程-3">第4步：利用结果构造得到最优解的过程</h4><p>由定理可知，只有同时改变X和Y，即当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_m = y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，才会在LCS中加入元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">x_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其他情况下都是单独改变X或单独改变Y去寻找<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>m</mi></msub><mo>=</mo><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_m = y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的情况，所以一个二维数组记录每次情况</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/Algorithm/202410171523548.png" alt=""></p><h4 id="代码实现-3">代码实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 递归找最大公共子序列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">optimal</span>(<span class="params">road, X, len_X, len_Y</span>):</span><br><span class="line">  <span class="keyword">if</span> len_X == <span class="number">0</span> <span class="keyword">or</span> len_Y == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># 从右下往左上遍历，因此新找到的元素要放在最后面</span></span><br><span class="line">  <span class="keyword">if</span> road[len_X][len_Y] == <span class="string">&#x27;bingo&#x27;</span>:</span><br><span class="line">    <span class="keyword">return</span> optimal(road, X, len_X - <span class="number">1</span>, len_Y - <span class="number">1</span>) + X[len_X]</span><br><span class="line">  <span class="keyword">elif</span> road[len_X][len_Y] == <span class="string">&#x27;left&#x27;</span>:</span><br><span class="line">    <span class="keyword">return</span> optimal(road, X, len_X, len_Y - <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">elif</span> road[len_X][len_Y] == <span class="string">&#x27;up&#x27;</span>:</span><br><span class="line">    <span class="keyword">return</span> optimal(road, X, len_X - <span class="number">1</span>, len_Y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">LCS</span>(<span class="params">X, Y</span>):</span><br><span class="line">  <span class="comment"># 在X和Y的开头插入&#x27;$&#x27;，以匹配下标和序号</span></span><br><span class="line">  X = <span class="string">&#x27;$&#x27;</span> + X</span><br><span class="line">  Y = <span class="string">&#x27;$&#x27;</span> + Y</span><br><span class="line">  len_X = <span class="built_in">len</span>(X)</span><br><span class="line">  len_Y = <span class="built_in">len</span>(Y)</span><br><span class="line">  common = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(len_Y)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(len_X)]</span><br><span class="line">  road = [[<span class="string">&#x27;&#x27;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(len_Y)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(len_X)]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, len_X):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, len_Y):</span><br><span class="line">      <span class="keyword">if</span> X[i] == Y[j]:</span><br><span class="line">        common[i][j] = common[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">        road[i][j] = <span class="string">&#x27;bingo&#x27;</span></span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 去掉当前X的最后一个元素得到的LCS</span></span><br><span class="line">        X_left = common[i][j - <span class="number">1</span>]</span><br><span class="line">        <span class="comment"># 去掉当前Y的最后一个元素得到的LCS</span></span><br><span class="line">        Y_up = common[i - <span class="number">1</span>][j]</span><br><span class="line">        <span class="keyword">if</span> X_left &gt; Y_up:</span><br><span class="line">          common[i][j] = X_left</span><br><span class="line">          road[i][j] = <span class="string">&#x27;left&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          common[i][j] = Y_up</span><br><span class="line">          road[i][j] = <span class="string">&#x27;up&#x27;</span></span><br><span class="line">  res = optimal(road, X, len_X - <span class="number">1</span>, len_Y - <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span> common, res</span><br></pre></td></tr></table></figure><h3 id="2-4-最优二叉搜索树">2.4 最优二叉搜索树</h3><h4 id="问题介绍-4">问题介绍</h4><p>问题描述：给定n个关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>3</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>k</mi><mi>n</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;k_1,k_2,k_3,\ldots,k_n&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，其中还存在n+1个伪关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>d</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>d</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>d</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>n</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;d_0,d_1,d_2,\ldots,d_n&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>n</mi></msub><mo>&gt;</mo><msub><mi>k</mi><mi>n</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>k</mi><mi>i</mi></msub><mo>&lt;</mo><msub><mi>d</mi><mi>i</mi></msub><mo>&lt;</mo><msub><mi>k</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">d_n&gt;k_n,\,k_i&lt;d_i&lt;k_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>，关键字没找到就会找到伪关键字，每个关键字有一个访问概率p，每个伪关键字也有一个访问概率q，假定搜索代价是找到关键字所访问的结点个数，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">depth(i)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">pt</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，要求构造出一个二叉搜索树，使得在该树中的搜索各种关键字的代价最小，即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>p</mi><mi>i</mi></msub></mrow><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><msub><mi>d</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>q</mi><mi>i</mi></msub></mrow></mrow><annotation encoding="application/x-tex">1 + \sum_{i=1}^{n}{depth(k_i) \times p_i} + \sum_{i=0}^{n}{depth(d_i) \times q_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">pt</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">pt</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>最小，也称为OBST问题（Optimal Binary Search Tree）</p><p>案例分析：对一个n=5的关键字集合及如下搜索概率，有以下两种树结构，其中第二种代价最小为2.75</p><table><thead><tr><th>i</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>p_i</td><td>0.00</td><td>0.15</td><td>0.10</td><td>0.05</td><td>0.10</td><td>0.20</td></tr><tr><td>q_i</td><td>0.05</td><td>0.10</td><td>0.05</td><td>0.05</td><td>0.05</td><td>0.10</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/Algorithm/202410171523550.png" alt=""><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/Algorithm/202410171523549.png" alt=""></p><div class="note warning flat"><p>最优二叉搜索树不一定是高度最矮的，搜索频率越大的也不一定出现在越上面</p></div><h4 id="第1步：刻画一个最优子结构-4">第1步：刻画一个最优子结构</h4><p>如果一颗树是最优二叉搜索树，则它的根节点的左子树和右子树也都是最优二叉搜索树</p><h4 id="第2步：递归地定义重叠子问题-4">第2步：递归地定义重叠子问题</h4><p>假设当前树存在按序关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>k</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>k</mi><mi>j</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;k_i,k_{i+1},\ldots,k_j&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，其中选取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>r</mi></msub><mo separator="true">,</mo><mi>i</mi><mo>≤</mo><mi>r</mi><mo>≤</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">k_r,i\leq r \leq j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>作为根结点，那么它的左子树就只有关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>k</mi><mi>i</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;k_i,\ldots,k_{r-1}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>和伪关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>d</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>d</mi><mrow><mi>r</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;d_{i-1},\ldots,d_{r-1}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>，右子树就只有关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>k</mi><mrow><mi>r</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>k</mi><mi>j</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;k_{r+1},\ldots,k_j&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>和伪关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>d</mi><mi>r</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>j</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;d_r,\ldots,d_j&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span></p><p>但子树的搜索代价是以其高度计算的，将子树插到原树的根节点的位置会导致高度增加1，因此需要计算子树插入原树导致的搜索代价增量，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mn>1</mn><mo>×</mo><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mi>i</mi></mrow><mi>j</mi></msubsup><msub><mi>p</mi><mi>l</mi></msub><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>j</mi></msubsup><msub><mi>q</mi><mi>l</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w[i][j]= 1 \times (\sum_{l=i}^{j}{p_l} + \sum_{l=i-1}^{j}{q_l})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2643em;vertical-align:-0.2997em;"></span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9646em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3226em;vertical-align:-0.358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9646em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，它也满足递归式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>r</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>w</mi><mo stretchy="false">[</mo><mi>r</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mn>1</mn><mo>×</mo><msub><mi>p</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">w[i][j] = w[i][r-1] + w[r+1,j] + 1 \times p_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>令e[i][j]表示以关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>k</mi><mi>i</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>k</mi><mi>j</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;k_i,\ldots,k_j&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>和伪关键字<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><msub><mi>d</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>j</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;d_{i-1},\ldots,d_j&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>组成的最优二叉搜索树的搜索代价则有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>e</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>q</mi><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>&gt;</mo><mi>j</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>i</mi><mo>≤</mo><mi>r</mi><mo>≤</mo><mi>j</mi></mrow></msub><mo stretchy="false">{</mo><mi>e</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>r</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>e</mi><mo stretchy="false">[</mo><mi>r</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">}</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>≤</mo><mi>j</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">e[i][j] = \begin {cases}q_i &amp; \text{if } i &gt; j \\\min_{i\leq r \leq j} \{e[i][r-1] + e[r+1][j] + w[i][j]\} &amp; \text{if } i \leq j\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">e</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="第3步：采用自底向上的方法计算最优解的值-4">第3步：采用自底向上的方法计算最优解的值</h4><p>考虑每个子树的关键字的起始下标是i，终止下标是j，则结点总数为l = j - i + 1</p><ul><li>l=0，就是伪关键字，搜索代价为q[i-1]</li><li>l=1，r只能是i（左0右0）</li><li>l=2，r可以是i（左0右1），i+1（左1右0），其中结点总数为0、1的在之前已经算出</li><li>l=3，r可以是i（左0右2），i+1（左1右1），i+2（左2右0），其中结点总数为0、1、2的在之前已经算出</li><li>以此类推，直到l=n，其中长为0、1、2、3、…、n-1的在之前已经算出</li></ul><h4 id="第4步：利用结果构造得到最优解的过程-4">第4步：利用结果构造得到最优解的过程</h4><p>用一个二维数组root[i][j]记录划分子树选取的最佳根节点，那么<strong>从root[1][n]选取的划分根节点开始划分成左子树和右子树，然后再选取左子树的划分根节点和右子树的划分根节点，以此类推，直到无法划分</strong></p><h4 id="代码实现-4">代码实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先序遍历最优搜索二叉树</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">optimal</span>(<span class="params">root, i, j</span>):</span><br><span class="line">  <span class="keyword">if</span> i == j + <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;d_&#x27;</span> + <span class="built_in">str</span>(j))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  r = root[i][j]</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;k_&#x27;</span> + <span class="built_in">str</span>(r))</span><br><span class="line">  optimal(root, i, r-<span class="number">1</span>)</span><br><span class="line">  optimal(root, r+<span class="number">1</span>, j)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">OBST</span>(<span class="params">p,q</span>):</span><br><span class="line">  <span class="comment"># p的下标从1开始，q的下标从0开始，但是他们最后一个下标都是n，因此在p的最前面加一个元素</span></span><br><span class="line">  p = [<span class="number">0.0</span>] + p</span><br><span class="line">  length = <span class="built_in">len</span>(q)</span><br><span class="line">  w = [[<span class="number">0.0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)]</span><br><span class="line">  e = [[<span class="number">0.0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)]</span><br><span class="line">  root = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)]</span><br><span class="line">  <span class="comment"># 由于l = j - i + 1，l = 0时，j = i - 1</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length):</span><br><span class="line">    e[i][i-<span class="number">1</span>] = q[i-<span class="number">1</span>]</span><br><span class="line">    w[i][i-<span class="number">1</span>] = q[i-<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length):</span><br><span class="line">    <span class="comment"># j最大为length-1，根据公式l=j-i+1，因此i最大为length-l</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length - l + <span class="number">1</span>):</span><br><span class="line">      <span class="comment"># 根据公式l=j-i+1,因此j=i+l-1</span></span><br><span class="line">      j = i + l - <span class="number">1</span></span><br><span class="line">      e[i][j] = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">      w[i][j] = w[i][j-<span class="number">1</span>] + p[j] + q[j]</span><br><span class="line">      <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(i, j+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> r + <span class="number">1</span> &gt; j:</span><br><span class="line">          min_e = e[i][r-<span class="number">1</span>] + q[j] + w[i][j]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          min_e = e[i][r-<span class="number">1</span>] + e[r+<span class="number">1</span>][j] + w[i][j]</span><br><span class="line">        <span class="keyword">if</span> min_e &lt; e[i][j]:</span><br><span class="line">          e[i][j] = min_e</span><br><span class="line">          root[i][j] = r</span><br><span class="line">  <span class="comment"># 最优解</span></span><br><span class="line">  optimal(root, <span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">  min_e = e[<span class="number">1</span>][length-<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">return</span> min_e</span><br></pre></td></tr></table></figure><h2 id="3-总结">3. 总结</h2><p>计算机没有人类的思维，但是他有人类无可比拟的计算能力，也就是说，任何基础问题计算机理论上都可以穷举出结果，然而<strong>很多时候穷举是愚蠢的，计算机会花大量时间甚至90%的时间去穷举错误/不合理/不存在的情况，导致穷举的代价（时间和空间）变得巨大</strong></p><p>因此<strong>算法实际上就是思考“如何聪明高效地穷举”，上述列出状态转移方程的本质就是找到一种合理的穷举方式</strong></p><p>总的来说，我认为，解决动态规划问题，就是要构建出一张DP TABLE</p><ul><li>DP TABLE的<strong>第0行和第0列代表着平凡情况，也就是可以直接判断，不需要递归分解的情况</strong></li><li>DP TABLE通常是<strong>从左到右（一维），从左上到右下（二维）填充数据的</strong></li><li>DP TABLE中任一元素的值通常<strong>取决于其左上部分元素的值</strong></li></ul><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://labuladong.online/algo/essential-technique/dynamic-programming-framework-2/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">动态规划解题套路框架</div>          <div class="tag-link-sitename">labuladong 的算法笔记</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h2 id="4-经典DP">4. 经典DP</h2><div class="note warning flat"><p>接下来的题目不会像之前那么详细地分析，只会给出<strong>题目描述，算法思路和具体代码</strong></p></div><h3 id="4-1-斐波那契数列">4.1 斐波那契数列</h3><p>构建一张一维DP表，<strong>dp[i]的值取决于前几个元素即dp[i-1], dp[i-2]等</strong></p><h4 id="4-1-1-爬楼梯">4.1.1 爬楼梯</h4><p>问题描述：给定一个整数n表示楼梯级数，一个人每次能上1、2或3级，问走到n级有多少种走法</p><p>算法描述：令dp[i]表示走i级一共有的走法，则dp[i]=dp[i-3]+dp[i-2]+dp[i-1]，且dp[1]=1，dp[2]=2，dp[3]=4</p><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">climb_stairs</span>(<span class="params">n</span>):</span><br><span class="line">  dp = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">  dp[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">  dp[<span class="number">2</span>] = <span class="number">2</span></span><br><span class="line">  dp[<span class="number">3</span>] = <span class="number">4</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>, n + <span class="number">1</span>):</span><br><span class="line">    dp[i] = dp[i-<span class="number">3</span>] + dp[i-<span class="number">2</span>] + dp[i-<span class="number">1</span>]</span><br><span class="line">  <span class="built_in">print</span>(dp[n])</span><br><span class="line"></span><br><span class="line">n = <span class="number">5</span></span><br><span class="line">climb_stairs(n)</span><br></pre></td></tr></table></figure><h4 id="4-1-2-解码数字串">4.1.2 解码数字串</h4><p>问题描述：给定一个只包含数字的表示已编码的非空字符串s（长度大于等于2），使用如下映射进行解码：“1” -&gt; ‘A’，“2” -&gt; ‘B’，…，“26” -&gt; ‘Z’，你需要计算并返回解码该字符串的所有可能方法的总数，并给出全部解码方案。（编码不包含前导0，即&quot;06&quot;不存在映射，但是&quot;10&quot;会映射到&quot;J&quot;）</p><p>算法思路：令dp[i]表示从第1个字符到第i个字符的解码方案数量，对于当前字符str[i]，分为三种情况：</p><ol><li>str[i+1]是0，因此必须和这个0结合：dp[i]=dp[i-1],dp[i+1]=dp[i-1]；</li><li>str[i-1]和str[i]组成的数字位于1~26：dp[i]=dp[i-1]+dp[i-2]；</li><li>str[i]只能独自编码：dp[i]=dp[i-1]。</li></ol><p>具体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">string,mapping</span>):</span><br><span class="line">  n = <span class="built_in">len</span>(string)</span><br><span class="line">  string = <span class="string">&#x27;#&#x27;</span> + string</span><br><span class="line">  <span class="comment"># dp用于存储方案数量，codes用于存储解码</span></span><br><span class="line">  dp = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">  dp[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">  codes = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">  codes[<span class="number">0</span>] = [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="comment"># 从1遍历到n</span></span><br><span class="line">  i = <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> i != (n + <span class="number">1</span>):</span><br><span class="line">    <span class="comment"># 代码设计会跳过全部后导0，如果还能遍历到0，说明存在两个连续的零或者第一个就是0，肯定无法解码！</span></span><br><span class="line">    <span class="keyword">if</span> string[i] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;can&#x27;t decode!&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="comment"># 当前字符是否必须和后面的0结合？</span></span><br><span class="line">    <span class="keyword">if</span> i != n <span class="keyword">and</span> string[i+<span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">      dp[i] = dp[i-<span class="number">1</span>]</span><br><span class="line">      dp[i+<span class="number">1</span>] = dp[i-<span class="number">1</span>]</span><br><span class="line">      <span class="keyword">for</span> code <span class="keyword">in</span> codes[i - <span class="number">1</span>]:</span><br><span class="line">        codes[i].append(code + mapping[string[i:i+<span class="number">2</span>]])  </span><br><span class="line">        codes[i+<span class="number">1</span>].append(code + mapping[string[i:i+<span class="number">2</span>]])</span><br><span class="line">      i += <span class="number">2</span></span><br><span class="line">    <span class="comment"># 当前字符是否可以和前一个字符结合解码？</span></span><br><span class="line">    <span class="keyword">elif</span> string[i-<span class="number">1</span>] != <span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> string[i-<span class="number">1</span>] != <span class="string">&#x27;#&#x27;</span> <span class="keyword">and</span> <span class="number">1</span> &lt;= <span class="built_in">int</span>(string[i-<span class="number">1</span>:i+<span class="number">1</span>]) &lt;= <span class="number">26</span>:</span><br><span class="line">      dp[i] = dp[i-<span class="number">1</span>] + dp[i-<span class="number">2</span>]</span><br><span class="line">      <span class="keyword">for</span> code <span class="keyword">in</span> codes[i - <span class="number">1</span>]:</span><br><span class="line">        codes[i].append(code + mapping[string[i]])</span><br><span class="line">      <span class="keyword">for</span> code <span class="keyword">in</span> codes[i - <span class="number">2</span>]:</span><br><span class="line">        codes[i].append(code + mapping[string[i-<span class="number">1</span>:i+<span class="number">1</span>]])    </span><br><span class="line">      i += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 当前字符只能单独解码</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      dp[i] = dp[i-<span class="number">1</span>]</span><br><span class="line">      <span class="keyword">for</span> code <span class="keyword">in</span> codes[i - <span class="number">1</span>]:</span><br><span class="line">        codes[i].append(code + mapping[string[i]])  </span><br><span class="line">      i += <span class="number">1</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;string[<span class="number">1</span>:n]&#125;</span> decode: <span class="subst">&#123;codes[n]&#125;</span>&quot;</span>)</span><br><span class="line">  <span class="keyword">return</span> dp[n]</span><br><span class="line"></span><br><span class="line">string = <span class="string">&#x27;01101016&#x27;</span></span><br><span class="line">mapping = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">27</span>):</span><br><span class="line">  mapping[<span class="built_in">str</span>(i)] = <span class="built_in">chr</span>(i + <span class="number">64</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;there are <span class="subst">&#123;decode(string,mapping)&#125;</span> ways to decode <span class="subst">&#123;string&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="4-2-回合制博弈">4.2 回合制博弈</h3><p>构建一张二维DP表，假定<strong>博弈双方都采取DP表的最优方案，当前回合的获胜情况取决于当前回合过后，对方回合的获胜情况</strong></p><h4 id="4-2-1-拿硬币">4.2.1 拿硬币</h4><p>问题描述：假设有n个硬币，两个玩家 A 和 B 轮流从中拿硬币。每个玩家在自己的回合中可以选择从 1 到 k 个硬币（k 是一个固定的数且k&lt;=n）进行拿取，拿完最后一个硬币的玩家获胜。如果A先拿，判断A是否必赢，如果必赢给出A必胜的方案</p><p>算法思路：令dp[i][j]表示己方还剩下i个硬币，最多可以拿j个硬币的情况下，赢1还是输0，如果至少存在一个k使得dp[i-k][j]=0，也就是存在一定击败对方的方法，那么己方就必赢，如果对全部k都有dp[i-k][j]=1，也就是无论怎么样对方都必赢，那么己方就必输</p><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">take_coin</span>(<span class="params">n,k</span>):</span><br><span class="line">  dp = [[-<span class="number">1</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(k+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">  take = [[-<span class="number">1</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(k+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, k+<span class="number">1</span>):</span><br><span class="line">      <span class="keyword">if</span> j &gt;= i:</span><br><span class="line">        dp[i][j] = <span class="number">1</span></span><br><span class="line">        take[i][j] = i</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">all</span>(dp[i-t][j] == <span class="number">1</span> <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, j+<span class="number">1</span>)):</span><br><span class="line">          dp[i][j] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, j+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> dp[i-t][j] == <span class="number">0</span>:</span><br><span class="line">              dp[i][j] = <span class="number">1</span></span><br><span class="line">              take[i][j] = t</span><br><span class="line">              <span class="keyword">break</span></span><br><span class="line">  <span class="comment"># 游戏开始</span></span><br><span class="line">  <span class="keyword">if</span> dp[n][k] == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;There are <span class="subst">&#123;n&#125;</span> coins and people can only take 1-<span class="subst">&#123;k&#125;</span> coins at a time!&quot;</span>)</span><br><span class="line">    rest = n</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">      <span class="comment"># A回合</span></span><br><span class="line">      a_take = take[rest][k]</span><br><span class="line">      rest -= a_take</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;A takes <span class="subst">&#123;a_take&#125;</span> and left <span class="subst">&#123;rest&#125;</span>&quot;</span>)</span><br><span class="line">      <span class="keyword">if</span> rest == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;A wins!&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="comment"># B回合</span></span><br><span class="line">      b_take = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;please enter amount that B takes: &quot;</span>))</span><br><span class="line">      rest -= b_take</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;B takes <span class="subst">&#123;b_take&#125;</span> and left <span class="subst">&#123;rest&#125;</span>&quot;</span>)</span><br><span class="line">      <span class="keyword">if</span> rest == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;B wins!&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;A must lose!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># A先拿2，然后B拿1则A拿3，B拿2则A拿2，B拿3则A拿1，即A拿一个能使剩余为4的数量，最后B拿1则A拿3，B拿2则A拿2，B拿3则A拿1，即A拿一个能使剩余为0的数量，所以A百分之百胜利</span></span><br><span class="line">take_coin(<span class="number">10</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><h4 id="4-2-2-拿石子">4.2.2 拿石子</h4><p>问题描述：有n堆石头放在一行（n为偶数），第i堆石头一共有array[i]个石头，每次只能拿最左边石堆或最右边的石堆，最后谁拿的石头总数最多谁获胜。如果A先拿，给出A能拿到最多石头的方案，并判断最后是否能获胜</p><p>算法思路：令dp[i][j]只剩下从第i堆到第j堆石头时可以获取的最多石头数量，令sum表示从第i堆到第j堆石头的石头总数，如果拿最左边大则dp[i][j] = sum - dp[i+1][j]，如果拿最右边大则dp[i][j] = sum - dp[i][j-1]</p><p>具体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">take_stone</span>(<span class="params">array</span>):</span><br><span class="line">  n = <span class="built_in">len</span>(array)</span><br><span class="line">  array = [<span class="number">0</span>] + array</span><br><span class="line">  dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">  stone = [[-<span class="number">1</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">  <span class="comment"># l = j - i + 1，j = i + l - 1，i = j - l + 1</span></span><br><span class="line">  <span class="comment"># l最大为n，j最大为n，i最大为n - l + 1</span></span><br><span class="line">  <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n - l + <span class="number">2</span>):</span><br><span class="line">      j = i + l - <span class="number">1</span></span><br><span class="line">      <span class="keyword">if</span> i == j:</span><br><span class="line">        dp[i][j] = array[i]</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        total = <span class="built_in">sum</span>(array[i:j+<span class="number">1</span>])</span><br><span class="line">        left = total - dp[i+<span class="number">1</span>][j]</span><br><span class="line">        right = total - dp[i][j-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> left &gt; right:</span><br><span class="line">          dp[i][j] = left</span><br><span class="line">          stone[i][j] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          dp[i][j] = right</span><br><span class="line">          stone[i][j] = <span class="number">1</span></span><br><span class="line">  <span class="comment"># 游戏开始</span></span><br><span class="line">  left = <span class="number">1</span></span><br><span class="line">  right = n</span><br><span class="line">  <span class="keyword">while</span> left &lt;= right:</span><br><span class="line">    <span class="comment"># A回合</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;there are <span class="subst">&#123;array[left:right+<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    direct_A = stone[left][right]</span><br><span class="line">    <span class="keyword">if</span> direct_A == <span class="number">1</span>:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;A takes <span class="subst">&#123;array[right]&#125;</span>&quot;</span>)</span><br><span class="line">      right -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;A takes <span class="subst">&#123;array[left]&#125;</span>&quot;</span>)</span><br><span class="line">      left += <span class="number">1</span></span><br><span class="line">    <span class="comment"># B回合</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;there are <span class="subst">&#123;array[left:right+<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    direct_B = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;enter your choice (0--left and 1--right): &quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> direct_B == <span class="number">1</span>:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;you take <span class="subst">&#123;array[right]&#125;</span>&quot;</span>)</span><br><span class="line">      right -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;you take <span class="subst">&#123;array[left]&#125;</span>&quot;</span>)</span><br><span class="line">      left += <span class="number">1</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;A got <span class="subst">&#123;dp[<span class="number">1</span>][n]&#125;</span> and you got <span class="subst">&#123;<span class="built_in">sum</span>(array) - dp[<span class="number">1</span>][n]&#125;</span>&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;A wins&quot;</span> <span class="keyword">if</span> dp[<span class="number">1</span>][n] &gt; (<span class="built_in">sum</span>(array) - dp[<span class="number">1</span>][n]) <span class="keyword">else</span> <span class="string">&quot;you win&quot;</span>)</span><br><span class="line"></span><br><span class="line">array = [<span class="number">28</span>, <span class="number">15</span>, <span class="number">1</span>, <span class="number">33</span>, <span class="number">24</span>, <span class="number">9</span>, <span class="number">17</span>, <span class="number">10</span>]</span><br><span class="line">take_stone(array)</span><br></pre></td></tr></table></figure><h3 id="4-3-背包问题">4.3 背包问题</h3><p>这类问题通常给定一个限制，然后每个元素都可以选择执行或不执行，构建一张二维DP表，其中<strong>行遍历元素个数，列遍历限制数</strong></p><h4 id="4-3-1-0-1背包">4.3.1 0/1背包</h4><p>问题描述：给定n个物品，每个物品都有体积volume和价值value，目标是找到能够装入固定容量为c的背包中的最大价值，其中每个物品只能选择放入背包或不放入</p><p>算法思路</p><ul><li>按顺序排好物体，dp[i][j]表示容量为i时将前j个物品放入背包的最大价值，其中i的取值为[1,c]，j的取值为[1,n]，那么结果就是dp[n][c]</li><li>先遍历容量，再遍历物品，假设此时已经遍历到dp[i][j]，对于第j个物体<ul><li>如果它的体积已经大于背包容量，那么肯定无法放下，则dp[i][j]=dp[i][j-1]</li><li>如果它的体积小于等于背包容量，那么可以选择放和不放，放的话就是剩下体积放前j-1个物品的最大价值加上第j个物品的价值，因此dp[i][j]=max(dp[i][j-1]，dp[i-volume(j)][j-1]+value(j))</li></ul></li></ul><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Knapsack</span>(<span class="params">volume, value, n, c</span>):</span><br><span class="line">  dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(c+<span class="number">1</span>)]</span><br><span class="line">  index = [[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(c+<span class="number">1</span>)]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, c+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">      <span class="keyword">if</span> volume[j] &gt; i:</span><br><span class="line">        dp[i][j] = dp[i][j-<span class="number">1</span>]</span><br><span class="line">        index[i][j] = index[i][j-<span class="number">1</span>]</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        not_put = dp[i][j-<span class="number">1</span>]</span><br><span class="line">        put = dp[i-volume[j]][j-<span class="number">1</span>] + value[j]</span><br><span class="line">        <span class="keyword">if</span> not_put &gt; put:</span><br><span class="line">          index[i][j] = index[i][j-<span class="number">1</span>]</span><br><span class="line">          dp[i][j] = not_put</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          index[i][j] = index[i-volume[j]][j-<span class="number">1</span>]</span><br><span class="line">          index[i][j].append(j)</span><br><span class="line">          dp[i][j] = put</span><br><span class="line">  <span class="built_in">print</span>(dp[c][n])     <span class="comment"># 14</span></span><br><span class="line">  <span class="built_in">print</span>(index[c][n])  <span class="comment"># [2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">5</span></span><br><span class="line">c = <span class="number">10</span></span><br><span class="line">volume = [<span class="number">0</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">value = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">Knapsack(volume, value, n, c)</span><br></pre></td></tr></table></figure><h4 id="4-3-2-最小划分数组">4.3.2 最小划分数组</h4><p>问题描述：给出一个正整数数组，把它分成S1、S2两部分，使S1的数字和与S2的数字和的差的绝对值最小</p><p>算法思路</p><ul><li>已知SUM=S1+S2是不变的，令|S1-S2|最小，即令|S1-(SUM-S1)|最小，即令|2S1-SUM|最小，即令|S1-SUM/2|最小，且S1和S2中肯定有一个小于等于SUM/2，不妨令S1小于等于SUM/2，即在S中找到一个子集S1，使得S1尽可能接近SUM/2，因此对于每个元素，他要么放进S1，要么不放进S1，可以看成类背包问题</li><li>令dp[i][j]表示前j个元素最接近i的和，则结果就是dp[sum/2][n]</li></ul><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">minimum_partition</span>(<span class="params">array,n</span>):</span><br><span class="line">  sumnum = <span class="built_in">sum</span>(array)</span><br><span class="line">  total = sumnum // <span class="number">2</span></span><br><span class="line">  s1 = [[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(total+<span class="number">1</span>)]</span><br><span class="line">  dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(total+<span class="number">1</span>)]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,total+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">      <span class="keyword">if</span> array[j] &gt; i:</span><br><span class="line">        dp[i][j] = dp[i][j-<span class="number">1</span>]</span><br><span class="line">        s1[i][j] = s1[i][j-<span class="number">1</span>][:]</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        not_put = dp[i][j-<span class="number">1</span>]</span><br><span class="line">        put =  dp[i-array[j]][j-<span class="number">1</span>] + array[j]</span><br><span class="line">        <span class="keyword">if</span> not_put &gt; put:</span><br><span class="line">          dp[i][j] = not_put</span><br><span class="line">          s1[i][j] = s1[i][j-<span class="number">1</span>][:]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          dp[i][j] = put</span><br><span class="line">          s1[i][j] = s1[i-array[j]][j-<span class="number">1</span>][:]</span><br><span class="line">          s1[i][j].append(array[j])</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">abs</span>(<span class="number">2</span> * dp[total][n] - sumnum))</span><br><span class="line">  <span class="built_in">print</span>(s1[total][n])</span><br><span class="line"></span><br><span class="line">array = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">5</span>]</span><br><span class="line">minimum_partition(array,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h4 id="4-3-3-子集和">4.3.3 子集和</h4><p>问题描述：给定一个非负整数的集合S，一个值M，问S中是否有一个子集，使得子集和等于M（注意集合里不存在相同的元素）</p><p>算法思路：令dp[i][j]表示前j个数是否可以刚好凑成i</p><ul><li>对于i=0，平凡凑成</li><li>如果array[j]&gt;i，则dp[i][j]=dp[i][j-1]</li><li>如果array[j]&lt;=i且dp[i-array[j]][j-1]==1，即用前j-1个数正好也可以凑成i-array[j]，则dp[i][j]=1，且往后可以不用计算了，即使可能存在不同方案</li><li>如果array[j]&lt;=i且dp[i-array[j]][j-1]==0，即用前j-1个数不能凑成i-array[j]，则dp[i][j]=0</li></ul><p>具体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">subsetsum</span>(<span class="params">array,key</span>):</span><br><span class="line">  n = <span class="built_in">len</span>(array)</span><br><span class="line">  array = [<span class="number">0</span>] + array</span><br><span class="line">  dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(key+<span class="number">1</span>)]</span><br><span class="line">  num = [[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(key+<span class="number">1</span>)]</span><br><span class="line">  <span class="comment"># 构成0是始终可行的</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>):</span><br><span class="line">    dp[<span class="number">0</span>][j] = <span class="number">1</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,key+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">      <span class="keyword">if</span> array[j] &gt; i:</span><br><span class="line">        dp[i][j] = dp[i][j-<span class="number">1</span>]</span><br><span class="line">      <span class="keyword">elif</span> dp[i-array[j]][j-<span class="number">1</span>] == <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 往后都不用判断了，都是百分之百可行的，虽然可能有别的方法</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(j,n+<span class="number">1</span>):</span><br><span class="line">          dp[i][k] = <span class="number">1</span></span><br><span class="line">          num[i][k] = num[i-array[j]][j-<span class="number">1</span>][:]</span><br><span class="line">          num[i][k].append(array[j])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">  <span class="keyword">if</span> dp[key][n] == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;there is a subset <span class="subst">&#123;num[key][n]&#125;</span> whose sum is <span class="subst">&#123;key&#125;</span>!&quot;</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;there is no subset whose sum is <span class="subst">&#123;key&#125;</span>!&quot;</span>)</span><br><span class="line"></span><br><span class="line">array = [<span class="number">6</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">7</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;set is <span class="subst">&#123;array&#125;</span>&quot;</span>)</span><br><span class="line">subsetsum(array,<span class="number">17</span>) <span class="comment"># [6, 2, 9]</span></span><br><span class="line">subsetsum(array,<span class="number">26</span>) <span class="comment"># [6, 9, 8, 3]</span></span><br><span class="line">subsetsum(array,<span class="number">31</span>) <span class="comment"># no</span></span><br><span class="line">subsetsum(array,<span class="number">33</span>) <span class="comment"># [6, 9, 8, 3, 7]</span></span><br></pre></td></tr></table></figure><h3 id="4-4-最优选择策略">4.4 最优选择策略</h3><p>这类问题通常每种情况下有几个选项可供选择，<strong>dp[i]的值往往与其相邻元素有关</strong></p><h4 id="4-4-1-最小路径和">4.4.1 最小路径和</h4><p>问题描述：给定一个包含非负整数的二维网格grid，每个格子中的数值表示从该位置到其相邻格子的移动成本，只允许向下或向右移动，找到从左上角到右下角的最小路径和</p><p>算法思路：令dp[i][j]表示从左上角到(i,j)的最小路径和，因为只允许向下或向右移动，也就是说dp[i][j] = max(dp[i-1][j] + cost[i-1][j], dp[i][j-1] + cost[i][j-1])，同时，最上面一行和最左边一列的dp是可以直接确定的</p><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">MinimumPath</span>(<span class="params">array,row,col</span>):</span><br><span class="line">  dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(col)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(row)]</span><br><span class="line">  direct = [[<span class="string">&#x27;&#x27;</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(col)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(row)]</span><br><span class="line">  direct[<span class="number">0</span>][<span class="number">0</span>] = <span class="string">&#x27;begin-&gt;&#x27;</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, col):</span><br><span class="line">    dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j-<span class="number">1</span>] + array[<span class="number">0</span>][j-<span class="number">1</span>]</span><br><span class="line">    direct[<span class="number">0</span>][j] = direct[<span class="number">0</span>][j-<span class="number">1</span>] + <span class="string">&#x27;right-&gt;&#x27;</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, row):</span><br><span class="line">    dp[i][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>] + array[i-<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">    direct[i][<span class="number">0</span>] = direct[i-<span class="number">1</span>][<span class="number">0</span>] + <span class="string">&#x27;down-&gt;&#x27;</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, row):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, col):</span><br><span class="line">      down = dp[i-<span class="number">1</span>][j] + array[i-<span class="number">1</span>][j]</span><br><span class="line">      right = dp[i][j-<span class="number">1</span>] + array[i][j-<span class="number">1</span>]</span><br><span class="line">      <span class="keyword">if</span> down &lt; right:</span><br><span class="line">        dp[i][j] = down</span><br><span class="line">        direct[i][j] = direct[i-<span class="number">1</span>][j] + <span class="string">&#x27;down-&gt;&#x27;</span></span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        dp[i][j] = right</span><br><span class="line">        direct[i][j] = direct[i][j-<span class="number">1</span>] + <span class="string">&#x27;right-&gt;&#x27;</span></span><br><span class="line">  direct[-<span class="number">1</span>][-<span class="number">1</span>] = direct[-<span class="number">1</span>][-<span class="number">1</span>] + <span class="string">&#x27;end&#x27;</span></span><br><span class="line">  <span class="comment"># begin-&gt;down-&gt;right-&gt;down-&gt;right-&gt;end</span></span><br><span class="line">  <span class="built_in">print</span>(direct[-<span class="number">1</span>][-<span class="number">1</span>])</span><br><span class="line">  <span class="comment"># 14</span></span><br><span class="line">  <span class="built_in">print</span>(dp[-<span class="number">1</span>][-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">array = [</span><br><span class="line">  [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>],</span><br><span class="line">  [<span class="number">7</span>, <span class="number">6</span>, <span class="number">0</span>]</span><br><span class="line">]</span><br><span class="line">MinimumPath(array,<span class="number">3</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h4 id="4-4-2-股票买卖">4.4.2 股票买卖</h4><p>问题描述：给定一个数组price，其中price[i]表示第i天的股票价格，可以进行多次交易，但是每次交易必须先买入然后卖出，通过选择合适的买入和卖出时机，计算在第n天可以获得的最大利润，注意不可以在同一天进行买入和卖出，同时认为每次买入和卖出的量都是1</p><p>算法思路：dp[i]表示第i天获得的最大收益，假设已经遍历到第i天，那么可以两种选择，选择其中的较大值</p><ul><li>不进行任何操作，那么dp[i]=dp[i-1]</li><li>卖股票，那么就要在之前选择一天j买股票，那么dp[i]=dp[j-1]+price[i]-price[j]</li></ul><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">stock_jobbing</span>(<span class="params">price,n</span>):</span><br><span class="line">  dp = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">  deal = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    not_sold = dp[i-<span class="number">1</span>]</span><br><span class="line">    sold = -<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">    buy_day = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,i):</span><br><span class="line">      temp = dp[j-<span class="number">1</span>] + price[i] - price[j]</span><br><span class="line">      <span class="keyword">if</span> temp &gt; sold:</span><br><span class="line">        sold = temp</span><br><span class="line">        buy_day = j</span><br><span class="line">    <span class="keyword">if</span> sold &gt; not_sold:</span><br><span class="line">      dp[i] = sold</span><br><span class="line">      deal[i] = deal[buy_day-<span class="number">1</span>]</span><br><span class="line">      deal[i].append((buy_day,i))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      dp[i] = not_sold</span><br><span class="line">      deal[i] = deal[i-<span class="number">1</span>]</span><br><span class="line">  <span class="built_in">print</span>(dp[n])    <span class="comment"># 7</span></span><br><span class="line">  <span class="built_in">print</span>(deal[n])  <span class="comment"># [(1, 2), (3, 4)]</span></span><br><span class="line"></span><br><span class="line">price = [<span class="number">0</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">4</span>]</span><br><span class="line">n = <span class="number">6</span></span><br><span class="line">stock_jobbing(price, n)</span><br></pre></td></tr></table></figure><h4 id="4-4-3-编辑距离">4.4.3 编辑距离</h4><p>问题描述：给定两个字符串 word1 和 word2，计算将 word1 转换为 word2 所需的最小编辑操作次数，允许的操作有插入一个字符、删除一个字符或替换一个字符。示例：intention-&gt;替换i为e-&gt;entention-&gt;删除t-&gt;enention-&gt;替换n为c-&gt;enection-&gt;替换n为x-&gt;exection-&gt;插入u-&gt;execution，一共5次（其中一种）</p><p>算法思路：</p><ul><li>令dp[i][j]表示将word1（长度为n）的前i个字符变为word2（长度为m）的前j个字符所需要的最小编辑次数，则最终结果就是dp[n][m]</li><li>假设遍历到dp[i][j]，我们保证知道dp[0~i][0~j]的值，也就是说我们可以认为我们知道：<ul><li>如何最简单地将word1[1:i]转换为word2[1:j-1]，那么只需要在word1的最后添加一个word2[j]就行了：dp[i][j] = dp[i][j-1] + 1</li><li>如何最简单地将word1[1:i-1]转换为word2[1:j]，那么只需要在word1的最后删除一个word2[j]就行了：dp[i][j] = dp[i-1][j] + 1</li><li>如何最简单地将word1[1:i-1]转换为word2[1:j-1]，那么只需要在word1的最后把word[i]变为word[j]就行了：dp[i][j] = dp[i-1][j-1] + 1</li></ul></li><li>考虑平凡情况<ul><li>dp[i][0] = i：删除word1的全部前i个字符</li><li>dp[0][j] = j：插入word2的全部前j个字符</li><li>dp[i][j] = dp[i-1][j-1]：字符一样，不需要更改，word[i] = word[j]</li></ul></li></ul><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">edit_distance</span>(<span class="params">word1, word2</span>):</span><br><span class="line">  n = <span class="built_in">len</span>(word1)</span><br><span class="line">  m = <span class="built_in">len</span>(word2)</span><br><span class="line">  word1 = <span class="string">&#x27;0&#x27;</span> + word1</span><br><span class="line">  word2 = <span class="string">&#x27;0&#x27;</span> + word2</span><br><span class="line">  dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(m + <span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line">  operations = [[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(m + <span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n + <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    dp[i][<span class="number">0</span>] = i  <span class="comment"># 删除操作</span></span><br><span class="line">    operations[i][<span class="number">0</span>].append(<span class="string">&quot;Delete &quot;</span> + word1[i])</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, m + <span class="number">1</span>):</span><br><span class="line">    dp[<span class="number">0</span>][j] = j  <span class="comment"># 插入操作</span></span><br><span class="line">    operations[<span class="number">0</span>][j].append(<span class="string">&quot;Insert &quot;</span> + word2[j])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, m + <span class="number">1</span>):</span><br><span class="line">      <span class="keyword">if</span> word1[i] == word2[j]:</span><br><span class="line">        dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>]</span><br><span class="line">        operations[i][j] = operations[i - <span class="number">1</span>][j - <span class="number">1</span>]  <span class="comment"># 无操作</span></span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        insert = dp[i][j - <span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">        delete = dp[i - <span class="number">1</span>][j] + <span class="number">1</span></span><br><span class="line">        replace = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 找到最小操作并记录</span></span><br><span class="line">        <span class="keyword">if</span> insert &lt;= delete <span class="keyword">and</span> insert &lt;= replace:</span><br><span class="line">          dp[i][j] = insert</span><br><span class="line">          operations[i][j] = operations[i][j - <span class="number">1</span>][:]</span><br><span class="line">          operations[i][j].append(<span class="string">&quot;Insert &quot;</span> + word2[j])</span><br><span class="line">        <span class="keyword">elif</span> delete &lt;= insert <span class="keyword">and</span> delete &lt;= replace:</span><br><span class="line">          dp[i][j] = delete</span><br><span class="line">          operations[i][j] = operations[i - <span class="number">1</span>][j][:]</span><br><span class="line">          operations[i][j].append(<span class="string">&quot;Delete &quot;</span> + word1[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          dp[i][j] = replace</span><br><span class="line">          operations[i][j] = operations[i - <span class="number">1</span>][j - <span class="number">1</span>][:]</span><br><span class="line">          operations[i][j].append(<span class="string">&quot;Replace &quot;</span> + word1[i] + <span class="string">&quot; with &quot;</span> + word2[j])</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;edit distance:&quot;</span>, dp[n][m])</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;from <span class="subst">&#123;word1[<span class="number">1</span>:]&#125;</span> to <span class="subst">&#123;word2[<span class="number">1</span>:]&#125;</span> opearations:&quot;</span>)</span><br><span class="line">  <span class="keyword">for</span> op <span class="keyword">in</span> operations[n][m]:</span><br><span class="line">    <span class="built_in">print</span>(op)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例使用</span></span><br><span class="line">word1 = <span class="string">&quot;intention&quot;</span></span><br><span class="line">word2 = <span class="string">&quot;execution&quot;</span></span><br><span class="line">edit_distance(word1, word2)</span><br></pre></td></tr></table></figure><h3 id="4-5-子序列">4.5 子序列</h3><p>这类问题的做法比较统一，就是<strong>先从小到大遍历长度l，然后dp[i][j]表示不同的起点i和终点j，根据长度l填充表</strong></p><h4 id="4-5-1-最长回文子序列（Longest-Palindrome-Subsequence-LPS）">4.5.1 最长回文子序列（Longest Palindrome Subsequence,LPS）</h4><p>问题描述：回文子序列是指正着读和反着读都相同的子序列，给定一个字符串，求该字符串的最长回文子序列的长度</p><p>算法思路：令dp[i][j]表示从i到j子串的最长回文子序列，对于长度为l且从i到j的子串，如果i和j相同，则dp[i][j] = dp[i+1][j-1] + 2，否则dp[i][j] = max(dp[i+1][j],dp[i][j-1])</p><p>具体代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">LPS</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">  n = <span class="built_in">len</span>(<span class="built_in">str</span>)</span><br><span class="line">  <span class="built_in">str</span> = <span class="string">&#x27;0&#x27;</span> + <span class="built_in">str</span></span><br><span class="line">  char = [[<span class="built_in">str</span>[k] <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">  dp = [[<span class="number">1</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">  <span class="comment"># l = j - i + 1，因此j = i + l - 1，i最大为n - l + 1</span></span><br><span class="line">  <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n - l + <span class="number">2</span>):</span><br><span class="line">      j = i + l - <span class="number">1</span></span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">str</span>[i] == <span class="built_in">str</span>[j]:</span><br><span class="line">        dp[i][j] = dp[i+<span class="number">1</span>][j-<span class="number">1</span>] + <span class="number">2</span></span><br><span class="line">        char[i][j] = <span class="built_in">str</span>[i] + char[i+<span class="number">1</span>][j-<span class="number">1</span>] + <span class="built_in">str</span>[j]</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> dp[i+<span class="number">1</span>][j] &gt; dp[i][j-<span class="number">1</span>]:</span><br><span class="line">          dp[i][j] = dp[i+<span class="number">1</span>][j]</span><br><span class="line">          char[i][j] = char[i+<span class="number">1</span>][j]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          dp[i][j] = dp[i][j-<span class="number">1</span>]</span><br><span class="line">          char[i][j] = char[i][j-<span class="number">1</span>]</span><br><span class="line">  <span class="built_in">print</span>(char[<span class="number">1</span>][n])</span><br><span class="line">  <span class="built_in">print</span>(dp[<span class="number">1</span>][n])</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;zabxcdyefxghaz&#x27;</span></span><br><span class="line">LPS(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><h4 id="4-5-2-最长上升子序列（Longest-Increasing-Subsequence，LIS）">4.5.2 最长上升子序列（Longest Increasing Subsequence，LIS）</h4><p>问题描述：给定一个长度为n的数组，找出一个最长的单调递增子序列</p><p>算法思路：令dp[i][j]表示从i到j的子串的最长单调递增子序列，有两种情况，选择两者中的最大值</p><ul><li>array[j]作为最后的数字，找到所有小于array[j]的索引k，则dp[i][j] = max(dp[i][k] + 1)对于i&lt;=k&lt;j</li><li>array[j]不作为最后的数字，则dp[i][j]=dp[i][j-1]</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">LIS</span>(<span class="params">array</span>):</span><br><span class="line">  n = <span class="built_in">len</span>(array)</span><br><span class="line">  array = [-<span class="number">1</span>] + array</span><br><span class="line">  dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">  sequence = [[[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">  <span class="comment"># l = j - i + 1, i = j - l + 1, j = i + l - 1</span></span><br><span class="line">  <span class="comment"># j最大为n，所以i最大为n - l + 1</span></span><br><span class="line">  <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n - l + <span class="number">2</span>):</span><br><span class="line">      j = i + l - <span class="number">1</span></span><br><span class="line">      <span class="keyword">if</span> i == j:</span><br><span class="line">        dp[i][j] = <span class="number">1</span></span><br><span class="line">        sequence[i][j].append(array[i])</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        islast = -<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">        index = -<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(i,j):</span><br><span class="line">          <span class="keyword">if</span> array[k] &lt; array[j] <span class="keyword">and</span> islast &lt; (dp[i][k] + <span class="number">1</span>):</span><br><span class="line">            islast = dp[i][k] + <span class="number">1</span></span><br><span class="line">            index = k</span><br><span class="line">        notlast = dp[i][j-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> islast &gt; notlast:</span><br><span class="line">          dp[i][j] = islast</span><br><span class="line">          sequence[i][j] = sequence[i][k][:]</span><br><span class="line">          sequence[i][j].append(array[j])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">          dp[i][j] = notlast</span><br><span class="line">          sequence[i][j] = sequence[i][j-<span class="number">1</span>][:]</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;LIS is <span class="subst">&#123;sequence[i][j]&#125;</span> whose length is <span class="subst">&#123;dp[<span class="number">1</span>][n]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">array = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(array)</span><br><span class="line">LIS(array)</span><br><span class="line">array = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">10</span>]</span><br><span class="line"><span class="built_in">print</span>(array)</span><br><span class="line">LIS(array)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序</title>
      <link href="/posts/57fa915c/"/>
      <url>/posts/57fa915c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-基础排序">1. 基础排序</h2><div class="note success flat"><p>循环不变式满足三条性质</p><ol><li><strong>初始：第一次迭代之前，循环不变式为真</strong></li><li><strong>保持：如果当次迭代前循环不变式为真，那么下次迭代前循环不变式依旧为真</strong></li><li><strong>终止：当循环终止时，循环不变式提供了一个有用的性质</strong><br>循环不变式的意义：<strong>终止情况一定是结果情况，尝试找到一个初始情况和循环操作，使得每次迭代，保持某一段为真，并逐渐扩展该段，直到该段是整段</strong></li></ol></div><h3 id="1-1-插入排序">1.1 插入排序</h3><p>原理：<strong>将每个元素都放到“比左边元素大，比右边元素小”的位置上</strong></p><p>循环不变式：数组的前i个元素（数组下标从0到i-1）都是排序好的</p><ol><li>初始：从i=1开始，此时之前只有一个元素即A[0]，肯定是排序好的</li><li>保持：由于从0到i-1都是排序好的，所以肯定存在一个下标j使得<code>A[j]&lt;=A[i]&lt;=A[j+1]</code>，将A[j+1]、A[j+2]、…、A[i-1]向右平移，然后将A[i]的值插入到A[j+1]，即可使得从0到i都是排序好的</li><li>终止：i等于数组长度</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">INSERT_SORT</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(array)):</span><br><span class="line">    j = i - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &gt;= <span class="number">0</span> <span class="keyword">and</span> array[j] &gt; array[i]:</span><br><span class="line">      array[i],array[j] = array[j],array[i]</span><br><span class="line">      i = j</span><br><span class="line">      j = i - <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="1-2-选择排序">1.2 选择排序</h3><p>原理：<strong>选择每一段数组的最大元素放到数组末尾</strong></p><p>循环不变式：数组i之后的元素都是排序好的，n是数组长度</p><ol><li>初始：从i=n-1开始，此时i后的元素为空，是平凡排序好的</li><li>保持：由于数组i之后元素是排序好的，即它们肯定比从0到i的任何元素都大，所以只需要找到这部分的最大值，将其与A[i]互换，即可使的i-1后的元素都是排序好的</li><li>终止：i=0，此时只剩一个最小的元素正好在第一位，循环终止</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SELECT_SORT</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(array)-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">    max_index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>):</span><br><span class="line">      <span class="keyword">if</span> array[j] &gt; array[max_index]:</span><br><span class="line">        max_index = j</span><br><span class="line">    array[i],array[max_index] = array[max_index],array[i]</span><br></pre></td></tr></table></figure><h3 id="1-3-冒泡排序">1.3 冒泡排序</h3><p>原理：<strong>每次都将相邻元素的较大值放到后面</strong></p><p>循环不变式：<strong>和插入排序是一样的</strong>，但是冒泡排序在遍历每一段数组的过程中，<strong>都将较大元素尽可能往后放，而不是只是找到最大元素的索引</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">BUBBLE_SORT</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(array)-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i):</span><br><span class="line">      <span class="keyword">if</span> array[j] &gt; array[j+<span class="number">1</span>]:</span><br><span class="line">        array[j],array[j+<span class="number">1</span>] = array[j+<span class="number">1</span>],array[j]</span><br></pre></td></tr></table></figure><h2 id="2-分治排序">2. 分治排序</h2><div class="note success flat"><p>分治策略本质上就是分和治，分就是<strong>将一个大问题分成多个小问题去解</strong>，治就是<strong>利用多个小问题的解来得出一个大问题的解</strong>，分治策略大体上有以下三个步骤：</p><ol><li><strong>分解（Divide）：将问题划分为一些子问题，子问题的形式与原问题完全一样，只是规模更小</strong></li><li><strong>解决（Conquer）：当问题规模足够小时，停止递归，求解出当前子问题</strong></li><li><strong>合并（combine/merge）：将子问题的解组合成原问题的解</strong></li></ol></div><h3 id="2-1-快速排序">2.1 快速排序</h3><p>原理：<strong>将数组根据主元不断分为两部分，其中主元的位置就是最终排序的位置，且主元左边都是比主元小的元素，主元右边都是比主元大的元素，对两边的子数组递归调用排序</strong></p><p>循环不变式：总是取结尾为主元索引pivot，设置两个索引low和high，需要满足<strong>索引比low小的都是小于主元的，索引比high大的都是大于等于主元的</strong></p><ul><li>初始：low=0，high=n-2，此时low之前没有元素可认为比主元小，high之后只有主元</li><li>保持：如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">]</mo><mo>&gt;</mo><mo>=</mo><mi>A</mi><mo stretchy="false">[</mo><mi>p</mi><mi>i</mi><mi>v</mi><mi>o</mi><mi>t</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A[low]&gt;=A[pivot]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mclose">]</span></span></span></span>，则将low和high的元素互换并将high-1，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">]</mo><mo>&lt;</mo><mi>A</mi><mo stretchy="false">[</mo><mi>p</mi><mi>i</mi><mi>v</mi><mi>o</mi><mi>t</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A[low]&lt;A[pivot]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mclose">]</span></span></span></span>，则先将low+1</li><li>终止：当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mo>=</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">low=high</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span></span></span></span>时，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A[low]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>p</mi><mi>i</mi><mi>v</mi><mi>o</mi><mi>t</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A[pivot]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mclose">]</span></span></span></span>互换，即可实现放置主元于正确位置，且主元左边都比主元小，主元右边都比主元大</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">QUICK_SORT</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(array) &lt;= <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  <span class="comment"># 确定主元</span></span><br><span class="line">  pivot = <span class="built_in">len</span>(array) - <span class="number">1</span></span><br><span class="line">  low = <span class="number">0</span></span><br><span class="line">  high = pivot - <span class="number">1</span></span><br><span class="line">  <span class="comment"># 分区过程</span></span><br><span class="line">  <span class="keyword">while</span> low != high:</span><br><span class="line">    <span class="keyword">if</span> array[low] &lt; array[pivot]:</span><br><span class="line">      low += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> array[low] &gt;= array[pivot]:</span><br><span class="line">      array[low],array[high] = array[high],array[low]</span><br><span class="line">      high -= <span class="number">1</span></span><br><span class="line">  <span class="comment"># 将主元放到正确的位置</span></span><br><span class="line">  array[low],array[pivot] = array[pivot],array[low]</span><br><span class="line">  <span class="comment"># 递归排序左侧和右侧</span></span><br><span class="line">  left = array[:low]</span><br><span class="line">  QUICK_SORT(left)</span><br><span class="line">  right = array[low+<span class="number">1</span>:]</span><br><span class="line">  QUICK_SORT(right)</span><br><span class="line">  <span class="comment"># 合并结果</span></span><br><span class="line">  array[:] = left + [array[low]] + right</span><br></pre></td></tr></table></figure><h3 id="2-2-归并排序">2.2 归并排序</h3><p>原理：<strong>递归地从中间分解数组，然后再合并排序好的结果</strong></p><p>分治策略：</p><ol><li>分解：可以从中间将当前数组分为两个子数组递归</li><li>解决：如果当前数组长度为1，无法继续分，也可以认为已经排好序，停止递归，返回该数组</li><li>合并：对两个已经排好序的数组，设立两个指针进行遍历，可以很轻松地合并为一个排好序的数组</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">left,right</span>):</span><br><span class="line">  index1,index2 = <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">  len1,len2 = <span class="built_in">len</span>(left),<span class="built_in">len</span>(right)</span><br><span class="line">  array = []</span><br><span class="line">  <span class="keyword">while</span> <span class="built_in">len</span>(array) != (len1 + len2):</span><br><span class="line">    <span class="keyword">if</span> index2 == len2 <span class="keyword">or</span> (index1 != len1 <span class="keyword">and</span> left[index1] &lt;= right[index2]):</span><br><span class="line">      array.append(left[index1])</span><br><span class="line">      index1 += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> index1 == len1 <span class="keyword">or</span> (index2 != len2 <span class="keyword">and</span> right[index2] &lt; left[index1]):</span><br><span class="line">      array.append(right[index2])</span><br><span class="line">      index2 += <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> array</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(array) == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> array</span><br><span class="line">  mid = <span class="built_in">len</span>(array) // <span class="number">2</span></span><br><span class="line">  left = divide(array[:mid])</span><br><span class="line">  right = divide(array[mid:])</span><br><span class="line">  array = merge(left,right)</span><br><span class="line">  <span class="keyword">return</span> array</span><br></pre></td></tr></table></figure><h2 id="3-堆排序">3. 堆排序</h2><p>原理：<strong>将数组构造成最大堆，不断去除并获取堆顶元素放到数组末尾</strong></p><p>实现：详细请看另一篇关于堆的文章</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SORT_MAX_HEAP</span>(<span class="params">heap</span>):</span><br><span class="line">  BUILD_MAX_HEAP(heap)</span><br><span class="line">  sort_heap = [<span class="number">0</span>] * <span class="built_in">len</span>(heap)</span><br><span class="line">  last = <span class="built_in">len</span>(heap) - <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> last &gt;= <span class="number">0</span>:</span><br><span class="line">    maxnum = EXTRACT_MAX_HEAP(heap)</span><br><span class="line">    sort_heap[last] = maxnum</span><br><span class="line">    last -= <span class="number">1</span></span><br><span class="line">  heap[:] = sort_heap</span><br></pre></td></tr></table></figure><h2 id="4-线性排序">4. 线性排序</h2><div class="note success flat"><p>之前所讨论的排序都是依赖于元素之间的比较，时间复杂度都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlg(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span>（堆排序、归并排序、快速排序）或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>（插入、选择、冒泡），而线性时间排序的方法是<strong>根据数组中元素的特定属性</strong>，并且<strong>不是原址操作，会牺牲一定空间</strong></p></div><h3 id="4-1-计数排序">4.1 计数排序</h3><p>原理：<strong>对每个元素i，计算小于等于i的元素个数j，则元素i最终的索引就在j-1</strong></p><p>实现：数组满足最小元素是0，最大元素maxnum，且元素都是整数</p><ol><li>创建一个长为maxnum+1的数组count，对于count的索引i，count[i]就是i出现在array的次数</li><li>对于count的索引i，在数组array中小于等于i的元素个数就是count[0] + coun[1] + … + count[i]</li><li>创建一个临时数组temp，遍历array的元素，根据count将元素放到temp正确的排序位置，然后更新count</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">COUNT_SORT</span>(<span class="params">array,maxnum</span>):</span><br><span class="line">  length = maxnum + <span class="number">1</span></span><br><span class="line">  count = [<span class="number">0</span>] * (length)</span><br><span class="line">  temp = [<span class="number">0</span>] * <span class="built_in">len</span>(array)</span><br><span class="line">  <span class="keyword">for</span> num <span class="keyword">in</span> array:</span><br><span class="line">    count[num] += <span class="number">1</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,length):</span><br><span class="line">    count[i] += count[i-<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(array)):</span><br><span class="line">    num = array[i]</span><br><span class="line">    index = count[num] - <span class="number">1</span></span><br><span class="line">    temp[index] = num</span><br><span class="line">    count[num] -= <span class="number">1</span></span><br><span class="line">  array[:] = temp</span><br></pre></td></tr></table></figure><h3 id="4-2-基数排序">4.2 基数排序</h3><p>原理：从低到高按位排序，假设遍历到第i位，相同数值内的顺序是按照第i-1位的排序情况</p><p>实现：给定数组中具有最多位元素的位数maxbit，且元素都是整数</p><ol><li>每一位都采用计数排序，当前位的数值等于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>y</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>e</mi><mi>x</mi><mi>p</mi><mi mathvariant="normal">%</mi><mn>10</mn></mrow><annotation encoding="application/x-tex">array // exp \% 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">rr</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">//</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mord">%10</span></span></span></span></li><li>由于上一位已经排序好，所以当前位要从后往前遍历数组，才能保证上一位的排序情况</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">RADIX_SORT</span>(<span class="params">array,maxbit</span>):</span><br><span class="line">  exp = <span class="number">1</span></span><br><span class="line">  <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(maxbit):</span><br><span class="line">    temp = [<span class="number">0</span>] * <span class="built_in">len</span>(array)</span><br><span class="line">    count = [<span class="number">0</span>] * <span class="number">10</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> array:</span><br><span class="line">      num = num // exp % <span class="number">10</span></span><br><span class="line">      count[num] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">      count[i] += count[i-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(array)-<span class="number">1</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">      num = array[i] // exp % <span class="number">10</span></span><br><span class="line">      index = count[num] - <span class="number">1</span></span><br><span class="line">      temp[index] = array[i]</span><br><span class="line">      count[num] -= <span class="number">1</span></span><br><span class="line">    array[:] = temp</span><br><span class="line">    exp *= <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="4-3-桶排序">4.3 桶排序</h3><p>原理：<strong>将数组分为多个连续的区间，区间里面排好序之后再合并</strong></p><p>实现：给定数组中最大的元素maxnum</p><ol><li>首先计算足够多的桶的数量并创建桶</li><li>遍历数组的元素，用元素大小除以桶的数量可以得到位于哪个桶</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">BUCKET_SORT</span>(<span class="params">array,maxnum</span>):</span><br><span class="line">  size = maxnum // <span class="built_in">len</span>(array) + <span class="number">1</span></span><br><span class="line">  buckets = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(size)]</span><br><span class="line">  <span class="keyword">for</span> num <span class="keyword">in</span> array:</span><br><span class="line">    index = num // size</span><br><span class="line">    buckets[index].append(num)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(buckets)):</span><br><span class="line">    buckets[i].sort()</span><br><span class="line">  temp = []</span><br><span class="line">  <span class="keyword">for</span> bucket <span class="keyword">in</span> buckets:</span><br><span class="line">    temp += bucket</span><br><span class="line">  array[:] = temp</span><br></pre></td></tr></table></figure><h2 id="5-区别分析">5. 区别分析</h2><p>性质</p><ul><li><strong>时间复杂度</strong>：平均（随机情况）、最好（已经排好序）、最坏（完全逆序或其他特殊情况）</li><li><strong>稳定性</strong>：在排序过程中，相等的元素相对位置是否保持不变</li><li><strong>数据情况</strong>：数量情况，原始排序情况，数值情况</li></ul><table><thead><tr><th>排序</th><th>平均时间</th><th>最坏时间</th><th>最好时间</th><th>稳定性</th><th>数据情况</th></tr></thead><tbody><tr><td>插入</td><td>O(n²)</td><td>O(n²)</td><td>O(n)</td><td>稳定</td><td>数据量小，基本有序</td></tr><tr><td>选择</td><td>O(n²)</td><td>O(n²)</td><td>O(n²)</td><td>不稳定</td><td>数据量小，需要最值</td></tr><tr><td>冒泡</td><td>O(n²)</td><td>O(n²)</td><td>O(n)</td><td>稳定</td><td>数据量小，基本有序</td></tr><tr><td>快速</td><td>O(n log n)</td><td>O(n²)</td><td>O(n log n)</td><td>不稳定</td><td>数据量大，乱序</td></tr><tr><td>归并</td><td>O(n log n)</td><td>O(n log n)</td><td>O(n log n)</td><td>稳定</td><td>数据量大，外部排序</td></tr><tr><td>堆</td><td>O(n log n)</td><td>O(n log n)</td><td>O(n log n)</td><td>不稳定</td><td>数据量大且需要最值</td></tr><tr><td>计数</td><td>O(n + k)</td><td>O(n + k)</td><td>O(n + k)</td><td>稳定</td><td>数据范围有限且是整数时，大量重复元素</td></tr><tr><td>基数</td><td>O(nk)</td><td>O(nk)</td><td>O(nk)</td><td>稳定</td><td>数据范围有限且数据较大时</td></tr><tr><td>桶</td><td>O(n + k)</td><td>O(n²)</td><td>O(n + k)</td><td>稳定</td><td>数据均匀分布</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数依赖</title>
      <link href="/posts/362a0640/"/>
      <url>/posts/362a0640/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-良构关系模式">1. 良构关系模式</h2><p>考虑教师-系别关系模式：<code>in_dept(teacher_id, salary, dept_name, budget)</code></p><ul><li>实际应用中，只要知道了teacher_id就可以知道salary，而不关注其他属性的值</li><li>实际应用中，只要知道了dept_name就可以知道budget，而不关注其他属性的值</li><li>实际应用中，可以添加一个暂时没有系的老师，或者一个暂时没有老师的系</li></ul><p>分解：将关系模式分解为多个子关系模式</p><ul><li><strong>有损分解（lossy）</strong>：通过子关系的自然连接无法完全恢复原始关系模式</li><li><strong>无损分解（lossless）</strong>：通过子关系的自然连接能够完全恢复原始关系模式</li></ul><p>冗余（redundancy）：冗余不等价于重复数据，而是<strong>在数据量变多的同时，信息量没有变多</strong></p><p>范式（Normal Form,NF）：规范的关系模式，是设计关系模式的追求目标，<strong>范式越高阶，冗余度就越低，设计越好，并且高阶范式一定满足低阶范式</strong></p><p><strong>规范化（normalization）</strong>：通过无损分解关系模式来满足一定范式，从而减少数据冗余、提高数据一致性，并确保数据库结构的合理性</p><h2 id="2-函数依赖">2. 函数依赖</h2><p>定义：给定一个关系模式R，其中X和Y是R的属性子集，对于R的任意两个元组t1,t2，如果t1和t2在属性集X的值相同，那么t1和t2在属性集Y的值也相同，则称<strong>Y函数依赖于X</strong>，记作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></p><ul><li><strong>完全依赖：X没有任何真子集Z也满足Z-&gt;Y</strong></li><li><strong>部分依赖：X存在一个真子集Z也满足Z-&gt;Y</strong></li><li><strong>直接依赖：不存在Z使得X-&gt;Z-&gt;Y</strong></li><li><strong>传递依赖：存在Z使得X-&gt;Z-&gt;Y</strong></li><li><strong>多值依赖：X-&gt;Y且X-&gt;Z，但是Y与Z之间不存在依赖关系</strong></li></ul><h2 id="3-范式">3. 范式</h2><div class="note info flat"><p>概念回顾：</p><ul><li>超码：唯一标识元组的属性集</li><li>候选码：唯一标识元组的最小属性集</li><li>主码：由用户选择的一个候选码</li><li>外码：引用另一个关系的主码</li><li>主属性：出现在任一候选码的属性</li><li>非主属性：没有出现在任一候选码的属性</li></ul></div><h3 id="3-1-第一范式（1NF）">3.1 第一范式（1NF）</h3><p>定义：关系模式中的<strong>每个属性都是原子值，不可再分</strong></p><p>意义：确保每个属性都是最小的数据单元</p><h3 id="3-2-第二范式（2NF）">3.2 第二范式（2NF）</h3><p>定义：<strong>所有非主属性必须完全函数依赖于主码</strong></p><p>意义：消除部分依赖</p><div class="note success flat"><p>假设存在关系</p><table><thead><tr><th>学生</th><th>课程</th><th>教材</th><th>老师</th><th>教室</th></tr></thead><tbody><tr><td>达斯</td><td>数据库</td><td>数据库系统概念</td><td>小迪</td><td>101</td></tr></tbody></table><p>候选码是<code>(学生,课程)</code>，但是存在部分依赖<code>课程-&gt;教材</code>，因此该关系模式不满足第二范式，存在以下问题：</p><ul><li>插入：如果某门课程新增一本教材，需要为每个选修该课程的学生插入一条记录，导致空间开销大</li><li>删除：如果某门课程结课，删除所有选修该课程的记录时，课程和教材的映射信息也会丢失</li><li>更新：如果某门课程的教材名称需要修改，必须更新所有选修该课程的记录，导致时间开销大且容易出错</li></ul></div><h3 id="3-3-第三范式（3NF）">3.3 第三范式（3NF）</h3><p>定义：<strong>所有非主属性必须直接函数依赖于主码</strong></p><p>意义：消除传递依赖</p><div class="note success flat"><p>假设存在关系</p><table><thead><tr><th>学生</th><th>课程</th><th>老师</th><th>职位</th></tr></thead><tbody><tr><td>达斯</td><td>数据库</td><td>小帅</td><td>系主任</td></tr></tbody></table><p>候选码是<code>(学生，课程)</code>，但是存在传递依赖<code>(学生，课程)-&gt;老师-&gt;职位</code>，因此该关系模式不满足第三范式，存在以下问题：</p><ul><li>插入：如果新老师尚未教授任何课程，则无法插入该老师的职位信息</li><li>删除：如果某个老师只教授一门课程，当该课程结课后删除对应记录，则该老师的职位信息也会丢失</li><li>更新：如果老师的职位发生变化，需要更新所有包含该老师的元组，导致时间开销大且容易出错</li></ul></div><h3 id="3-4-巴斯-科德范式（BCNF）">3.4 巴斯-科德范式（BCNF）</h3><p>定义：<strong>所有非平凡函数依赖的左部必须是超码</strong></p><p>意义：消除了某些异常情况</p><div class="note success flat"><p>假设有如下关系（仓库ID，物品ID，管理员ID，物品数量），其中有条件：一个管理员只负责一个仓库，一个仓库只有一个管理员，一个仓库可以有多个物品，一个物品可以位于多个仓库</p><p>易得候选码有（仓库ID，物品ID）和（管理员ID，物品ID），也就是说非主属性只有物品数量，同时物品数量完全依赖且直接依赖于候选码，所以该模式满足3NF，但是由于存在仓库ID-&gt;管理员ID，管理员ID-&gt;仓库ID，所以该模式不满足BCNF，存在以下问题</p><ul><li>插入：无法做到插入一个新仓库但不分配管理员，或者插入一个新管理员但不分配仓库</li><li>删除：清空仓库的物品，则会删除仓库ID和管理员ID</li><li>更新：如果要更新管理员，需要对全部元组进行更新，造成相当大的时间开销</li></ul></div><h3 id="3-5-第四范式（4NF）">3.5 第四范式（4NF）</h3><p>定义：<strong>所有非平凡多值依赖的左部必须是超码</strong></p><p>意义：<strong>消除了多对多关系</strong></p><div class="note success flat"><p>假设存在如下表：对于每个 <code>StudentID</code>，可以有多个 <code>Course</code> 和多个 <code>Hobby</code>，意味着一个学生可以选修多门课程，一个学生也可以有多个爱好，并且<code>Course</code>和<code>Hobby</code>显然没有任何关系，所以我们说 <code>StudentID</code> 多值依赖于 <code>Course</code> 和 <code>Hobby</code></p><table><thead><tr><th>StudentID</th><th>Course</th><th>Hobby</th></tr></thead><tbody><tr><td>1</td><td>Math</td><td>basketball</td></tr><tr><td>1</td><td>Science</td><td>football</td></tr><tr><td>1</td><td>English</td><td>music</td></tr><tr><td>2</td><td>Math</td><td>music</td></tr><tr><td>2</td><td>History</td><td>basketball</td></tr></tbody></table></div><h2 id="4-函数依赖理论">4. 函数依赖理论</h2><h3 id="4-1-阿姆斯特朗公理">4.1 阿姆斯特朗公理</h3><p>三个公理：</p><ul><li><strong>自反律：如果Y是X的子集，那么X-&gt;Y成立</strong></li><li><strong>增补律：如果X-&gt;Y，那么对于任意属性集Z，XZ-&gt;YZ成立</strong></li><li><strong>传递律：如果X-&gt;Y和Y-&gt;Z都成立，那么X-&gt;Z成立</strong></li></ul><p>三个引理：</p><ul><li><strong>合并律：如果X-&gt;Y成立且X-&gt;Z成立，则X-&gt;YZ成立</strong></li><li><strong>分解律：如果X-&gt;YZ成立，则X-&gt;Y成立且X-&gt;Z成立</strong></li><li><strong>伪传递律：如果X-&gt;Y成立且ZY-&gt;W成立，这XZ-&gt;W成立</strong></li></ul><h3 id="4-2-函数依赖集的闭包">4.2 函数依赖集的闭包</h3><p><strong>给定一组函数依赖集F，F的闭包F+是从F出发，通过Armstrong公理推导出的所有函数依赖的集合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">令F+ = F</span><br><span class="line">应用自反律生成所有的平凡依赖</span><br><span class="line">repeat</span><br><span class="line">  for each f in F+</span><br><span class="line">    在f上应用增补律，将结果加入F+中</span><br><span class="line">  for each f1,f2 in F+</span><br><span class="line">    if f1和f2可以应用传递律</span><br><span class="line">      将结果加入F+中</span><br><span class="line">until F+不再变化</span><br></pre></td></tr></table></figure><h3 id="4-3-属性集的闭包">4.3 属性集的闭包</h3><p><strong>给定一个属性集X和一组函数依赖F，属性集X的闭包X+是指从X出发，通过F推导出的所有属性的集合</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">X+ = X</span><br><span class="line">repeat</span><br><span class="line">  for each f：A-&gt;B in F</span><br><span class="line">    if A是X+的子集</span><br><span class="line">      将B加入X+中</span><br><span class="line">until X+不再变化</span><br></pre></td></tr></table></figure><div class="note success flat"><p><strong>超码的闭包是整个属性集</strong></p></div><h3 id="4-4-正则覆盖">4.4 正则覆盖</h3><p>正则覆盖：<strong>能保持与原函数依赖集F相同闭包的最小函数依赖集Fc</strong></p><p>无关属性：对于函数依赖集合F中的某个函数依赖<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">f: X \rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，如果删除X或Y中的某个属性A，函数依赖集F的闭包F+保持不变，则称A是无关属性</p><div class="note success flat"><p>F = {AB-&gt;C,A-&gt;D,D-&gt;C}，由A-&gt;D-&gt;C得到A-&gt;C，因此在AB-&gt;C中B是无关属性</p></div><p>步骤</p><ol><li>将函数依赖右边拆分为单个属性（消除右边的无关属性）</li><li>去除函数依赖左边的无关属性</li><li>去除重复的函数依赖</li><li>去除冗余的函数依赖（即某个函数依赖能被其他函数依赖推导出来）</li></ol><div class="note success flat"><p>考虑F = {A-&gt;BC,B-&gt;C,A-&gt;B,AB-&gt;C}</p><ol><li>A-&gt;BC可以变为A-&gt;B,A-&gt;C：<code>{A-&gt;C,A-&gt;B,B-&gt;C,A-&gt;B,AB-&gt;C}</code></li><li>因为存在A-&gt;C，所以AB-&gt;C中的B是无关的：<code>{A-&gt;C,A-&gt;B,B-&gt;C,A-&gt;B,A-&gt;C}</code></li><li>去除重复的函数依赖：<code>{A-&gt;C,A-&gt;B,B-&gt;C}</code></li><li>因为A-&gt;C能够从A-&gt;B,B-&gt;C中推出：<code>{A-&gt;B,B-&gt;C}</code></li></ol></div><h3 id="4-5-保持依赖">4.5 保持依赖</h3><p>保持依赖：将关系模式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>分解为多个子模式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>R</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">R_1,R_2,\ldots,R_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>后，原有的函数依赖集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>能够被分解后的子模式推导出来</p><p>方法一：闭包测试</p><ol><li>计算原函数依赖集 F 的闭包 F+</li><li>计算 F 对每个子关系模式 Ri 的限定 Fi（是 F+ 中只包含 Ri 的函数依赖）</li><li>合并所有 Fi 得到 F’</li><li>计算 F’ 的闭包 F’+</li><li>判断 F’+ 是否等于 F+</li></ol><p>方法二：函数依赖测试</p><ol><li>遍历 F 中的每个函数依赖 X-&gt;Y</li><li>检查 X-&gt;Y 是否在某个子关系模式 Ri 中被保持<ol><li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>⊆</mo><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X \subseteq R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>且<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>⊆</mo><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Y \subseteq R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则 X-&gt;Y 在Ri 中被保持</li><li>若 X 关于限定 Fi 的闭包 X+ 包含 Y，则 X-&gt;Y 在 Ri 中被保持</li></ol></li><li>判断是否所有函数依赖都被保持</li></ol><h2 id="5-分解">5. 分解</h2><h3 id="5-1-3NF分解">5.1 3NF分解</h3><ol><li>求出 F 的正则覆盖 Fc</li><li>对于 Fc 中所有的函数依赖 fi: X-&gt;Y，令 Ri = XY，添加到R’中</li><li>检查候选码是否被包含<ol><li>如果存在一个 Ri 包含候选码，则直接进入下一步</li><li>如果所有 Ri 都不包含候选码，则添加任意一个候选码到 R’ 中</li></ol></li><li>对于 R’ 中的所有 Ri，如果 Ri 被另一个子关系包含，则删除 Ri</li></ol><div class="note success flat"><p>关系模式R(A,B,C,D,E,G)，主码是CE，函数依赖集F={B-&gt;G,CE-&gt;B,C-&gt;A,CE-&gt;G,B-&gt;D,C-&gt;D}</p><ol><li>正则覆盖为 Fc = {B-&gt;DG,CE-&gt;B,C-&gt;AD}</li><li>根据正则覆盖可以得到：R1 = (B,D,G), R2 = (C,E,B), R3 = (C,A,D)</li><li>主码是CE，其中(C,E,B)包含CE</li><li>R1,R2,R3之间没有包含关系</li></ol><p>综上，R’ = {(B,D,G),(C,E,B),(C,A,D)}</p></div><h3 id="5-2-BCNF分解">5.2 BCNF分解</h3><ol><li>令 R’ = {R}</li><li>如果 R’ 中的 Ri 保持的函数依赖中存在 X-&gt;Y 不满足BCNF，将 Ri 用 R1 = XY，R2 = Ri - Y 来替换</li><li>重复第2步，直到全部子模式都满足BCNF</li></ol><div class="note success flat"><p>关系模式R(A,B,C,D,E,G)，主码是AD，函数依赖集F={A-&gt;B,B-&gt;C,AD-&gt;G,D-&gt;E}</p><ol><li>R的主码为AD，A-&gt;B不满足BCNF，令R1 = AB，R2 = ACDEG</li><li>R2的主码为AD，其中D-&gt;E不满足BCNF，令R3 = DE，R4 = ACDG</li><li>R4的主码为AD，其中AD-&gt;G满足BCNF</li></ol><p>综上，，R’ = {(A,B),(D,E),(A,C,D,G)}</p></div><h3 id="5-3-4NF分解">5.3 4NF分解</h3><ol><li>令R’ = {R}</li><li>如果 R’ 中的 Ri 保持的函数依赖中存在 X-&gt;-&gt;Y 不满足4NF，将 Ri 用 R1 = XY，R2 = Ri - Y 来替换</li><li>重复第2步，直到全部子模式都满足4NF</li></ol><div class="note success flat"><p>关系模式R(A,B,C,D)，主码是AC，F={A-&gt;-&gt;B,A-&gt;C,C-&gt;-&gt;D}</p><ol><li>R的主码为AC，A-&gt;-&gt;B违反4NF，令R1=(A,B)，R2=(A,C,D)</li><li>R2的主码为AC，C-&gt;-&gt;D违反4NF，令R3=(C,D)，R4=(A,C)</li></ol><p>综上，R分解为{(A,B),(A,C),(C,D)}</p></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>套接字编程</title>
      <link href="/posts/1bcba982/"/>
      <url>/posts/1bcba982/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-实验要求">1. 实验要求</h2><p>使用 TCP 协议创建一个客户端-服务器聊天程序</p><ol><li>服务器能够接受多个客户端连接（不少于5个）</li><li>当有一个新的客户与服务器建立连接，服务器端显示该客户的地址和端口号</li><li>当有一个客户与服务器断开连接，服务器端显示该客户的地址和端口号</li><li>当有一个客户向服务器发送消息，服务器显示来自该客户的信息</li></ol><h2 id="2-实验原理">2. 实验原理</h2><h3 id="2-1-套接字">2.1 套接字</h3><p>套接字（socket）是网络协议（TCP、UDP）和应用程序之间的接口，用于在计算机之间的数据交换，由ip地址和端口号标识</p><ul><li>服务器套接字（server）：用于与客户端套接字建立连接</li><li>客户端套接字（client）：先用于与服务器套接字建立连接，然后用于发送和接收数据</li></ul><h3 id="2-2-python程序中的变量和函数">2.2 python程序中的变量和函数</h3><ul><li><p><code>address</code>：是一个二元组，<code>(ip, port)</code></p></li><li><p><code>socket(family, type)</code>：返回一个套接字</p><ul><li>family：地址簇，<code>AF_INET</code> 用于 IPv4，<code>AF_INET6</code> 用于 IPv6</li><li>type：类型，<code>SOCK_STREAM</code> 用于 TCP，<code>SOCK_DGRAM</code> 用于 UDP</li></ul></li><li><p><code>socket.listen(length)</code>：将一个套接字从非连接模式切换到监听模式，准备接受传入的连接请求，length指定了最大连接数</p></li><li><p><code>socket.connect(address)</code>：将客户的套接字连接到服务器</p></li><li><p><code>socket.bind(ip, port)</code>：将套接字绑定到指定ip地址和端口，其中ip设置为<code>0.0.0.0</code>表示接受来自任何 IP 地址的数据</p></li><li><p><code>socket.accept()</code>：服务器接受客户端的连接请求，返回客户套接字和客户端地址</p></li><li><p><code>socket.send(message)</code>：发送数据</p></li><li><p><code>socket.recv(buffersize)</code>：返回接收到的数据</p></li><li><p><code>encode(string)和decode(string)</code>：实现字符串类型和字节类型之间的转换</p></li><li><p><code>socket.close()</code>：关闭套接字，释放相关资源</p></li></ul><h2 id="3-实验过程">3. 实验过程</h2><h3 id="3-1-server-py">3.1 <a href="http://server.py">server.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_client</span>(<span class="params">clientSocket, clientAddress</span>):</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;【连接建立】服务器建立与客户端<span class="subst">&#123;clientAddress&#125;</span>的连接&quot;</span>)</span><br><span class="line">  clientSocket.send(<span class="string">&quot;开始与 Dasi 聊天吧！&quot;</span>.encode())</span><br><span class="line">  <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">      receiveMessage = clientSocket.recv(<span class="number">2048</span>)</span><br><span class="line">      <span class="comment"># 客户端申请断连</span></span><br><span class="line">      <span class="keyword">if</span> receiveMessage.decode() == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;【连接异常】丢失与客户端 <span class="subst">&#123;clientAddress&#125;</span> 的连接&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">if</span> receiveMessage.decode() == <span class="string">&#x27;exit&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;【连接断开】服务器断开与客户端 <span class="subst">&#123;clientAddress&#125;</span> 的连接&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="comment"># 服务器与客户端交互</span></span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;【接收消息】<span class="subst">&#123;clientAddress&#125;</span>: <span class="subst">&#123;receiveMessage.decode()&#125;</span>&quot;</span>)</span><br><span class="line">        sendMessage = <span class="built_in">input</span>(<span class="string">&quot;【发送消息】&quot;</span>)</span><br><span class="line">        clientSocket.send(sendMessage.encode())</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;【连接错误】<span class="subst">&#123;clientAddress&#125;</span>抛出信息: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  <span class="comment"># 关闭客户端套接字</span></span><br><span class="line">  clientSocket.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器套接字配置</span></span><br><span class="line">serverPort = <span class="number">12000</span></span><br><span class="line">serverSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">serverSocket.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, serverPort))</span><br><span class="line"><span class="comment"># 进入监听模式，最大连接数为5</span></span><br><span class="line">serverSocket.listen(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;等待客户端连接...&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">  <span class="comment"># 连接到客户端</span></span><br><span class="line">  clientSocket, clientAddress = serverSocket.accept()</span><br><span class="line">  <span class="comment"># 为每个客户端连接创建一个“聊天线程”</span></span><br><span class="line">  client_thread = threading.Thread(target=handle_client, args=(clientSocket, clientAddress))</span><br><span class="line">  client_thread.start()</span><br></pre></td></tr></table></figure><h3 id="3-2-client-py">3.2 <a href="http://client.py">client.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器地址</span></span><br><span class="line">serverIP = <span class="string">&#x27;192.168.56.1&#x27;</span></span><br><span class="line">serverPort = <span class="number">12000</span></span><br><span class="line">serverAddress = (serverIP, serverPort)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端套接字</span></span><br><span class="line">clientSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">clientSocket.connect(serverAddress)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;连接到<span class="subst">&#123;serverAddress&#125;</span>的聊天机器人Dasi&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">  receiveMessage = clientSocket.recv(<span class="number">2048</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;Dasi: <span class="subst">&#123;receiveMessage.decode()&#125;</span>&quot;</span>)</span><br><span class="line">  sendMessage = <span class="built_in">input</span>(<span class="string">&quot;你: &quot;</span>)</span><br><span class="line">  clientSocket.send(sendMessage.encode())</span><br><span class="line">  <span class="comment"># 客户端主动断连</span></span><br><span class="line">  <span class="keyword">if</span> sendMessage == <span class="string">&#x27;exit&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;断开与<span class="subst">&#123;serverAddress&#125;</span>的连接&quot;</span>)</span><br><span class="line">    clientSocket.close()</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="4-实验结果">4. 实验结果</h2><p><strong>一个服务器与三个客户端连接</strong><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/experiment/202410142114354.png" alt=""></p><p><strong>每个客户端都向服务器发送消息，服务器依次回复客户端的端口号</strong><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/experiment/202410142114356.png" alt=""></p><p><strong>客户端主动申请断连</strong><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/experiment/202410142114357.png" alt=""></p><p><strong>客户端手动强行断连（输入ctrl+c）</strong><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/experiment/202410142114358.png" alt=""></p><p><strong>客户端手动强行关闭（关闭终端）</strong><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/experiment/202410142114359.png" alt=""></p><h2 id="5-实验总结">5. 实验总结</h2><p>本次实验的<strong>局限性</strong>主要有以下几点</p><ul><li>由于在同一台pc上运行多个客户程序和服务器程序，所以客户和服务器的ip地址都是一样的</li><li>如果多个客户同时向服务器发送信息，服务器的显示会出错</li><li>服务器只能依次按接收的顺序回复，不能指定回复的客户</li><li>客户一次只能发送一条消息，且只有等到服务器回复后才能发送下一条，这属于“一问一答”模式，但是跟实际聊天的模式不符合</li><li>服务器程序无法手动控制关闭，只能通过关闭终端来关闭服务器套接字</li></ul>]]></content>
      
      
      <categories>
          
          <category> 实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>堆</title>
      <link href="/posts/fab451a5/"/>
      <url>/posts/fab451a5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-堆的数组表示">1. 堆的数组表示</h2><p><strong>堆（Heap）</strong>：是一种特殊的<strong>完全二叉树</strong>，其中<strong>最大堆是指任何父节点的值都大于等于其子节点的值，最小堆是指指任何父节点的值都小于等于其子节点的值</strong>（叶子结点的子结点可以看作成是负无穷）</p><p>堆的数组表示：数组的下标可以被看作成是二叉树的结点序号，<strong>二叉树从顶点，自上而下，自左向右进行标号即是对应的数组下标</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/Algorithm/202410111849061.jpeg" alt=""></p><p>堆的序号性质：</p><ul><li>如果二叉树有n个结点且序号从1开始：<ul><li>最后一个结点的序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></li><li>最后一个叶子结点的序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor n/2 \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li><li>序号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的父结点的序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>i</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor i/2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">i</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span></li><li>序号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的左子结点序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi></mrow><annotation encoding="application/x-tex">2i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span></span></span></span>，右子结点序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li></ul></li><li>如果二叉树有n个结点且序号从0开始：<ul><li>最后一个结点的序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li><li>最后一个叶子结点的序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor (n-1-1)/2 \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/2</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li><li>序号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的父结点的序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor (i-1)/2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span></li><li>序号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的左子结点序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，右子结点序号是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>i</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2i+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></li></ul></li></ul><div class="note warning flat"><p>代码中由于数组的下标是从0开始，所以我们按照第二种计算方式<br>理论题数组的下标可能是从1开始，所以要按第一种方式</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/Algorithm/202410111849059.jpeg" alt=""></p><h2 id="2-堆的操作（以最大堆为例）">2. 堆的操作（以最大堆为例）</h2><h3 id="2-1-维护最大堆性质">2.1 维护最大堆性质</h3><p><code>MAX_HEAPIFY(heap,i)</code>：输入数组A和下标i，<strong>其中结点i的所有后代结点都满足最大堆的性质，但是结点i可能不满足最大堆的性质</strong></p><ul><li>如果左子结点和右子结点都小于A[i]，说明此时已满足最大堆性质</li><li>否则选择比A[i]大的子结点（如果左/右子结点都大于A[i]，就选择两者之中的较大值）与A[i]的值交换</li><li>上述做法可能会改变i的子结点的最大堆性质，因此对i的子结点递归调用</li></ul><div class="note success flat"><p>时间分析：因为以子结点为根结点的子树大小至多是2n/3，所以递归式是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mi mathvariant="normal">/</mi><mn>3</mn><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) &lt;= T(2n/3) + \Theta(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mord">/3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，时间复杂度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(lg(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">MAX_HEAPIFY</span>(<span class="params">heap,i</span>):</span><br><span class="line">  last = <span class="built_in">len</span>(heap) - <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> i &gt;= (last-<span class="number">1</span>) // <span class="number">2</span> + <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  root = heap[i]</span><br><span class="line">  left = heap[<span class="number">2</span>*i+<span class="number">1</span>] <span class="keyword">if</span> <span class="number">2</span>*i+<span class="number">1</span> &lt;= last <span class="keyword">else</span> -<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">  right = heap[<span class="number">2</span>*i+<span class="number">2</span>] <span class="keyword">if</span> <span class="number">2</span>*i+<span class="number">2</span> &lt;= last <span class="keyword">else</span> -<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> root &gt;= left <span class="keyword">and</span> root &gt;= right:</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">elif</span> root &lt; left <span class="keyword">and</span> left &gt; right:</span><br><span class="line">    heap[i] = left</span><br><span class="line">    heap[<span class="number">2</span>*i+<span class="number">1</span>] = root</span><br><span class="line">    MAX_HEAPIFY(heap,<span class="number">2</span>*i+<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">elif</span> root &lt; right <span class="keyword">and</span> right &gt; left:</span><br><span class="line">    heap[i] = right</span><br><span class="line">    heap[<span class="number">2</span>*i+<span class="number">2</span>] = root</span><br><span class="line">    MAX_HEAPIFY(heap,<span class="number">2</span>*i+<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="3-建堆">3. 建堆</h2><p><code>BUILD_MAX_HEAP</code>：上述维护堆的前提是结点i的所有后代结点都满足最大堆性质的，因此为了建最大堆，我们要利用<strong>循环不变式，即每一次循环，对于序号i，结点i+1一直到最后一个结点都满足最大堆性质</strong>，所以初始条件我们要<strong>从第一个非叶子结点开始从后往前遍历调用MAX_HEAPIFY</strong>，这是因为<strong>叶子结点始终满足最大堆性质</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">BUILD_MAX_HEAP</span>(<span class="params">heap</span>):</span><br><span class="line">  last = <span class="built_in">len</span>(heap) - <span class="number">1</span></span><br><span class="line">  i = (last-<span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">  <span class="keyword">while</span> i &gt;= <span class="number">0</span> :</span><br><span class="line">    MAX_HEAPIFY(heap,i)</span><br><span class="line">    i -= <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="4-堆的删除和插入">4. 堆的删除和插入</h2><p><code>EXTRACT_MAX_HEAP(heap)</code>：删除指的是将堆顶元素去除并返回其值，可以将最后一个结点和栈顶结点互换，然后再删除最后一个结点，这样能保证根结点的所有后代结点都满足最大堆性质，只需要对根结点调用<code>MAX_HEAPIFY(heap,0)</code>即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">EXTRACT_MAX_HEAP</span>(<span class="params">heap</span>):</span><br><span class="line">  last = <span class="built_in">len</span>(heap) - <span class="number">1</span></span><br><span class="line">  heap[<span class="number">0</span>],heap[last] = heap[last],heap[<span class="number">0</span>]</span><br><span class="line">  maxnum = heap.pop()</span><br><span class="line">  MAX_HEAPIFY(heap,<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">return</span> maxnum</span><br></pre></td></tr></table></figure><p><code>INSERT_MAX_HEAP(heap,key)</code>：插入指的是将值为key的元素插入到堆中，先将该值插入到堆的最后，然后自底向上不断比较大小，交换父结点和子结点，直到满足最大堆性质或到达根结点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">INSERT_MAX_HEAP</span>(<span class="params">heap,key</span>):</span><br><span class="line">  heap.append(key)</span><br><span class="line">  i = <span class="built_in">len</span>(heap) - <span class="number">1</span></span><br><span class="line">  j = (i-<span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">  <span class="keyword">while</span> j &gt;= <span class="number">0</span> <span class="keyword">and</span> heap[i] &gt; heap[j]:</span><br><span class="line">    heap[j],heap[i] = heap[i],heap[j]</span><br><span class="line">    i = j</span><br><span class="line">    j = (i-<span class="number">1</span>) // <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="5-堆排序">5. 堆排序</h2><p><code>SORT_MAX_HEAP(heap)</code>：利用最大堆的根结点都是数组的最大值，不断删除根结点，获取每次最大堆的最大值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SORT_MAX_HEAP</span>(<span class="params">heap</span>):</span><br><span class="line">  BUILD_MAX_HEAP(heap)</span><br><span class="line">  sort_heap = [<span class="number">0</span>] * <span class="built_in">len</span>(heap)</span><br><span class="line">  last = <span class="built_in">len</span>(heap) - <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> last &gt;= <span class="number">0</span>:</span><br><span class="line">    maxnum = EXTRACT_MAX_HEAP(heap)</span><br><span class="line">    sort_heap[last] = maxnum</span><br><span class="line">    last -= <span class="number">1</span></span><br><span class="line">  heap[:] = sort_heap</span><br></pre></td></tr></table></figure><h2 id="6-经典例题">6. 经典例题</h2><h3 id="6-1-最大的第K个数">6.1 最大的第K个数</h3><p><code>Kth(heap,k)</code>：先建堆，然后删除k次堆顶，第k次删除得到的堆顶就是第k个最大元素，需要注意相同值的元素需要跳过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Kth</span>(<span class="params">heap,k</span>):</span><br><span class="line">  BUILD_MAX_HEAP(heap)</span><br><span class="line">  k_max = -<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">  count = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> count != k:</span><br><span class="line">    temp = EXTRACT_MAX_HEAP(heap)</span><br><span class="line">    <span class="keyword">if</span> temp != k_max:</span><br><span class="line">      k_max = temp</span><br><span class="line">      count += <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> k_max</span><br></pre></td></tr></table></figure><h3 id="6-2-最小的前K个数">6.2 最小的前K个数</h3><p><code>TopK(heap,k)</code>：不断插入数组元素到最大堆，并且<strong>始终保持最大堆的结点个数只有k个</strong>，一旦超出，就将堆顶结点踢出，遍历完数组后，剩下的K个结点的值就是最小的前K个数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">TopK</span>(<span class="params">heap,k</span>):</span><br><span class="line">  array = []</span><br><span class="line">  <span class="keyword">for</span> num <span class="keyword">in</span> heap:</span><br><span class="line">    INSERT_MAX_HEAP(array,num)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(array) &gt; k:</span><br><span class="line">      EXTRACT_MAX_HEAP(array)</span><br><span class="line">  <span class="keyword">return</span> array</span><br></pre></td></tr></table></figure><h2 id="7-参考链接">7. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://writings.sh/post/data-structure-heap-and-common-problems#%E6%95%B0%E7%BB%84%E8%A1%A8%E7%A4%BA">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">数据结构-堆的原理和常见算法问题</div>          <div class="tag-link-sitename">春水煎茶·王超的个人博客</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenGL：3D</title>
      <link href="/posts/d65938ac/"/>
      <url>/posts/d65938ac/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-数学基础">1. 数学基础</h2><h3 id="1-1-向量">1.1 向量</h3><p>一个有方向（Direction）和大小（Magnitude）的量，向量的每一项叫做分量，默认<strong>向量的起点是原点</strong>，因此只需要指定向量的终点就可以指示一个方向</p><table><thead><tr><th>向量运算</th><th>描述</th></tr></thead><tbody><tr><td>标量运算</td><td>一个向量加/减/乘/除一个标量，相当于对向量的每个分量分别进行该运算</td></tr><tr><td>取反</td><td>将向量的每个分量取反</td></tr><tr><td>加减</td><td>两个向量的对应分量进行加减</td></tr><tr><td>长度</td><td>对分量进行平方和后开根号</td></tr><tr><td>归一</td><td>每个分量除以向量的长度得到单位向量</td></tr><tr><td>点积</td><td>将对应分量逐个相乘</td></tr><tr><td>叉积</td><td>生成一个正交于两个输入向量的第三个向量</td></tr></tbody></table><h3 id="2-矩阵">2. 矩阵</h3><p>一个二维数组，矩阵中每一项叫做矩阵的元素（element），矩阵可以通过<code>(i, j)</code>进行索引，i是行，j是列，矩阵的行数和列数分别叫做矩阵的维度（dimension）</p><table><thead><tr><th>矩阵运算</th><th>描述</th></tr></thead><tbody><tr><td>加减</td><td>两个矩阵对应位置的元素进行加减</td></tr><tr><td>数乘</td><td>矩阵的每个元素乘以一个标量</td></tr><tr><td>相乘</td><td>新矩阵每一个元素是对应行和对应列的线性组合</td></tr></tbody></table><div class="note warning flat"><p>向量可以看作是一个<strong>Nx1的矩阵</strong></p></div><h3 id="3-GLM">3. GLM</h3><p><strong>GLM（OpenGL Mathematics）</strong>：专门为OpenGL量身定做的数学库，它提供了许多数学函数和数据类型，用于处理图形学中的各种数学运算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用的时候需要包含这三个头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据类型</span></span><br><span class="line">glm::vec3 vector1 = glm::<span class="built_in">vec3</span>(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">glm::vec4 vector2 = glm::<span class="built_in">vec4</span>(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1</span>,<span class="number">0</span>f);</span><br><span class="line">glm::mat3 matrix1 = glm::<span class="built_in">mat3</span>(<span class="number">1.0f</span>); <span class="comment">// 初始化为3x3单位矩阵</span></span><br><span class="line">glm::mat4 matrix2 = glm::<span class="built_in">mat4</span>(<span class="number">0.0f</span>); <span class="comment">// 初始化为4x4零矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 运算</span></span><br><span class="line"><span class="type">float</span> mult_matrix = matrix1 * matrix2; <span class="comment">// 矩阵乘法</span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">glm::dot</span><span class="params">(<span class="type">const</span> glm::vec3 &amp;x, <span class="type">const</span> glm::vec3 &amp;y)</span></span>; <span class="comment">// 点乘</span></span><br><span class="line"><span class="function">glm::vec3 <span class="title">glm::cross</span><span class="params">(<span class="type">const</span> glm::vec3 &amp;x, <span class="type">const</span> glm::vec3 &amp;y)</span></span>; <span class="comment">// 叉乘</span></span><br><span class="line"><span class="function">glm::vec3 <span class="title">glm::normalize</span><span class="params">(<span class="type">const</span> glm::vec3 &amp;v)</span></span>; <span class="comment">// 归一</span></span><br><span class="line"><span class="function">glm::mat4 <span class="title">glm::transpose</span><span class="params">(<span class="type">const</span> glm::mat4 &amp;m)</span></span>; <span class="comment">// 转置</span></span><br><span class="line"><span class="function">glm::mat4 <span class="title">glm::inverse</span><span class="params">(<span class="type">const</span> glm::mat4 &amp;m)</span></span>; <span class="comment">// 取逆</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 变换</span></span><br><span class="line"><span class="function">glm::mat4 <span class="title">glm::scale</span><span class="params">(<span class="type">const</span> glm::mat4 &amp;m, <span class="type">const</span> glm::vec3 &amp;scale)</span></span>; <span class="comment">// 缩放</span></span><br><span class="line"><span class="function">glm::mat4 <span class="title">glm::translate</span><span class="params">(<span class="type">const</span> glm::mat4 &amp;m, <span class="type">const</span> glm::vec3 &amp;offset)</span></span>; <span class="comment">// 位移</span></span><br><span class="line"><span class="function">glm::mat4 <span class="title">glm::rotate</span><span class="params">(<span class="type">const</span> glm::mat4 &amp;m, <span class="type">float</span> angle, <span class="type">const</span> glm::vec3 &amp;axis)</span></span>; <span class="comment">// 旋转</span></span><br></pre></td></tr></table></figure><h2 id="2-变换">2. 变换</h2><h3 id="2-1-缩放">2.1 缩放</h3><p><strong>缩放（Scale）</strong>：对向量的不同分量大小进行<strong>倍增或倍减</strong></p><p>缩放矩阵：<strong>左对角线上每一个值是对应分量的缩放倍数</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951524.png" alt=""></p><h3 id="2-2-位移">2.2 位移</h3><p><strong>位移（Translate）</strong>：对向量的不同分量<strong>加上一个值</strong>进行位移</p><p>位移矩阵：<strong>最后一列的每个值是对应分量加上的值</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951523.png" alt=""></p><h3 id="2-3-旋转">2.3 旋转</h3><p><strong>旋转（Rotate）</strong>：指定<strong>一个旋转轴和一个旋转角度</strong></p><p>旋转矩阵</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951522.png" alt=""></p><h3 id="2-4-组合变换">2.4 组合变换</h3><p>之所以利用矩阵表示变换，就是因为可以<strong>通过矩阵乘法可以将多个变换矩阵合并到一个变换矩阵</strong>，但由于<strong>矩阵乘法不满足交换律但满足结合律且变换顺序不同会导致结果不同</strong>，所以变换一般遵从以下顺序：<strong>缩放-旋转-位移</strong></p><p>由于是<strong>利用矩阵左乘向量，所以计算式要从右往左读</strong>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo>=</mo><mi>T</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo>∗</mo><mi>R</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo>∗</mo><mi>S</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Transform = Translate * Rotate * Scale</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span></span></span></span></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951520.png" alt=""></p><h2 id="3-坐标系统">3. 坐标系统</h2><h3 id="3-1-五个坐标系统">3.1 五个坐标系统</h3><table><thead><tr><th>名称</th><th>描述</th><th>作用</th></tr></thead><tbody><tr><td>局部空间（Local）/物体空间（Object）</td><td>相对于物体自身原点的坐标系统</td><td>用于定义和操控物体自身的几何形状和运动</td></tr><tr><td>世界空间（World）</td><td>相对于固定的世界原点的坐标</td><td>用于将多个物体放在一个世界场景</td></tr><tr><td>观察空间（View）/视觉空间（Eye）</td><td>相对于相机/观察者的坐标</td><td>确定从相机视角看到的物体位置，从而进行投影</td></tr><tr><td>裁剪空间（Clip）</td><td>标准化设备坐标</td><td>用于确定哪些物体可以被看到，从而决定渲染哪些部分</td></tr><tr><td>屏幕空间（Screen）</td><td>相对于屏幕上窗口的坐标</td><td>用于最终渲染图像的坐标系统，使得物体能够正确地显示在屏幕上</td></tr></tbody></table><h3 id="3-2-三个变换矩阵">3.2 三个变换矩阵</h3><table><thead><tr><th>矩阵</th><th>变换</th><th>作用</th></tr></thead><tbody><tr><td>观察（View）</td><td>世界到观察，3D-&gt;3D</td><td>用于确定在相机视角下的物体坐标</td></tr><tr><td>投影（Projection）</td><td>观察到裁剪，3D-&gt;2D</td><td>用于确定在相机视角下能被看到的物体和渲染后的物体</td></tr><tr><td>视口（ViewPort）</td><td>裁剪到屏幕，2D-&gt;2D</td><td>用于确定显示在相机屏幕上的物体</td></tr></tbody></table><h3 id="3-3-右手坐标系">3.3 右手坐标系</h3><p><strong>食指向上表示y轴正方向，大拇指向右表示x轴正方向，中指向内表示z轴正方向</strong></p><h2 id="4-观察">4. 观察</h2><h3 id="4-1-摄像机">4.1 摄像机</h3><p><strong>如何定义摄像机</strong></p><table><thead><tr><th>元素</th><th>定义</th><th>计算</th><th>注意</th></tr></thead><tbody><tr><td>摄像机位置</td><td>摄像机位于世界空间中的位置</td><td>由用户自定义</td><td>z轴的正方向是指出屏幕，因此为了将镜头拉远，需要将摄像机位置沿着z轴的正方向移动</td></tr><tr><td>前轴</td><td>观察空间的z轴正方向</td><td>前轴向量 = 摄像机的位置向量 - 拍摄场景的原点向量</td><td>从拍摄场景指向摄像机的</td></tr><tr><td>右轴</td><td>观察空间的x轴正方向</td><td>右轴向量 = 上向量 x 前向向量</td><td>上向量是世界空间中指向y轴正方向的(0,1,0)</td></tr><tr><td>上轴</td><td>观察空间的y轴正方向</td><td>上轴向量 = 前向向量 x 右轴向量</td><td>上轴是观察空间的y轴，上向量是世界空间的y轴</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202410131901772.png" alt=""></p><p><strong>LookAt矩阵</strong>：即观察矩阵，记位置向量为P，前向向量为F，右轴向量为R，上轴向量为U，则有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>×</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>P</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>P</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>P</mi><mi>z</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}R_x &amp; R_y &amp; R_z &amp; 0 \\U_x &amp; U_y &amp; U_z &amp; 0 \\F_x &amp; F_y &amp; F_z &amp; 0 \\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}\times\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; -P_x \\0 &amp; 1 &amp; 0 &amp; -P_y \\0 &amp; 0 &amp; 1 &amp; -P_z \\0 &amp; 0 &amp; 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v1200 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v1200 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v1200 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v1200 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>glm提供的lookAt方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glm::mat4 viewMatrix = glm::<span class="built_in">lookAt</span>(cameraPosition, targetPosition, upDirection);</span><br></pre></td></tr></table></figure><h3 id="4-2-基于摄像机的旋转">4.2 基于摄像机的旋转</h3><p><strong>欧拉角</strong>：是可以表示3D空间中任何旋转的3个值</p><ul><li><strong>俯仰角（Pitch）</strong>：绕X轴旋转的角度</li><li><strong>偏航角（Yaw）</strong>：绕Y轴旋转的角度</li><li><strong>滚转角（Roll）</strong>：绕Z轴旋转的角度</li></ul><div class="note success flat"><p>可以这样理解，一个飞机目标沿着z轴正方向的航线飞行，遵循右手定则</p><ul><li>飞机绕着x轴旋转，相当于机头翘起或垂落，也就是飞机俯仰姿态</li><li>飞机绕着y轴旋转，相当于机头向左或向右，也就是飞机偏离航线</li><li>飞机绕着z轴旋转，相当于机头顺指针或逆时针，也就是飞机滚转机身</li></ul></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202410131901771.png" alt=""></p><p>摄像机系统只关心俯仰角和偏航角，满足</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>o</mi><mi>r</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>p</mi><mi>i</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>y</mi><mi>a</mi><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">forward.x = cos(pitch) * cos(yaw)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>o</mi><mi>r</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>y</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>p</mi><mi>i</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">forward.y = sin(pitch)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>o</mi><mi>r</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>d</mi><mi mathvariant="normal">.</mi><mi>z</mi><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>p</mi><mi>i</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mi>y</mi><mi>a</mi><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">forward.z = cos(pitch) * cos(yaw)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">cos</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202410131901770.png" alt=""><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202410131901768.png" alt=""></p><h3 id="4-2-一些摄像机操作">4.2 一些摄像机操作</h3><h3 id="4-2-1-摄像机按照圆形轨迹移动">4.2.1 摄像机按照圆形轨迹移动</h3><p>假设摄像机的圆形轨迹是位于X-Z平面的，因此要先定义距离世界坐标中心的半径radius，然后利用三角函数算出X坐标和Z坐标，最后传递给lookAt矩阵即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> radius = <span class="number">10.0f</span>;</span><br><span class="line"><span class="type">float</span> camX = <span class="built_in">sin</span>(<span class="built_in">glfwGetTime</span>()) * radius;</span><br><span class="line"><span class="type">float</span> camZ = <span class="built_in">cos</span>(<span class="built_in">glfwGetTime</span>()) * radius;</span><br><span class="line">glm::mat4 view = glm::<span class="built_in">lookAt</span>(glm::<span class="built_in">vec3</span>(camX, <span class="number">0.0</span>, camZ), glm::<span class="built_in">vec3</span>(<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>), glm::<span class="built_in">vec3</span>(<span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>));</span><br></pre></td></tr></table></figure><h3 id="4-2-2-摄像机根据键盘方向键移动">4.2.2 摄像机根据键盘方向键移动</h3><p>假设保持方向向量不变和移动速度不变</p><ul><li><strong>摄像机向前或向后移动，就将位置向量加上或减去方向向量</strong></li><li><strong>摄像机向左或向右移动，就将位置向量加上或减去方向向量叉乘上向量得到的右轴向量</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">processInput</span><span class="params">(GLFWwindow *window)</span> </span>&#123;</span><br><span class="line">  <span class="type">float</span> cameraSpeed = <span class="number">0.05f</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">glfwGetKey</span>(window, GLFW_KEY_W) == GLFW_PRESS)</span><br><span class="line">      cameraPos += cameraSpeed * cameraFront;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">glfwGetKey</span>(window, GLFW_KEY_S) == GLFW_PRESS)</span><br><span class="line">      cameraPos -= cameraSpeed * cameraFront;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">glfwGetKey</span>(window, GLFW_KEY_A) == GLFW_PRESS)</span><br><span class="line">      cameraPos -= glm::<span class="built_in">normalize</span>(glm::<span class="built_in">cross</span>(cameraFront, cameraUp)) * cameraSpeed;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">glfwGetKey</span>(window, GLFW_KEY_D) == GLFW_PRESS)</span><br><span class="line">      cameraPos += glm::<span class="built_in">normalize</span>(glm::<span class="built_in">cross</span>(cameraFront, cameraUp)) * cameraSpeed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-3-鼠标控制视角">4.2.3 鼠标控制视角</h3><p>鼠标水平移动影响偏航角，鼠标竖直移动影响俯仰角，可以通过存储上一帧鼠标的位置并获取当前帧鼠标的位置来计算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 应该隐藏光标并捕捉</span></span><br><span class="line"><span class="built_in">glfwSetInputMode</span>(window, GLFW_CURSOR, GLFW_CURSOR_DISABLED);</span><br><span class="line"><span class="comment">// 注册回调函数</span></span><br><span class="line"><span class="built_in">glfwSetCursorPosCallback</span>(window, mouse_callback);</span><br><span class="line"><span class="comment">// 监听鼠标移动</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mouse_callback</span><span class="params">(GLFWwindow* window, <span class="type">double</span> xpos, <span class="type">double</span> ypos)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 如果这是第一次调用，则记录鼠标位置值</span></span><br><span class="line">  <span class="keyword">if</span> (firstMouse) &#123;</span><br><span class="line">    lastX = xpos;</span><br><span class="line">    lastY = ypos;</span><br><span class="line">    firstMouse = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 计算</span></span><br><span class="line">  <span class="type">float</span> xoffset = xpos - lastX;</span><br><span class="line">  <span class="type">float</span> yoffset = lastY - ypos; </span><br><span class="line">  lastX = xpos;</span><br><span class="line">  lastY = ypos;</span><br><span class="line">  <span class="comment">// 灵敏度因子，控制鼠标移动程度</span></span><br><span class="line">  <span class="type">float</span> sensitivity = <span class="number">0.05</span>;</span><br><span class="line">  xoffset *= sensitivity;</span><br><span class="line">  yoffset *= sensitivity;</span><br><span class="line">  <span class="comment">// 更新角度</span></span><br><span class="line">  yaw   += xoffset;</span><br><span class="line">  pitch += yoffset;</span><br><span class="line">  <span class="comment">// 避免翻转</span></span><br><span class="line">  <span class="keyword">if</span>(pitch &gt; <span class="number">89.0f</span>)</span><br><span class="line">    pitch = <span class="number">89.0f</span>;</span><br><span class="line">  <span class="keyword">if</span>(pitch &lt; <span class="number">-89.0f</span>)</span><br><span class="line">    pitch = <span class="number">-89.0f</span>;</span><br><span class="line">  <span class="comment">// 计算前向向量</span></span><br><span class="line">  glm::vec3 front;</span><br><span class="line">  front.x = <span class="built_in">cos</span>(glm::<span class="built_in">radians</span>(yaw)) * <span class="built_in">cos</span>(glm::<span class="built_in">radians</span>(pitch));</span><br><span class="line">  front.y = <span class="built_in">sin</span>(glm::<span class="built_in">radians</span>(pitch));</span><br><span class="line">  front.z = <span class="built_in">sin</span>(glm::<span class="built_in">radians</span>(yaw)) * <span class="built_in">cos</span>(glm::<span class="built_in">radians</span>(pitch));</span><br><span class="line">  cameraFront = glm::<span class="built_in">normalize</span>(front);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-4-鼠标控制缩放">4.2.4 鼠标控制缩放</h3><p>缩放是通过投影矩阵的fov参数实现的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册回调函数</span></span><br><span class="line"><span class="built_in">glfwSetScrollCallback</span>(window, scroll_callback);</span><br><span class="line"><span class="comment">// 鼠标滚轮控制缩放</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">scroll_callback</span><span class="params">(GLFWwindow* window, <span class="type">double</span> xoffset, <span class="type">double</span> yoffset)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 调整视野fov</span></span><br><span class="line">  <span class="keyword">if</span>(fov &gt;= <span class="number">1.0f</span> &amp;&amp; fov &lt;= <span class="number">45.0f</span>)</span><br><span class="line">    fov -= yoffset;</span><br><span class="line">  <span class="comment">// 控制上下限</span></span><br><span class="line">  <span class="keyword">if</span>(fov &lt;= <span class="number">1.0f</span>)</span><br><span class="line">    fov = <span class="number">1.0f</span>;</span><br><span class="line">  <span class="keyword">if</span>(fov &gt;= <span class="number">45.0f</span>)</span><br><span class="line">    fov = <span class="number">45.0f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用投影函数获得投影矩阵</span></span><br><span class="line">projection = glm::<span class="built_in">perspective</span>(glm::<span class="built_in">radians</span>(fov), <span class="number">800.0f</span> / <span class="number">600.0f</span>, <span class="number">0.1f</span>, <span class="number">100.0f</span>);</span><br></pre></td></tr></table></figure><h2 id="5-投影">5. 投影</h2><h3 id="5-1-正射投影">5.1 正射投影</h3><p><strong>正射（Orthographic）</strong>：所有的投影线都是平行的，意味着在投影过程中物体的<strong>大小和形状不会发生变化</strong></p><p>正射投影：定义了一个<strong>方体</strong>，由<strong>宽、高、近平面和远平面</strong>所指定，在方体内，所有的物体都被投影到一个二维平面上，在方体外，所有的物体都被裁剪掉</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mat4 orthoMatrix = <span class="built_in">ortho</span>(left, right, bottom, top, near, far);</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951519.png" alt=""></p><h3 id="2-2-透视投影">2.2 透视投影</h3><p><strong>透视（Perspective）</strong>：物体的大小和形状在投影过程中会发生变化，<strong>越靠近观察者的物体越大，越远离观察者的物体越小</strong>，依据透视除法有最后输出的顶点坐标为<code>(x/w,y/w,z/w)</code></p><p>透视投影：定义了一个<strong>锥体</strong>，由<strong>视野（Fov）、宽高比、近平面和远平面</strong>所指定，在锥体内，所有的物体都被投影到一个二维平面上，在锥体外，所有的物体都被裁剪掉</p><h3 id="2-3-深度缓冲">2.3 深度缓冲</h3><p>深度缓冲（Depth Buffer）/z缓冲（Z-buffer）：存储所有片段的深度信息/z值</p><p>深度测试：在渲染每个片段时，比较当前片段的深度值和深度缓冲中的值，<strong>如果当前的片段在其它片段之后，它将会被丢弃，否则将会覆盖</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启动深度测试</span></span><br><span class="line"><span class="built_in">glEnable</span>(GL_DEPTH_TEST);</span><br><span class="line"><span class="comment">// 清除深度缓冲</span></span><br><span class="line"><span class="built_in">glClear</span>(GL_DEPTH_BUFFER_BIT);</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951518.png" alt=""></p><h2 id="6-视口变换">6. 视口变换</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CG </tag>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分治策略</title>
      <link href="/posts/64bcbdce/"/>
      <url>/posts/64bcbdce/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-分治策略">1. 分治策略</h2><p>分治策略本质上就是分和治，分就是<strong>将一个大问题分成多个小问题去解</strong>，治就是<strong>利用多个小问题的解来得出一个大问题的解</strong>，分治策略大体上有以下三个步骤：</p><ol><li><strong>分解（Divide）：将问题划分为一些子问题，子问题的形式与原问题完全一样，只是规模更小</strong></li><li><strong>解决（Conquer）：当问题规模足够小时，停止递归，求解出当前子问题</strong></li><li><strong>合并（combine/merge）：将子问题的解组合成原问题的解</strong></li></ol><p>分治策略的核心是递归，分治的本质是<strong>自己分解自己和自己合并自己</strong>，递归的本质是<strong>自己调用自己并自己处理自己的返回值</strong>，递归过程中存在以下两种情况：</p><ul><li>递归情况（recursive）：子问题足够大时，无法求解或者很难求解，需要将问题分解为子问题</li><li>基本情况（base）：子问题足够小时，无法分解或者没必要分解，直接求解子问题</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">分解:</span><br><span class="line">  if 基本情况</span><br><span class="line">    求解</span><br><span class="line">  if 递归情况</span><br><span class="line">    分解</span><br><span class="line">    求解</span><br><span class="line">  合并</span><br></pre></td></tr></table></figure><p>递归式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = aT(n/b) + f(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><ul><li>T(n)：是当前问题解决所需要的时间</li><li>a：是当前问题分成的子问题的个数</li><li>b：是当前问题分成的子问题的规模</li><li>f(n)：是合并子问题的解所需要的时间</li></ul><h2 id="2-归并排序">2. 归并排序</h2><p>归并排序，根据分治策略分为以下三步：</p><ol><li>分解：可以从中间将当前数组分为两个子数组递归</li><li>解决：如果当前数组长度为1，无法继续分，也可以认为已经排好序，停止递归，返回该数组</li><li>合并：对两个已经排好序的数组，设立两个指针进行遍历，可以很轻松地合并为一个排好序的数组</li></ol><p>递归式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = 2T(n/2) + \Theta(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">left,right</span>):</span><br><span class="line">  index1,index2 = <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">  len1,len2 = <span class="built_in">len</span>(left),<span class="built_in">len</span>(right)</span><br><span class="line">  array = []</span><br><span class="line">  <span class="keyword">while</span> <span class="built_in">len</span>(array) != (len1 + len2):</span><br><span class="line">    <span class="keyword">if</span> index2 == len2 <span class="keyword">or</span> (index1 != len1 <span class="keyword">and</span> left[index1] &lt;= right[index2]):</span><br><span class="line">      array.append(left[index1])</span><br><span class="line">      index1 += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> index1 == len1 <span class="keyword">or</span> (index2 != len2 <span class="keyword">and</span> right[index2] &lt; left[index1]):</span><br><span class="line">      array.append(right[index2])</span><br><span class="line">      index2 += <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> array</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(array) == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> array</span><br><span class="line">  mid = <span class="built_in">len</span>(array) // <span class="number">2</span></span><br><span class="line">  left = divide(array[:mid])</span><br><span class="line">  right = divide(array[mid:])</span><br><span class="line">  array = merge(left,right)</span><br><span class="line">  <span class="keyword">return</span> array</span><br></pre></td></tr></table></figure><h2 id="3-找到最大子数组">3. 找到最大子数组</h2><p>最大子数组指的是子数组的值相加最大，根据分治策略分为以下三步：</p><ol><li>分解：可以从中间将当前数组分为左子数组和右子数组递归，此外还有一种情况是跨域中间的子数组</li><li>解决：如果当前数组的长度是1，直接返回值，此外还需要计算跨域中间的子数组的最大值</li><li>合并：选取左子数组、右子数组和跨越中间的子数组的最大值</li></ol><div class="note warning flat"><p>这道题的特殊性在于：<strong>有一种情况是不能递归分解的，需要在当下直接解决</strong></p></div><p>递归式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n) = 2T(n/2) + \Theta(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">sum1,sum2,sum3</span>):</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">max</span>(sum1,sum2,sum3)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">crossmid</span>(<span class="params">array,mid</span>):</span><br><span class="line">  <span class="comment"># 初始总值是中间值，左边从mid-1开始遍历，右边从mid+1开始遍历</span></span><br><span class="line">  l_index,r_index = mid-<span class="number">1</span>,mid+<span class="number">1</span></span><br><span class="line">  leftsum,rightsum = -<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>),-<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">  maxsum = array[mid]</span><br><span class="line">  <span class="comment"># 计算从中间开始往左边/右边连续的和的最大值</span></span><br><span class="line">  cursum = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> l_index != -<span class="number">1</span>:</span><br><span class="line">    cursum += array[l_index]</span><br><span class="line">    <span class="keyword">if</span> cursum &gt; leftsum:</span><br><span class="line">      leftsum = cursum</span><br><span class="line">    l_index -= <span class="number">1</span></span><br><span class="line">  cursum = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> r_index != <span class="built_in">len</span>(array):</span><br><span class="line">    cursum += array[r_index]</span><br><span class="line">    <span class="keyword">if</span> cursum &gt; rightsum:</span><br><span class="line">      rightsum = cursum</span><br><span class="line">    r_index += <span class="number">1</span></span><br><span class="line">  <span class="comment"># 只有左边/右边的值大于0才可能让总值变大</span></span><br><span class="line">  <span class="keyword">if</span> leftsum &gt; <span class="number">0</span>:</span><br><span class="line">    maxsum += leftsum</span><br><span class="line">  <span class="keyword">if</span> rightsum &gt;<span class="number">0</span>:</span><br><span class="line">    maxsum += rightsum</span><br><span class="line">  <span class="keyword">return</span> maxsum</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(array) == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> array[<span class="number">0</span>]</span><br><span class="line">  mid = <span class="built_in">len</span>(array) // <span class="number">2</span></span><br><span class="line">  l_sum = divide(array[:mid])</span><br><span class="line">  r_sum = divide(array[mid:])</span><br><span class="line">  m_sum = crossmid(array,mid)</span><br><span class="line">  <span class="built_in">sum</span> = merge(l_sum,r_sum,m_sum)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line">array = [<span class="number">13</span>,-<span class="number">3</span>,-<span class="number">25</span>,<span class="number">20</span>,-<span class="number">3</span>,-<span class="number">16</span>,-<span class="number">23</span>,<span class="number">18</span>,<span class="number">20</span>,-<span class="number">7</span>,<span class="number">12</span>,-<span class="number">5</span>,-<span class="number">22</span>,<span class="number">15</span>,-<span class="number">4</span>,<span class="number">7</span>]</span><br><span class="line">maxsum = divide(array)</span><br></pre></td></tr></table></figure><h2 id="4-矩阵乘法的Strassn算法">4. 矩阵乘法的Strassn算法</h2><div class="note warning flat"><p>这里要求两个矩阵都是nxn矩阵，而且n都是2的n次幂，即保证n/2是整数</p></div><p>Strassen算法的基本步骤如下：</p><ol><li><strong>分解矩阵</strong>：</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>12</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>A</mi><mn>22</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"/><mi>B</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>B</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>B</mi><mn>12</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>B</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>B</mi><mn>22</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">A = \begin{pmatrix}A_{11} &amp; A_{12} \\A_{21} &amp; A_{22}\end{pmatrix}, \quadB = \begin{pmatrix}B_{11} &amp; B_{12} \\B_{21} &amp; B_{22}\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><ol start="2"><li><strong>计算中间值</strong></li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>P</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>A</mi><mn>11</mn></msub><mo>×</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mn>12</mn></msub><mo>−</mo><msub><mi>B</mi><mn>22</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>P</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>11</mn></msub><mo>+</mo><msub><mi>A</mi><mn>12</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>B</mi><mn>22</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>P</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>21</mn></msub><mo>+</mo><msub><mi>A</mi><mn>22</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>B</mi><mn>11</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>P</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>A</mi><mn>22</mn></msub><mo>×</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mn>21</mn></msub><mo>−</mo><msub><mi>B</mi><mn>11</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>P</mi><mn>5</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>11</mn></msub><mo>+</mo><msub><mi>A</mi><mn>22</mn></msub><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mn>11</mn></msub><mo>+</mo><msub><mi>B</mi><mn>22</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>P</mi><mn>6</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>12</mn></msub><mo>−</mo><msub><mi>A</mi><mn>22</mn></msub><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mn>21</mn></msub><mo>+</mo><msub><mi>B</mi><mn>22</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>P</mi><mn>7</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>A</mi><mn>11</mn></msub><mo>−</mo><msub><mi>A</mi><mn>21</mn></msub><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mn>11</mn></msub><mo>+</mo><msub><mi>B</mi><mn>12</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align*}P_1 &amp;= A_{11} \times (B_{12} - B_{22}) \\P_2 &amp;= (A_{11} + A_{12}) \times B_{22} \\P_3 &amp;= (A_{21} + A_{22}) \times B_{11} \\P_4 &amp;= A_{22} \times (B_{21} - B_{11}) \\P_5 &amp;= (A_{11} + A_{22}) \times (B_{11} + B_{22}) \\P_6 &amp;= (A_{12} - A_{22}) \times (B_{21} + B_{22}) \\P_7 &amp;= (A_{11} - A_{21}) \times (B_{11} + B_{12})\end{align*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.5em;vertical-align:-5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5em;"><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><ol start="3"><li><strong>组合结果</strong></li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mn>12</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mn>22</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mn>5</mn></msub><mo>+</mo><msub><mi>P</mi><mn>4</mn></msub><mo>−</mo><msub><mi>P</mi><mn>2</mn></msub><mo>+</mo><msub><mi>P</mi><mn>6</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>+</mo><msub><mi>P</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mn>3</mn></msub><mo>+</mo><msub><mi>P</mi><mn>4</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>+</mo><msub><mi>P</mi><mn>5</mn></msub><mo>−</mo><msub><mi>P</mi><mn>3</mn></msub><mo>−</mo><msub><mi>P</mi><mn>7</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{pmatrix}C_{11} &amp; C_{12} \\C_{21} &amp; C_{22}\end{pmatrix} =\begin{pmatrix}P_5 + P_4 - P_2 + P_6 &amp; P_1 + P_2 \\P_3 + P_4 &amp; P_1 + P_5 - P_3 - P_7\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>核心：<strong>减少了一次矩阵乘法，增加常数次矩阵加法</strong>，以此实现更小的时间复杂度，根据分治策略分为以下三步：</p><ol><li>分解：将每个大矩阵分成四个角的子矩阵</li><li>解决：如果两个矩阵是1x1的，则直接求矩阵成绩</li><li>合并：按照Stassen算法将7个解组合成四个角的子矩阵，最后组合成一个结果矩阵</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">P1,P2,P3,P4,P5,P6,P7</span>):</span><br><span class="line">  C11 = P5 + P4 - P2 + P6</span><br><span class="line">  C12 = P1 + P2</span><br><span class="line">  C21 = P3 + P4</span><br><span class="line">  C22 = P5 - P3 - P7 + P1</span><br><span class="line">  <span class="comment"># 水平拼接</span></span><br><span class="line">  top = np.hstack((C11, C12))</span><br><span class="line">  bottom = np.hstack((C21, C22))</span><br><span class="line">  <span class="comment"># 竖直拼接</span></span><br><span class="line">  C = np.vstack((top, bottom))</span><br><span class="line">  <span class="keyword">return</span> C</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">A,B,n</span>):</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(A) == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> A * B</span><br><span class="line">  mid = n // <span class="number">2</span></span><br><span class="line">  A11,A12,A21,A22 = A[:mid,:mid],A[:mid,mid:],A[mid:,:mid],A[mid:,mid:]</span><br><span class="line">  B11,B12,B21,B22 = B[:mid,:mid],B[:mid,mid:],B[mid:,:mid],B[mid:,mid:]</span><br><span class="line">  P1 = divide(A11, B12 - B22, mid)</span><br><span class="line">  P2 = divide(A11 + A12, B22, mid)</span><br><span class="line">  P3 = divide(A21 + A22, B11, mid)</span><br><span class="line">  P4 = divide(A22, B21 - B11, mid)</span><br><span class="line">  P5 = divide(A11 + A22, B11 + B22, mid)</span><br><span class="line">  P6 = divide(A12 - A22, B21 + B22, mid)</span><br><span class="line">  P7 = divide(A11 - A21, B11 + B12, mid)</span><br><span class="line">  C = merge(P1,P2,P3,P4,P5,P6,P7)</span><br><span class="line">  <span class="keyword">return</span> C</span><br><span class="line"></span><br><span class="line">A = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">              [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line">              [<span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>]])</span><br><span class="line">B = np.array([[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">              [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">              [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">              [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">C = divide(A,B,<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(C)</span><br></pre></td></tr></table></figure><h2 id="5-二分查找">5. 二分查找</h2><p>根据分治策略分为以下三步：</p><ol><li>分解：将数组从中间分为左子数组和右子数组</li><li>解决：如果当前数组的长度是1，直接返回数组仅有的元素值</li><li>合并：取左子数组的最大值和右子数组的最大值的较大值返回</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">num1,num2</span>):</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">max</span>(num1,num2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(array) == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> array[<span class="number">0</span>]</span><br><span class="line">  mid = <span class="built_in">len</span>(array) // <span class="number">2</span></span><br><span class="line">  num1 = divide(array[:mid])</span><br><span class="line">  num2 = divide(array[mid:])</span><br><span class="line">  num = merge(num1,num2)</span><br><span class="line">  <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line">array = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line">maxnum = divide(array)</span><br></pre></td></tr></table></figure><h2 id="6-数列的逆序对">6. 数列的逆序对</h2><p>根据分治策略分为以下三步：</p><ol><li>分解：将数组从中间分为左子数组和右子数组</li><li>解决：如果当前数组的长度为1，则返回0，此外还需要计算左数组相较于右数组的逆序对数</li><li>合并：将左子数组的逆序对、右子数组的逆序对、左数组相较于右数组的逆序对数相加</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">num1,num2,num3</span>):</span><br><span class="line">  <span class="keyword">return</span> num1 + num2 + num3</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count</span>(<span class="params">array,mid</span>):</span><br><span class="line">  num = <span class="number">0</span></span><br><span class="line">  l_index = mid - <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> l_index != -<span class="number">1</span>:</span><br><span class="line">    r_index = mid</span><br><span class="line">    <span class="keyword">while</span> r_index != <span class="built_in">len</span>(array):</span><br><span class="line">      <span class="keyword">if</span> array[l_index] &gt; array[r_index]:</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">      r_index += <span class="number">1</span></span><br><span class="line">    l_index -= <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">array</span>):</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(array) == <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">  mid = <span class="built_in">len</span>(array) // <span class="number">2</span></span><br><span class="line">  l_num = divide(array[:mid])</span><br><span class="line">  r_num = divide(array[mid:])</span><br><span class="line">  m_num = count(array,mid)</span><br><span class="line">  <span class="built_in">sum</span> = merge(l_num,r_num,m_num)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line">array = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>]</span><br><span class="line">num = divide(array)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>E-R模型</title>
      <link href="/posts/3f15d095/"/>
      <url>/posts/3f15d095/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-数据库设计">1. 数据库设计</h2><p>数据库设计流程</p><ol><li><strong>需求分析</strong>：与业务人员沟通，了解业务流程和数据需求</li><li><strong>概念设计</strong>：将需求转化为高层次的实体-关系模型</li><li><strong>逻辑设计</strong>：将实体-联系模型转换为关系模式，并规范化关系模式</li><li><strong>物理设计</strong>：选择数据库管理系统，定义存储结构，优化查询性能</li><li>实现与部署</li><li>测试与优化</li><li>维护与迭代</li></ol><p>数据库设计目标：数据完整、冗余少、性能好、安全性高、可维护性高、可扩展性高</p><h2 id="2-实体-联系模型">2. 实体-联系模型</h2><h3 id="2-1-实体（Entity）">2.1 实体（Entity）</h3><p><strong>实体</strong>：现实世界中可区别于所有其他对象的一个“事物”或“对象”</p><p><strong>实体集</strong>：共享相同性质或属性的、具有相同类型的实体的集合</p><p>E-R图表示实体集：一个<strong>矩形</strong>，头部是实体集的名称，剩下是实体集所有属性的名称，其中作为主码的属性被加了下划线</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532296.png" alt=""></p><h3 id="2-2-联系（Relationship）">2.2 联系（Relationship）</h3><p><strong>联系</strong>：实体之间的关联</p><p><strong>联系集</strong>：是相同类型联系的集合</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532295.png" alt=""></p><p>E-R图表示联系集：一个<strong>菱形</strong>，通过<strong>线条</strong>连接到多个不同的实体集</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532294.png" alt=""></p><h3 id="2-3-概念">2.3 概念</h3><p>术语</p><ul><li><strong>参与</strong>：实体集参与联系集R表示实体集之间存在联系R</li><li><strong>度</strong>：参与联系集的实体集数目</li><li><strong>角色表示</strong>：实体在联系中扮演的功能，在E-R图中的<strong>线条上方</strong>标识</li><li><strong>描述性属性</strong>：用于解释/描述联系的特定属性，提供了联系的更多相关信息，通过<strong>虚线</strong>连接一个<strong>矩形</strong>标识</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532293.png" alt=""></p><p>属性类型</p><ul><li><strong>简单</strong>：不能被划分为子部分，例如性别</li><li><strong>复合</strong>：可以被划分为子部分，称为成员属性，例如住址可以被分为市、区、街道、房号</li><li><strong>单值</strong>：只有一个单独的值，例如身份证号</li><li><strong>多值</strong>：可以有多个不同的值，例如手机号</li><li><strong>基</strong>：直接存储在数据库中的原始数据，例如姓名、住址、出生日期</li><li><strong>派生</strong>：值可以从基属性的值派生出来，并不存储，例如年龄可以从出生日期和当前日期推算出来</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532292.png" alt=""></p><h3 id="2-4-映射基数">2.4 映射基数</h3><p>映射基数（mapping cardinality）：表示<strong>一个实体能通过一个联系集关联的其他实体的数量</strong></p><ul><li><strong>一对一（one-to-one）</strong>：A中的一个实体至多与B中的一个实体相关联，B中的一个实体至多与A中的一个实体相关联</li><li><strong>一对多（one-to-many）</strong>：A中的一个实体可以与B中任意数量的实体相关联，B中的一个实体至多与A中的一个实体相关联</li><li><strong>多对一（many-to-one）</strong>：A中的一个实体至多与B中的一个实体相关联，B中的一个实体可以与A中任意数量的实体相关联</li><li><strong>多对多（many-to-many）</strong>：A中的一个实体可以与B中任意数量的实体相关联，同时B中的一个实体可以与A中任意数量的实体相关联</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532291.png" alt=""></p><p>E-R图：<strong>箭头指向的实体表示只能有一个或最多一个</strong></p><ul><li>一对一：一个学生最多只有一个导师，一位导师最多只有一位学生</li><li>一对多：一个学生最多最多有一个导师，但是一个导师可以有多个学生</li><li>多对一：一个学生可以有多个导师，但是一个导师最多有一位学生</li><li>多对多：一个学生可以有多个导师，一个导师也可以有多个学生</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532290.png" alt=""></p><p>自定义基数约束：用<code>l..h</code>的形式表示，其中l表示最小基数，h表示最大基数，可以用<code>*</code>表示没有限制，E-R图中在线段上方标识</p><div class="note success flat"><p>一对一可以表示为：<code>1..1</code><br>一对多可以表示为：<code>1..*</code></p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532288.png" alt=""></p><h3 id="2-5-参与约束">2.5 参与约束</h3><p><strong>全部（total）</strong>：实体集E中的每个实体都<strong>必须参与</strong>到联系集R中的至少一个联系</p><p><strong>部分（partial）</strong>：实体集E中的每个实体可以<strong>选择性地参与</strong>到联系集R中的一个联系</p><p>E-R图：<strong>哪边是必须参与的，哪边就用双线标识</strong>，例如学生必须有一个导师，但不是所有导师都需要有一个学生，因此联系到学生是双线</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532289.png" alt=""></p><h2 id="3-主码">3. 主码</h2><h3 id="3-1-联系集的主码">3.1 联系集的主码</h3><p>E-R图：<strong>联系集R的主码是那些没有被有向线段指向的实体集的主码的并集</strong></p><ul><li>一对一：老师id和学生id任选一个作为联系集的主码</li><li>一对多：学生只能选一个老师，因此学生id可以作为联系集的主码</li><li>多对一：老师只能有一个学生，因此老师id可以作为联系集的主码</li><li>多对多：老师id和学生id的组合作为联系集的主码</li></ul><h3 id="3-2-实体集类型">3.2 实体集类型</h3><table><thead><tr><th>类型</th><th>定义</th><th>E-R图</th></tr></thead><tbody><tr><td>强实体集</td><td>可以独立存在的实体集，它有自己的主键，不需要依赖其他实体集来唯一标识</td><td>单边框矩形</td></tr><tr><td>弱实体集</td><td>不能独立存在的实体集，它依赖于标识性实体集和自己的分辨符属性来唯一标识</td><td>双边框矩形，属性用下划虚线</td></tr></tbody></table><p>标识性实体集：是一个概念，指代弱实体集所依赖的实体集</p><p>标识性联系：弱实体集与标识性实体集之间的关系，用<strong>双边框菱形</strong>表示</p><div class="note warning flat"><p>弱实体集必须参与标识性联系，因此弱实体集到标识性联系是双线标识的</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532287.png" alt=""></p><h3 id="3-3-消除冗余">3.3 消除冗余</h3><p>如果存在两个关系X,Y都有相同属性A，但是A是Y的主码，那么<strong>A在X中就是冗余属性</strong>，应该<strong>设立联系集通过A将X和Y相关联</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532286.png" alt=""></p><h2 id="4-将E-R图转换为关系模式">4. 将E-R图转换为关系模式</h2><h3 id="4-1-流程">4.1 流程</h3><ol><li>转换强实体集<ol><li>为每个强实体集创建一个关系模式</li><li>实体集的属性转换为关系的属性</li><li>实体集的主键转换为关系的主键</li></ol></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532285.png" alt=""></p><ol start="2"><li>转换弱实体集<ol><li>为每个弱实体集创建一个关系模式</li><li>弱实体集的属性转换为关系的属性</li><li>弱实体集的部分键和标识性实体集的主键共同组成关系的主键</li><li>标识性实体集的主键作为外键引入弱实体集的关系中</li></ol></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532284.png" alt=""></p><ol start="3"><li>转换联系集<ol><li>一对一：不需要创建独立的关系模式，将外键添加到查询频率较高的一方</li><li>一对多：不需要创建独立的关系模式，而是将“一”方的实体集的主键作为外键嵌入到“多”方的实体集中</li><li>多对多：建立一个独立的关系模式，包含参与联系的实体集的主键作为外键，同时外键的组合作为新关系的主键</li></ol></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532283.png" alt=""></p><ol start="4"><li>转换复杂属性<ol><li>为复合属性的每个成员属性创建一个单独的属性</li><li>为每个多值属性创建一个新的关系模式，其中包含一个外键引用原实体的主码，以及单独一个多值属性的值</li></ol></li></ol><div class="note success flat"><p>例如主码为<code>id=2233</code>的学生有两个手机号110和119，那么就应该在多值属性的<code>student_phone</code>关系中插入两个元组<code>(2233,110)</code>和<code>(2233,119)</code></p></div><h3 id="4-2-冗余处理">4.2 冗余处理</h3><p><strong>连接弱实体集与其对应的强实体集的联系集的模式是冗余的</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532282.png" alt=""></p><p><strong>如果实体集a在联系集ab中的参与是全部的，那么转换的关系模式a和ab可以合并成单个模式</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532281.png" alt=""></p><div class="note success flat"><p>即使是部分参与，我们也可以通过补空值的方式合并</p></div><h2 id="5-E-R图高级特性">5. E-R图高级特性</h2><h3 id="5-1-特化和概化">5.1 特化和概化</h3><p><strong>特化（Specialization）</strong>：将一个较为通用的实体集细分为多个更具体的实体集，子实体集继承父实体集全部属性，同时也可以拥有自己的属性</p><p><strong>概化（Generalization）</strong>：将一组具有共同特征的实体集归纳为一个更一般的实体集，父实体集包含子实体集所有共同属性</p><p>约束</p><ol><li>不相交约束（disjoint）：子实体集之间是互斥的</li><li>重叠约束（overlappig）：子实体集允许有交集</li><li>完全性约束（total）：父实体集中的每个实体必须属于某个子实体集</li><li>部分性约束（partial）：父实体集中的每个实体可以不属于某个子实体集</li></ol><p>转换关系模式</p><ol><li>为每个高层实体集和底层实体集都创建一个关系模式</li><li>对于每个低层实体集，引用高层实体集的主码作为外码约束，同时也作为主码属性</li></ol><p>E-R图：用一个<strong>空心箭头</strong>从子实体集指向父实体集，又称为<code>ISA</code>联系</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532280.png" alt=""></p><h3 id="5-2-聚集">5.2 聚集</h3><p><strong>聚集（aggregation）</strong>：将联系集本身作为一个整体参与其他联系集</p><p>E-R图：使用一个<strong>矩形</strong>包裹住一个联系和它的参与实体</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532279.png" alt=""></p><h2 id="6-注意事项">6. 注意事项</h2><ol><li><p>当一个实体集的主码需要作为另一个实体集的属性时，应该通过 联系集 来表示这种关系，而不是直接将主码作为属性</p></li><li><p>联系集本身已经隐含了参与实体集的主码属性，因此在设计联系集时，不需要显式声明这些主码属性</p></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532278.png" alt=""></p><ol start="3"><li>如果一个对象可以独立存在，并且有独特的标识和其他附加信息，就应该使用实体集（地址可以定义为实体集，性别年龄应该被定义为属性）</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532276.png" alt=""></p><ol start="4"><li>如果是描述发生在实体间的行为且不关联过多的信息，采用联系集</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532274.png" alt=""></p><ol start="5"><li>如果参与联系的对象总是或大部分只有两个，那么使用二元联系</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532299.png" alt=""></p><h2 id="7-E-R图汇总">7. E-R图汇总</h2><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter6/202410101532297.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高级SQL</title>
      <link href="/posts/68260beb/"/>
      <url>/posts/68260beb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-程序设计语言访问SQL">1. 程序设计语言访问SQL</h2><p>必要性</p><ul><li>SQL并<strong>没有提供通用语言的全部表达能力</strong>，需要通过高级语言C、Java或Python来编写实现</li><li><strong>非声明式动作不能通过SQL实现</strong>，如打印一份报告、与用户实时交互、图形化展示等</li></ul><p>方式</p><ul><li>动态SQL：在程序运行时动态生成和执行SQL语句的技术，通过字符串拼接的方式生成SQL语句，然后通过数据库接口执行</li><li>嵌入SQL：通过预处理器将SQL语句转换为宿主语言的可执行代码</li></ul><p>SQL注入：用户输入可能被直接拼接到SQL语句中，应使用参数化查询或对用户输入进行严格的验证和转义</p><h2 id="2-FUNCTION">2. FUNCTION</h2><p>接受输入参数，<strong>返回一个结果</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 输入系名，返回该系的老师总数</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> dept_count(dept_name <span class="type">varchar</span>(<span class="number">20</span>)) </span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">declare</span> d_count <span class="type">int</span>;</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">into</span> d_count</span><br><span class="line">    <span class="keyword">from</span> instructor</span><br><span class="line">    <span class="keyword">where</span> instructor.dept_name <span class="operator">=</span> dept_count.dept_name</span><br><span class="line">  <span class="keyword">return</span> d_count;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 返回计算结果</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> add_numbers(a <span class="type">int</span>, b <span class="type">int</span>)</span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">return</span> a <span class="operator">+</span> b;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 直接使用</span></span><br><span class="line"><span class="keyword">select</span> dept_count(<span class="string">&#x27;computer science&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> add_numbers(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="3-PROCEDURE">3. PROCEDURE</h2><p>接受输入参数，<strong>执行一系列操作或逻辑</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> add_employee (</span><br><span class="line">    <span class="keyword">in</span> emp_id <span class="type">int</span>,</span><br><span class="line">    <span class="keyword">in</span> emp_name <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="keyword">in</span> emp_salary <span class="type">decimal</span>(<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> employees (id, name, salary)</span><br><span class="line">    <span class="keyword">values</span> (emp_id, emp_name, emp_salary);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- call使用</span></span><br><span class="line"><span class="keyword">call</span> add_employee(<span class="number">101</span>, <span class="string">&#x27;John Doe&#x27;</span>, <span class="number">50000.00</span>);</span><br></pre></td></tr></table></figure><h2 id="4-TRIGGER">4. TRIGGER</h2><p>在特定的事件发生时，<strong>自动执行预定义的语句</strong></p><ul><li>触发事件：触发器在什么事件发生时被激活（INSERT、UPDATE 或 DELETE）</li><li>触发时间：触发器在事件之前还是事件之后执行（BEFORE、AFTER）</li><li>触发动作：触发器执行的具体操作</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在插入新员工记录之前，自动生成员工 ID</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> before_employee_insert</span><br><span class="line">before <span class="keyword">insert</span> <span class="keyword">on</span> employees</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">set</span> new.employee_id <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(employee_id) <span class="operator">+</span> <span class="number">1</span> <span class="keyword">from</span> employees);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h2 id="5-程序结构">5. 程序结构</h2><h3 id="5-1-WHILE">5.1 WHILE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHILE 布尔表达式 DO</span><br><span class="line">  语句序列;</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br></pre></td></tr></table></figure><h3 id="5-2-REPEAT">5.2 REPEAT</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REPEAT </span><br><span class="line">  语句序列;</span><br><span class="line">UNTIL 布尔表达式</span><br><span class="line"><span class="keyword">END</span> REPEAT;</span><br></pre></td></tr></table></figure><h3 id="5-3-IF">5.3 IF</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IF 布尔表达式 <span class="keyword">THEN</span></span><br><span class="line">    语句序列;</span><br><span class="line">ELSEIF 布尔表达式 <span class="keyword">THEN</span></span><br><span class="line">    语句序列;</span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">    语句序列;</span><br><span class="line"><span class="keyword">END</span> IF;</span><br></pre></td></tr></table></figure><h3 id="5-4-CASE">5.4 CASE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span></span><br><span class="line">  <span class="keyword">WHEN</span> 布尔表达式 <span class="keyword">THEN</span> 语句序列;</span><br><span class="line">  <span class="keyword">WHEN</span> 布尔表达式 <span class="keyword">THEN</span> 语句序列;</span><br><span class="line">  <span class="keyword">ELSE</span> 语句序列;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">CASE</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无线网络</title>
      <link href="/posts/6938a174/"/>
      <url>/posts/6938a174/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-无线网络">1. 无线网络</h2><h3 id="1-1-概念">1.1 概念</h3><p><strong>无线站点（wireless host）</strong>：运行应用程序的端系统设备，可以是智能手机、平板电脑、物联网设备等，可以移动也可以不移动</p><p><strong>无线链路（wireless link）</strong>：无线站点通过无线链路连接到基站或其他无线站点，主要特性包括<strong>传播速率（数据传输速度）<strong>和</strong>覆盖区域（信号可覆盖的范围）</strong></p><p><strong>基站（base station）</strong>：负责在无线网络中与无线站点进行数据的发送和接收，如蜂窝网络中的<strong>蜂窝塔</strong>或802.11无线局域网中的<strong>接入点</strong></p><p><strong>关联</strong>：无线站点在基站的无线覆盖范围内，并通过该基站进行与更大网络之间的数据中继</p><p><strong>切换（handoff/handover）</strong>：在移动设备移动过程中，网络系统将设备的连接从一个基站切换到另一个基站的过程</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811313.png" alt=""></p><h3 id="1-2-模式">1.2 模式</h3><table><thead><tr><th>模式</th><th>架构</th><th>特点</th><th>适用</th></tr></thead><tbody><tr><td>基础设施（infrastructure）</td><td>无线站点通过基站与网络连接，基站充当中心节点，负责管理和转发数据</td><td>扩展性高，可以增加基站来扩展网络覆盖范围</td><td>家庭网络、校园网络、企业环境和公共场所，提供稳定的无线连接</td></tr><tr><td>自组织网络（ad hoc network）</td><td>无线站点之间通过无线链路直接通信，不需要中心节点或接入点</td><td>灵活性高，节点可以自由加入或离开网络</td><td>灾难救援、军事通信、短期活动，无需固定基础设施，易于快速部署</td></tr></tbody></table><table><thead><tr><th>分类</th><th>结构</th><th>特点</th><th>例子</th></tr></thead><tbody><tr><td>单跳无基础设施</td><td>所有无线站点直接彼此通信</td><td>小范围</td><td>蓝牙网络</td></tr><tr><td>单跳有基础设施</td><td>无线站点通过基站与其他无线站点通信</td><td>高扩展</td><td>家庭WiFi</td></tr><tr><td>多跳无基础设施</td><td>无线站点通过多个中间节点与其他无线站点通信</td><td>自组织</td><td>车载网络</td></tr><tr><td>多跳有基础设施</td><td>无线站点通过多个基站与其他无线站点通信</td><td>大范围</td><td>4G/5G，企业WiFi</td></tr></tbody></table><h2 id="2-无线链路">2. 无线链路</h2><h3 id="2-1-效率">2.1 效率</h3><table><thead><tr><th>特征</th><th>描述</th><th>因素</th></tr></thead><tbody><tr><td>递减的信号强度</td><td>电磁波在传播过程中，其强度会随着距离的增加而递减，又称为路径损耗（path loss）</td><td>距离、介质、频率</td></tr><tr><td>来自其他源的干扰</td><td>在同一频段内，来自其他信号源的电磁波对目标信号形成干扰</td><td>频段重叠、环境噪声、多用户环境</td></tr><tr><td>多路径传播</td><td>电磁波经过反射、折射或散射，导致接收方收到来自不同路径的多个信号</td><td>位置的动态变化、物理环境</td></tr></tbody></table><p><strong>信噪比（Signal-to-Noise Ratio, SNR）</strong>：收到的信号和噪声强度的相对测量，单位是分贝（dB），<strong>SNR越大信号质量越好</strong></p><p><strong>比特差错率（Bit Error Rate, BER）</strong>：接收方收到的有错传输比特的概率</p><p><strong>比特传输速率（Bit Rate, BR）</strong>：单位时间内传输的比特数量，单位是每秒传输比特数（bps），不同的<strong>调制技术</strong>有不同的数据传输效率</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811311.png" alt=""></p><ul><li><strong>对于给定的调制技术，SNR越高，BER越低</strong>：较高的SNR能提供更清晰的信号，使得解调过程中的噪声影响减小</li><li><strong>对于给定的SNR，调制技术的BR越高，BER越高</strong>：较高的BR能够传输更多比特，但同时出错的概率也会越大</li><li><strong>自适应调制（Adaptive Modulation）</strong>：物理层可以根据当前信道条件动态选择适合的调制技术</li></ul><h3 id="2-2-CDMA">2.2 CDMA</h3><p><strong>码片多址（Code Division Multiple Access, CDMA）</strong>：是一种无线通信技术，允许多个用户在同一频段上同时传输数据</p><ol><li>将每个<strong>比特时间</strong>再划分为 m 个短的时间槽，称为<strong>码片（chip）</strong></li><li>每个节点被指派一个唯一的 m 位码片序列</li><li>每个节点发送比特1，则发送它的码片序列，发送比特0，则发送它的码片序列的反码</li><li>来自不同节点的码片序列进行线性相加得到比特序列，实现同时传输</li><li>接收方使用节点相同码片序列进行解码，从而提取来自不同用户的数据</li></ol><div class="note warning flat"><p>实现CDMA的前提：</p><ol><li>码片序列切换的速度要远远大于比特序列到达的速率</li><li>码片序列之间是相互正交的</li></ol></div><p>数学原理：<strong>规格化内积</strong>，用于衡量两个向量的相似性</p><ul><li>码片序列a和码片序列a的规格化内积是1（完全正相关）</li><li>码片序列a和码片反序列a‘的的规格化内积是-1（完全负相关）</li><li>码片序列a和与其正交的码片序列b的规格化内积是0（完全不相关）</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811309.png" alt=""></p><div class="note success flat"><p>码片序列为：<br>A：(-1 -1 -1 +1 +1 -1 +1 +1)<br>B：(-1 -1 +1 -1 +1 +1 +1 -1)<br>C：(-1 +1 -1 +1 +1 +1 -1 -1)<br>D：(-1 +1 -1 -1 -1 -1 +1 -1)<br>假设发送的比特序列是：<br>X：(+1 -3 +3 -1 +1 +1 +1 +1)<br>可以得到：<br>A：1/8(-1+3-3-1+1-1+1+1)=0，表示A没有发送数据<br>B：1/8(-1+3+3+1+1+1+1-1)=1，表示B发送比特1<br>C：1/8(-1-3-3-1+1+1-1-1)=-1，表示C发送比特0<br>D：1/8(-1-3-3+1-1-1+1-1)=-1，表示D发送比特0</p></div><h2 id="3-WiFi">3. WiFi</h2><p><strong>WiFi（Wireless Fidelity）</strong>：无线保真技术，是一种基于 IEEE 802.11 标准的无线局域网技术</p><ul><li><strong>接入点（Access Point, AP）</strong>：是无线站点接入互联网的接口</li><li><strong>基本服务集（Basic Service Set, BSS）</strong>：是 WiFi 网络的最小组成单元，由一个 AP 和与其关联的无线站点组成</li><li><strong>关联（Association）</strong>：是无线站点与接入点之间建立的一条虚拟链路，只有成功关联的站点才能通过 AP 发送和接收数据帧</li><li><strong>信道号（channel number）</strong>：无线频段被分为多条信道，当且仅当<strong>相隔4个信道</strong>时传输才不会重叠，WiFi 工作在 2.4GHz 和 5GHz 两个频段</li><li><strong>服务集标识符（Service Set Identifier, SSID）</strong>：无线网络的名称，用户通过 SSID 选择并连接到无线网络</li></ul><div class="note warning flat"><p>一个 AP 可以提供多个 WiFI，但是一个 BSS 只能对应一个 WiFi</p></div><p><strong>WiFi 工作原理</strong></p><ol><li>AP 通过无线电波广播 WiFi 信号</li><li>无限站点扫描可用的 SSID，并选择目标网络进行连接</li><li>无限站点发送连接请求，AP 验证无限站点身份，无限站点与 AP 建立连接，通过协议分配 IP 地址</li><li>无限站点通过无线电波向 AP 传输数据，AP 在无线网络和有线网络之间转发数据</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811307.png" alt=""></p><p>无线站点与AP：</p><ul><li>如何知晓：<strong>被动监听</strong>或<strong>主动探测</strong></li><li>如何选择：<strong>信号强度（RSSI）<strong>或</strong>负载情况</strong></li><li>如何关联：无限站点发送<strong>关联请求帧</strong>，AP返回<strong>关联响应帧</strong></li></ul><h2 id="4-802-11">4. 802.11</h2><h3 id="4-1-隐藏终端">4.1 隐藏终端</h3><p>在无线网络中，每个无线站点之间可能无法直接检测到彼此的存在，导致它们同时发送数据，引发信道冲突和性能下降</p><ul><li>无线信号范围有限：设备的通信范围有限，无法覆盖所有其他设备</li><li>非对称传输功率：设备的传输功率不同，导致通信范围不对称</li><li>物理障碍：墙壁、建筑物等障碍物阻挡信号，进一步限制通信范围</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811310.png" alt=""></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811305.png" alt=""></p><h3 id="4-2-RTS-CTS">4.2 RTS/CTS</h3><p>原理</p><ul><li>RTS（Request to Send）：是无线站点发送数据前向接入点单播的请求帧，向接入段请求/预约信道的使用权</li><li>CTS（Clear to Send）：是接入点在收到 RTS 后广播的确认帧，通知请求的无线站点信道可用，通知其他站点信道将被占用，避免冲突</li><li>分布式帧间间隔（Distributed Inter-Frame Space, DIFS）：发送<strong>RTS、数据</strong>前需要等待的最小时间间隔，用于确保信道长时间处于空闲，而不是瞬时空闲，<strong>最大程度避免可能的碰撞</strong></li><li>短帧间间隔（Short Inter-Frame Space,SIFS）：发送<strong>CTS、ACK</strong>前需要等待的最小时间间隔，确保在发送方能最快发送关键帧的前提下，接收方有足够的时间来处理关键帧</li></ul><p>流程</p><ol><li>站点检测信道空闲，等待 DIFS</li><li>如果等待 DIFS 后信道繁忙，进入退避机制</li><li>如果等待 DIFS 后信道空闲，发送 RTS 帧</li><li>AP 收到 RTS 帧，等待 SIFS，发送 CTS 帧</li><li>站点收到 CTS 帧，等待 SIFS，发送数据帧</li><li>AP 收到数据帧，等待 SIFS，发送 ACK 帧</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811304.png" alt=""></p><h3 id="4-3-帧结构">4.3 帧结构</h3><p>帧结构</p><table><thead><tr><th>字段</th><th>长度/字节</th><th>描述</th></tr></thead><tbody><tr><td>帧控制</td><td>2</td><td>用于区分帧</td></tr><tr><td>持续期</td><td>2</td><td>表示该帧和接收ACK帧所需的时间，用于RTS/CTS的机制</td></tr><tr><td>目的地址</td><td>6</td><td>接收设备的MAC地址</td></tr><tr><td>源地址</td><td>6</td><td>发送设备的MAC地址</td></tr><tr><td>BSSID</td><td>6</td><td>BSS接入路由器的MAC地址</td></tr><tr><td>序号控制</td><td>2</td><td>帧的序列号，用于排序和重组</td></tr><tr><td>有效载荷</td><td>0-2312</td><td>实际要发送的数据，通常是IP数据报或ARP分组</td></tr><tr><td>CRC</td><td>4</td><td>循环冗余校验码，用于检测帧在传输过程中的错误</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811302.png" alt=""></p><p>帧控制</p><table><thead><tr><th>字段</th><th>长度/比特</th><th>描述</th></tr></thead><tbody><tr><td>协议版本</td><td>2</td><td>通常为0表示IEEE 802.11</td></tr><tr><td>类型</td><td>2</td><td>指示主要类型：管理帧、控制帧或数据帧</td></tr><tr><td>子类型</td><td>4</td><td>进一步细分帧的类型，比如关联请求/响应，RTS/CTS等</td></tr><tr><td>到AP</td><td>1</td><td>指示当前帧是否发往AP</td></tr><tr><td>从AP</td><td>1</td><td>指示当前帧是否来自AP</td></tr><tr><td>更多标识</td><td>1</td><td>在分片传输中使用，用于告知接收方，后续还有更多片段需要接收</td></tr><tr><td>重试</td><td>1</td><td>表示当前帧是一个重传帧，用于确保可靠传输</td></tr><tr><td>功率管理</td><td>1</td><td>指示设备是否处于功率节省模式</td></tr><tr><td>更多数据</td><td>1</td><td>在流量控制中使用，告诉接收方是否还有更多数据待发送</td></tr><tr><td>WEP</td><td>1</td><td>指示当前帧是否使用了WEP加密</td></tr><tr><td>保留</td><td>1</td><td>供将来使用，通常设置为0</td></tr></tbody></table><h3 id="4-4-相同子网的移动性">4.4 相同子网的移动性</h3><ol><li>信号强度评估：检测到AP1的RSSI越来越小，AP2的RSSI值越来越大</li><li>切换连接：向AP1发送一个<strong>去关联请求</strong>，向AP2发送一个<strong>关联请求</strong></li><li>会话保持：如果新的BSS和旧的BSS都属于同一子网，那么站点会通过DHCP<strong>续租原先的IP地址</strong>，并<strong>维持正在进行的会话</strong></li><li>更新表项：AP2会广播一个以太网帧，更新交换机/路由器以通告站点连接至新AP</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811301.png" alt=""></p><h3 id="4-5-高级特色">4.5 高级特色</h3><table><thead><tr><th>特色</th><th>描述</th></tr></thead><tbody><tr><td>快速漫游</td><td>允许用户在不同接入点之间迅速切换而不会中断连接</td></tr><tr><td>速率自适应</td><td>根据当前和近期的信道特点来选择合适的物理层的调制技术，提高数据传输的可靠性和效率</td></tr><tr><td>功率管理</td><td>接入点在没有帧要发送和接收时能够进入低功耗/睡眠状态，从而节省能源</td></tr></tbody></table><h2 id="5-蓝牙">5. 蓝牙</h2><p><strong>蓝牙（Bluetooth）</strong>：是一种<strong>短距离低功耗无线通信</strong>技术，又被称为<strong>无线个人区域网络（Wireless Personal Area Network,WPAN）<strong>和</strong>微微网（piconet）</strong>，工作在<strong>2.4GHz</strong>工业、科学和医疗频段，与Wi-Fi等其他无线技术共享同一频段</p><p><strong>跳频扩频（Frequency Hopping Spread Spectrum,FHSS）</strong>：以<strong>固定</strong>的时隙625微秒，发送方和接收方在79个信道频率之间按照预定的跳频序列进行<strong>快速同步切换</strong>，使得信号能够在多个频段中扩展</p><ul><li><strong>抗干扰</strong>：由于信号在多个频率上分布，因此如果某些频率受到干扰，数据仍可以通过其他未受影响的频率传输，从而显著降低通信失败的概率</li><li><strong>安全</strong>：由于频率不断变化，攻击者难以锁定信号传输路径，从而提高了通信的安全性</li><li><strong>多设备</strong>：由于不同设备使用不同的跳频序列，从而允许多个设备在相同时间内使用不同频段工作而不互相干扰</li></ul><p>自组织性</p><table><thead><tr><th>设备</th><th>功能</th></tr></thead><tbody><tr><td>主控设备</td><td>负责控制和管理蓝牙网络，发起连接和数据传输</td></tr><tr><td>客户设备</td><td>响应主设备的请求，与主设备进行数据交换</td></tr><tr><td>寄放设备</td><td>处于休眠状态，不与主设备通信，保持配对信息以便未来连接</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter7/202410091811299.png" alt=""></p><p>流程</p><ol><li><strong>邻居发现（Neighbor Discovery）</strong><ol><li>主控设备广播32条<strong>询问信号</strong>，每条都在不同的频道上，并重复传输序列128次</li><li>客户设备在它选择的频道上监听，一旦监听到询问信号，客户设备会在隔一个随机时间量后主动发送<strong>响应信号</strong></li><li>主控设备接收到响应信号后，会更新其设备列表，显示所有发现的可连接设备</li></ol></li><li><strong>蓝牙寻呼（Bluetooth Paging）</strong><ol><li>主控设备选定客户设备，发送<strong>寻呼信号</strong>，通知客户要使用的跳频模式以及时钟信息</li><li>客户设备接收到寻呼信号后，回复<strong>响应信号</strong></li><li>主控设备接收到响应信号后，将使用之前指定的跳频模式与客户设备进行通信</li></ol></li></ol><div class="note success flat"><p>iPhone连接AirPods，iPhone就是主控设备</p><ul><li>邻居发现阶段允许iPhone识别周围的AirPods，并将其标记为寄放设备</li><li>用户在iPhone的蓝牙列表中选择连接AirPods</li><li>蓝牙寻呼阶段允许iPhone连接AirPods，使AirPods成为客户设备并开始进行数据传输</li></ul></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenGL：纹理</title>
      <link href="/posts/287384f0/"/>
      <url>/posts/287384f0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-什么是纹理？">1. 什么是纹理？</h2><p><strong>纹理（Texture）</strong>：是一个<strong>2D图片</strong>，可以<strong>无缝折叠贴合到物体表面</strong>，用来添加物体的细节</p><p><strong>纹理坐标（Texture Coordinate）</strong>：每个顶点可以绑定一个纹理坐标，用来标明纹理图片上的<strong>哪个部分会被采样到该顶点</strong>上</p><ul><li>2D纹理坐标通常用<code>(s,t)</code>表示</li><li>纹理坐标起始于(0,0)即<strong>纹理图片的左下角</strong>, 终止于(1,1)即<strong>纹理图片的右上角</strong></li><li><strong>片段着色器</strong>会对纹理坐标进行<strong>插值计算</strong>，得到片段的纹理坐标</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> texCoord[] = &#123;</span><br><span class="line">  <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// 左上角</span></span><br><span class="line">  <span class="number">1.0f</span>, <span class="number">0</span>,<span class="number">0</span>f, <span class="comment">// 右下角</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">1.0f</span>, <span class="comment">// 上中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951528.png" alt=""></p><h2 id="2-纹理环绕方式">2. 纹理环绕方式</h2><table><thead><tr><th>环绕方式</th><th>描述</th></tr></thead><tbody><tr><td>GL_REPEAT</td><td>重复纹理图形，是默认行为</td></tr><tr><td>GL_MIRRORED_REPEAT</td><td>重复纹理图形，但是会镜像翻转纹理</td></tr><tr><td>GL_CLAMP_TO_EDGE</td><td>对超出的纹理坐标会重复纹理边缘，产生一种边缘被拉伸的效果</td></tr><tr><td>GL_CLAMP_TO_BORDER</td><td>对超出的纹理坐标会使用用户指定的边缘颜色</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951527.png" alt=""></p><p>绑定纹理环绕方式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 镜像反转重复</span></span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);</span><br><span class="line"><span class="comment">// 使用边缘颜色：需要传递一个颜色数组作为参数</span></span><br><span class="line"><span class="type">float</span> borderColor[] = &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;;</span><br><span class="line"><span class="built_in">glTexParameterfv</span>(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, borderColor);</span><br></pre></td></tr></table></figure><h2 id="3-纹理过滤">3. 纹理过滤</h2><p><strong>纹理过滤（Texture Filtering）</strong>：当纹理的分辨率和显示的分辨率不一致的时候，需要对纹理像素进行过滤，从而得到显示像素颜色值</p><div class="note warning flat"><p>纹理坐标是连续值（可以取0到1内任何float值），纹理像素是离散值（可以取分辨率任何一个点）</p></div><table><thead><tr><th>方式</th><th>描述</th><th>图像</th></tr></thead><tbody><tr><td>邻近过滤（GL_NEAREST）</td><td>选择距离中心点最接近纹理坐标的像素颜色，是默认过滤方式</td><td>颗粒状图案</td></tr><tr><td>线性过滤（GL_LINEAR）</td><td>基于纹理坐标附近的纹理像素，计算出一个插值，距离坐标越近的颜色贡献越大</td><td>平滑图案，视觉效果更好</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951526.png" alt=""></p><h2 id="4-多级渐远纹理">4. 多级渐远纹理</h2><p>挑战：显示图像中有一些物体距离观察者远而有一些物体距离观察者近，但是它们都具有相同的纹理分辨率并采取一样的纹理过滤方式，这会使得距离观察者近的物体很清晰但距离观察者远的物体很模糊</p><p><strong>多级渐远纹理（Mipmap）</strong>：它会自动生成不同级别的纹理图像，下一级的纹理图像分辨率是上一级纹理图像分辨率的二分之一，OpenGL会<strong>根据物体距离观察者的距离自动选择合适的纹理图像</strong>来进行纹理过滤</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951525.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成多级渐远纹理</span></span><br><span class="line"><span class="built_in">glGenerateMipmap</span>(GL_TEXTURE_2D);</span><br></pre></td></tr></table></figure><table><thead><tr><th>过滤方式</th><th>描述</th></tr></thead><tbody><tr><td>GL_NEAREST_MIPMAP_NEAREST</td><td>使用最邻近的多级渐远纹理来匹配像素大小，并使用邻近插值进行纹理采样</td></tr><tr><td>GL_LINEAR_MIPMAP_NEAREST</td><td>使用最邻近的多级渐远纹理级别，并使用线性插值进行采样</td></tr><tr><td>GL_NEAREST_MIPMAP_LINEAR</td><td>在两个最匹配像素大小的多级渐远纹理之间进行线性插值，使用邻近插值进行采样</td></tr><tr><td>GL_LINEAR_MIPMAP_LINEAR</td><td>在两个邻近的多级渐远纹理之间使用线性插值，并使用线性插值进行采样</td></tr></tbody></table><h2 id="5-加载纹理数据">5. 加载纹理数据</h2><p>载入图像：利用<code>stb_image.h</code>单头文件图像加载库，并利用<code>stbi_load</code>函数获取图像数据：将图形的宽度、高度和颜色通道数填充进<code>width、height、nrChannels</code>中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> width, height, nrChannels;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> *data = <span class="built_in">stbi_load</span>(<span class="string">&quot;image_path&quot;</span>, &amp;width, &amp;height, &amp;nrChannels, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><mark class="hl-label orange">生成纹理对象</mark> <ul><li>第一个参数：指定纹理对象，这里是指定绑定在<code>GL_TEXTURE_2D</code>的纹理对象</li><li>第二个参数：指定多级渐远纹理的级别，0表示基本级别</li><li>第三个参数：把纹理储存为何种格式，这里存储为RGB值</li><li>第四个参数：纹理的宽度</li><li>第五个参数：纹理的高度</li><li>第六个参数：设置为0，历史遗留问题</li><li>第七个参数：定义了原始图像的格式，这里是RGB值</li><li>第八个参数：定义了原始图像的数据类型，这里是unsigned byte数据类型</li><li>第九个参数：先前载入的纹理图像的数据</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glTexImage2D</span>(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGB, width, height, <span class="number">0</span>, GL_RGB, GL_UNSIGNED_BYTE, data);</span><br></pre></td></tr></table></figure><h2 id="6-应用纹理">6. 应用纹理</h2><ul><li>片段着色器利用uniform获取纹理图像</li><li><strong>采样器（sampler）</strong>：是一个供纹理对象使用的<strong>内建数据类型</strong>，以<strong>纹理类型作为后缀</strong></li><li><code>vec4 texture(sampler2D sampler, vec2 coord);</code>：对纹理进行采样，返回一个vec4类型的颜色值</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 片段着色器</span></span><br><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line">in vec3 ourColor;</span><br><span class="line">in vec2 TexCoord;</span><br><span class="line">out vec4 FragColor;</span><br><span class="line">uniform sampler2D ourTexture;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  FragColor = <span class="built_in">texture</span>(ourTexture, TexCoord) * <span class="built_in">vec4</span>(ourColor, <span class="number">1.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-纹理单元">7. 纹理单元</h2><p><strong>纹理单元（Texture Unit）</strong>：着色器需要访问纹理单元来获得纹理图像数据</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 生成纹理对象1</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> texture1;</span><br><span class="line"><span class="built_in">glGenTextures</span>(<span class="number">1</span>, &amp;texture1);</span><br><span class="line"><span class="comment">// 2. 绑定纹理对象1</span></span><br><span class="line"><span class="built_in">glBindTexture</span>(GL_TEXTURE_2D, texture1);</span><br><span class="line"><span class="comment">// 3. 为纹理对象1设置环绕方式</span></span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</span><br><span class="line"><span class="comment">// 4. 为纹理对象1设置过滤方式</span></span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);</span><br><span class="line"><span class="built_in">glTexParameteri</span>(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</span><br><span class="line"><span class="comment">// 5. 为纹理对象1加载纹理数据</span></span><br><span class="line"><span class="type">int</span> width, height, nrChannels;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> *data = <span class="built_in">stbi_load</span>(<span class="string">&quot;path_to_img&quot;</span>, &amp;width, &amp;height, &amp;nrChannels, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 6. 生成纹理对象1的纹理图像</span></span><br><span class="line"><span class="keyword">if</span> (data) &#123;</span><br><span class="line">  <span class="built_in">glTexImage2D</span>(GL_TEXTURE_2D, <span class="number">0</span>, GL_RGB, width, height, <span class="number">0</span>, GL_RGB, GL_UNSIGNED_BYTE, data);</span><br><span class="line">  <span class="built_in">glGenerateMipmap</span>(GL_TEXTURE_2D);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  std::cout &lt;&lt; <span class="string">&quot;Failed to load texture&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 7. 释放纹理对象1的纹理数据</span></span><br><span class="line"><span class="built_in">stbi_image_free</span>(data);</span><br><span class="line"><span class="comment">// 8. 为对应ID的着色器的uniform变量绑定纹理单元0</span></span><br><span class="line"><span class="built_in">glUniform1i</span>(<span class="built_in">glGetUniformLocation</span>(shader.ID, <span class="string">&quot;myTexture&quot;</span>), <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 9. 激活纹理单元0</span></span><br><span class="line"><span class="built_in">glActiveTexture</span>(GL_TEXTURE0);</span><br><span class="line"><span class="comment">// 10. 绑定纹理单元0到纹理对象1</span></span><br><span class="line"><span class="built_in">glBindTexture</span>(GL_TEXTURE_2D, texture1);</span><br></pre></td></tr></table></figure><h2 id="8-混合纹理">8. 混合纹理</h2><p>使用<strong>mix函数</strong>：前两个参数为纹理图像数据，三个参数为混合的比例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FragColor = <span class="built_in">mix</span>(<span class="built_in">texture</span>(texture1, TexCoord), <span class="built_in">texture</span>(texture2, TexCoord), <span class="number">0.5</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CG </tag>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenGL：着色器</title>
      <link href="/posts/6c76ab46/"/>
      <url>/posts/6c76ab46/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-GLSL">1. GLSL</h2><p><strong>GLSL（OpenGL Shading Language）</strong>：是一种专门<strong>为GPU设计</strong>的编程语言，用于编写<strong>顶点着色器</strong>和<strong>片段着色器</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本声明 </span></span><br><span class="line"><span class="meta">#version version_number</span></span><br><span class="line"><span class="comment">// 变量声明</span></span><br><span class="line">in type in_variable_name;</span><br><span class="line">out type out_variable_name;</span><br><span class="line">uniform type uniform_name;</span><br><span class="line"><span class="comment">// 主函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 处理输入</span></span><br><span class="line">  <span class="comment">// 图形操作</span></span><br><span class="line">  <span class="comment">// 处理输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-向量">2. 向量</h2><p><strong>向量（vector）</strong>：是一个包含有<strong>n个分量</strong>的容器，分量的类型可以是<strong>基础数据类型int、float、double、uint和bool</strong></p><table><thead><tr><th>类型</th><th>含义</th></tr></thead><tbody><tr><td>vecn</td><td>包含n个float分量的向量</td></tr><tr><td>bvecn</td><td>包含n个bool分量的向量</td></tr><tr><td>ivecn</td><td>包含n个int分量的向量</td></tr><tr><td>uvecn</td><td>包含n个unsigned int分量的向量</td></tr><tr><td>dvecn</td><td>包含n个double分量的向量</td></tr></tbody></table><mark class="hl-label orange">如何获取分量？</mark> <ul><li>通用/位置：使用<code>.x</code>、<code>.y</code>、<code>.z</code>、<code>.w</code>获取它们的(x,y,z,w)分量</li><li>颜色：使用<code>.r</code>、<code>.g</code>、<code>.b</code>、<code>.a</code>获取它们的(r,g,b,a)分量</li><li>纹理：使用<code>.s</code>、<code>.t</code>获取它们的(s,t)分量</li></ul><p><strong>重组（Swizzling）</strong>：将向量的分量重新组合成一个新的向量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明一个2分量向量</span></span><br><span class="line">vec2 v1;</span><br><span class="line"><span class="comment">// 将v1的x,y分量重组赋值</span></span><br><span class="line">vec4 v2 = v<span class="number">1.</span>xyxx;</span><br><span class="line"><span class="comment">// 将v2的z,y,w分量重组赋值</span></span><br><span class="line">vec3 v3 = v<span class="number">2.</span>zyw;</span><br><span class="line"><span class="comment">// 将v1和v3的各个分量值先重组再相加</span></span><br><span class="line">vec4 v4 = v<span class="number">1.</span>xxxx + v<span class="number">3.</span>yxzy;</span><br><span class="line"><span class="comment">// 还可以把向量作为参数传给向量构造函数</span></span><br><span class="line">vec2 v1 = <span class="built_in">vec2</span>(<span class="number">0.5</span>, <span class="number">0.7</span>);</span><br><span class="line">vec2 v2 = <span class="built_in">vec2</span>(v1);</span><br><span class="line">vec4 v3 = <span class="built_in">vec4</span>(v1, <span class="number">0.0</span>, <span class="number">0.0</span>);</span><br></pre></td></tr></table></figure><h2 id="3-输入输出">3. 输入输出</h2><p><code>layout (location = &lt;索引&gt;)</code>：顶点着色器不是获取顶点数组，而是直接获取<strong>顶点数据</strong>，因此需要指定<strong>索引</strong>来告诉OpenGL从哪个位置获取数据赋值给输入变量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输入</span></span><br><span class="line"><span class="built_in">layout</span> (location = &lt;索引&gt;) in type in_variable_name;</span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line">out type out_variable_name;</span><br></pre></td></tr></table></figure><p>着色器通信：<strong>在发送方着色器声明一个输出变量，在接收方着色器声明一个输入变量</strong>，且这两个变量的<strong>类型和名称必须一致</strong>，否则OpenGL无法链接这两个变量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 考虑让顶点着色器为片段着色器提供颜色</span></span><br><span class="line"><span class="comment">// 顶点着色器</span></span><br><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="built_in">layout</span> (location = <span class="number">0</span>) in vec3 aPos;</span><br><span class="line">out vec4 vertexColor; <span class="comment">// 输出变量</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  gl_Position = <span class="built_in">vec4</span>(aPos, <span class="number">1.0</span>);</span><br><span class="line">  vertexColor = <span class="built_in">vec4</span>(<span class="number">0.5</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 片段着色器</span></span><br><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line">in vec4 vertexColor; <span class="comment">// 输入变量</span></span><br><span class="line">out vec4 FragColor;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  FragColor = vertexColor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Uniform">4. Uniform</h2><p>Uniform是一种<strong>从CPU向GPU发送数据</strong>的方式，因为<strong>GPU不允许CPU对其进行写操作</strong>，所以我们需要一个<strong>全局变量Uniform</strong>，使得CPU可以写入值，而GPU可以读取值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在着色器程序中声明一个uniform变量</span></span><br><span class="line">uniform type uniform_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在主程序中设置uniform的值</span></span><br><span class="line"><span class="comment">// 1. 先找到unifrom变量的位置</span></span><br><span class="line"><span class="type">int</span> vertexColorLocation = <span class="built_in">glGetUniformLocation</span>(shaderProgram, <span class="string">&quot;uniform_name&quot;</span>);</span><br><span class="line"><span class="comment">// 2. 然后激活着色器程序</span></span><br><span class="line"><span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"><span class="comment">// 3. 设置这个uniform变量的值</span></span><br><span class="line"><span class="built_in">glUniform4f</span>(vertexColorLocation, color_value);</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><code>glUniform</code>有一个特定的后缀，可以标识设定的类型，如f需要一个float类型，i需要一个int类型，3f需要一个3个float值，4f需要4个float值</p></div><h2 id="5-着色器处理多个属性">5. 着色器处理多个属性</h2><p>只需要通过<code>layout (location = &lt;索引&gt;)</code>来指定索引来获取不同索引的数据即可</p><p><strong>假设我们有如下数据</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> vertices[] = &#123;</span><br><span class="line">  <span class="comment">// 位置              // 颜色</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右下</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,  <span class="comment">// 左下</span></span><br><span class="line">  <span class="number">0.0f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>    <span class="comment">// 顶部</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951530.png" alt=""></p><p><strong>在顶点着色器中获取位置和颜色</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="built_in">layout</span> (location = <span class="number">0</span>) in vec3 aPos;</span><br><span class="line"><span class="built_in">layout</span> (location = <span class="number">1</span>) in vec3 aColor;</span><br><span class="line">out vec3 ourColor;  <span class="comment">// 将获取的颜色数据输出给片段着色器</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  gl_Position = <span class="built_in">vec4</span>(aPos, <span class="number">1.0</span>);</span><br><span class="line">  ourColor = aColor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在片段着色器中获取颜色</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line">in vec3 ourColor;</span><br><span class="line">out vec4 FragColor;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  FragColor = <span class="built_in">vec4</span>(ourColor, <span class="number">1.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>需要更新VAO</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 位置</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">6</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 颜色</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">1</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">6</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)(<span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>)));</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291951529.png" alt=""></p><div class="note info flat"><p>为什么三角形不是单纯的红蓝绿？<br><strong>片段插值（Fragment Interpolation）</strong>：片段着色器隐式地将三角形内每个片段的颜色<strong>通过三个顶点的颜色插值得到</strong>，比如，如果一条线的上端是绿色而下端是蓝色，位于线段靠上三等分点的位置的片段颜色将是66.7%蓝色和33.3%绿色的<strong>线性组合</strong>，最终呈现出<strong>颜色渐变</strong>的效果</p></div><h2 id="6-着色器类">6. 着色器类</h2><h3 id="6-1-结构">6.1 结构</h3><mark class="hl-label orange">为什么需要一个着色器类？</mark> <ul><li>如果每一个着色器都需要在<code>main文件</code>中编程，那么代码将会复杂且冗余，因此我们希望可以编写一个<strong>类文件</strong>来<strong>封装</strong>这些<strong>形式相同，类型和数据不同</strong>的函数操作，使得<code>main函数</code>可以利用类来使用着色器</li><li>着色器代码手动填写到字符串中，不利于编写和维护，因此我们希望可以<strong>从硬盘中读取着色器代码</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 避免多个文件重复包含和编译类文件，防止链接冲突</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> SHADER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SHADER_H</span></span><br><span class="line"><span class="comment">// 不需要创建窗口，因此不需要GLFW头文件，但是需要使用OpenGL函数，因此需要GLAD头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glad/glad.h&gt;</span>; </span></span><br><span class="line"><span class="comment">// 需要用到的C++标准库头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shader</span> &#123;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 程序ID</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> ID;</span><br><span class="line">    <span class="comment">// 构造函数：读取并构建着色器</span></span><br><span class="line">    <span class="built_in">Shader</span>(<span class="type">const</span> <span class="type">char</span>* vertexPath, <span class="type">const</span> <span class="type">char</span>* fragmentPath);</span><br><span class="line">    <span class="comment">// 使用/激活程序</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">use</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// set函数用于查询uniform变量的位置并赋值</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setBool</span><span class="params">(<span class="type">const</span> string &amp;name, <span class="type">bool</span> value)</span> <span class="type">const</span></span>;  </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setInt</span><span class="params">(<span class="type">const</span> string &amp;name, <span class="type">int</span> value)</span> <span class="type">const</span></span>;   </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setFloat</span><span class="params">(<span class="type">const</span> string &amp;name, <span class="type">float</span> value)</span> <span class="type">const</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="6-2-构造函数">6.2 构造函数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Shader</span>(<span class="type">const</span> <span class="type">char</span>* vertexPath, <span class="type">const</span> <span class="type">char</span>* fragmentPath) &#123;</span><br><span class="line">  <span class="comment">// 1. 声明变量</span></span><br><span class="line">  string vertexCode; <span class="comment">// 顶点着色器代码字符串</span></span><br><span class="line">  string fragmentCode; <span class="comment">// 片段着色器代码字符串</span></span><br><span class="line">  ifstream vShaderFile; <span class="comment">// 顶点着色器文件</span></span><br><span class="line">  ifstream fShaderFile; <span class="comment">// 片段着色器文件</span></span><br><span class="line">  <span class="comment">// 2. 读取文件</span></span><br><span class="line">  vShaderFile.<span class="built_in">open</span>(vertexPath);</span><br><span class="line">  fShaderFile.<span class="built_in">open</span>(fragmentPath);</span><br><span class="line">  stringstream vShaderStream, fShaderStream;</span><br><span class="line">  vShaderStream &lt;&lt; vShaderFile.<span class="built_in">rdbuf</span>();</span><br><span class="line">  fShaderStream &lt;&lt; fShaderFile.<span class="built_in">rdbuf</span>();</span><br><span class="line">  vShaderFile.<span class="built_in">close</span>();</span><br><span class="line">  fShaderFile.<span class="built_in">close</span>();</span><br><span class="line">  <span class="comment">// 3. 读取代码</span></span><br><span class="line">  vertexCode = vShaderStream.<span class="built_in">str</span>();</span><br><span class="line">  fragmentCode = fShaderStream.<span class="built_in">str</span>();</span><br><span class="line">  <span class="type">const</span> <span class="type">char</span>* vShaderCode = vertexCode.<span class="built_in">c_str</span>();</span><br><span class="line">  <span class="type">const</span> <span class="type">char</span>* fShaderCode = fragmentCode.<span class="built_in">c_str</span>();</span><br><span class="line">  <span class="comment">// 4. 编译着色器</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> vertex, fragment;</span><br><span class="line">  vertex = <span class="built_in">glCreateShader</span>(GL_VERTEX_SHADER);</span><br><span class="line">  fragment = <span class="built_in">glCreateShader</span>(GL_FRAGMENT_SHADER);</span><br><span class="line">  <span class="built_in">glShaderSource</span>(vertex, <span class="number">1</span>, &amp;vShaderCode, <span class="literal">NULL</span>);</span><br><span class="line">  <span class="built_in">glShaderSource</span>(fragment, <span class="number">1</span>, &amp;fShaderCode, <span class="literal">NULL</span>);</span><br><span class="line">  <span class="built_in">glCompileShader</span>(vertex);</span><br><span class="line">  <span class="built_in">glCompileShader</span>(fragment);</span><br><span class="line">  <span class="comment">// 5. 链接着色器</span></span><br><span class="line">  ID = <span class="built_in">glCreateProgram</span>();</span><br><span class="line">  <span class="built_in">glAttachShader</span>(ID, vertex);</span><br><span class="line">  <span class="built_in">glAttachShader</span>(ID, fragment);</span><br><span class="line">  <span class="built_in">glLinkProgram</span>(ID);</span><br><span class="line">  <span class="comment">// 7. 删除着色器</span></span><br><span class="line">  <span class="built_in">glDeleteShader</span>(vertex);</span><br><span class="line">  <span class="built_in">glDeleteShader</span>(fragment);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-成员函数">6.3 成员函数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// use函数：使用/激活程序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">use</span><span class="params">()</span> </span>&#123; </span><br><span class="line">  <span class="built_in">glUseProgram</span>(ID);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 一系列set函数：查询uniform变量的位置并赋值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setBool</span><span class="params">(<span class="type">const</span> string &amp;name, <span class="type">bool</span> value)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">  <span class="built_in">glUniform1i</span>(<span class="built_in">glGetUniformLocation</span>(ID, name.<span class="built_in">c_str</span>()), (<span class="type">int</span>)value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setInt</span><span class="params">(<span class="type">const</span> string &amp;name, <span class="type">int</span> value)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">  <span class="built_in">glUniform1i</span>(<span class="built_in">glGetUniformLocation</span>(ID, name.<span class="built_in">c_str</span>()), value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setFloat</span><span class="params">(<span class="type">const</span> string &amp;name, <span class="type">float</span> value)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">  <span class="built_in">glUniform1f</span>(<span class="built_in">glGetUniformLocation</span>(ID, name.<span class="built_in">c_str</span>()), value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-4-使用着色器类">6.4 使用着色器类</h3><p>在main函数中使用着色器类</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实例化着色器类</span></span><br><span class="line"><span class="function">Shader <span class="title">ourShader</span><span class="params">(<span class="string">&quot;path/to/shader.vs&quot;</span>, <span class="string">&quot;path/to/shader.fs&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">while</span>(...)&#123;</span><br><span class="line">  <span class="comment">// 激活着色器</span></span><br><span class="line">  ourShader.<span class="built_in">use</span>();</span><br><span class="line">  <span class="comment">// 设置uniform变量</span></span><br><span class="line">  ourShader.<span class="built_in">setFloat</span>(<span class="string">&quot;someUniform&quot;</span>, <span class="number">1.0f</span>);</span><br><span class="line">  <span class="comment">// 渲染</span></span><br><span class="line">  [...];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CG </tag>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链路层</title>
      <link href="/posts/2a2781af/"/>
      <url>/posts/2a2781af/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-链路层服务">1. 链路层服务</h2><p><strong>适配器/接口控制器/接口卡（Network Interface Card,NIC）</strong>：实现链路层的硬件</p><ul><li><strong>成帧</strong>：链路层将网络层的数据报封装成帧，添加必要的首部信息，然后在物理层进行传输</li><li><strong>链路接入</strong>：管理多个设备如何共享同一物理链路，确保数据的有效发送和接收</li><li><strong>差错检测和纠正</strong>：检测并纠正传输过程中可能出现的错误</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810707.png" alt=""></p><h2 id="2-差错检测和纠正">2. 差错检测和纠正</h2><h3 id="2-1-EDC">2.1 EDC</h3><p>差错检测的方法：通过<strong>错误检测码（Error Detection Code, EDC）</strong>，即在数据中添加额外的冗余信息，使得接收方能够验证数据的完整性</p><p>差错控制的方法：</p><ul><li><strong>自动重传请求（Automatic Repeat reQuest, ARQ）</strong>：接收方检测到差错后，设法通知发送方重传</li><li><strong>前向错误纠正（Forward Error Correction,FEC）</strong>：接收方检测到错误后，可以自己定位到错误位置并进行修复</li></ul><div class="note warning flat"><p>这些都是技术统称，而不是指某一个具体策略</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810706.png" alt=""></p><h3 id="2-2-奇偶校验码">2.2 奇偶校验码</h3><p><strong>单位奇偶校验</strong>：给d位数据附加1个奇偶校验位用于检测差错，<strong>只能进行奇数位错误检测，并且无法进行错误纠正</strong></p><ul><li>奇校验：d+1个比特中1的总数是奇数</li><li>偶校验：d+1个比特中1的总数是偶数</li></ul><div class="note warning flat"><p>偶数个比特差错可能导致误判：考虑<code>10101</code>变成<code>11001</code>，依旧是奇数个1，而且差错经常是以<strong>突发</strong>的方式聚集在一起，测量表明单个奇偶校验位的检测准确度只有50%</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810705.png" alt=""></p><p><strong>二维奇偶校验</strong>：d位比特被划分为i行j列，每行每列都有1个奇偶校验位，此外用于校验的比特还拥有1个奇偶校验位</p><div class="note warning flat"><p>只能实现简单的错误定位和纠正，稍微复杂一点的还是无能为力</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810704.png" alt=""></p><h3 id="2-2-校验和">2.2 校验和</h3><p><strong>【检验和流程】</strong></p><ol><li>发送方对数据进行求和运算得到sum</li><li>发送方对sum进行取反生成checksum</li><li>接收方对数据进行求和运算：sum+checksum</li><li>如果和的任何比特是0，代表检测出错误</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810702.png" alt=""></p><h3 id="2-3-循环冗余码">2.3 循环冗余码</h3><p>基础</p><ul><li>生成多项式：双方约定好的二进制多项式（最高位和最低位都是1）</li><li>二进制多项式：<strong>n位位串可以视为阶数为n-1的多项式</strong>，如1101表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^3+x^2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li><li>模2减运算：按位进行<strong>异或运算</strong></li><li>模2除运算：<strong>余数小于除数则商0，否则商1</strong></li></ul><div class="note info flat"><p>CRC-4：生成多项式是1001，代表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^4 + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span><br>CRC-5：生成多项式是10010，代表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^5 + x^2 + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span><br>CRC-8：生成多项式是100000111，代表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^8 + x^2 + x + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span><br>CRC-16：生成多项式是11000000000000101，代表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>16</mn></msup><mo>+</mo><msup><mi>x</mi><mn>15</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^{16} + x^{15} + x^2 + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p></div><p>流程</p><ol><li>如果规定的生成多项式阶为r，则在d位数据后面加上r个零用于计算</li><li>将数据模2除生成多项式，得到的r位余数作为CRC冗余码</li><li>将r位余数替换先前的r个零</li><li>接收方将数据（原始d位数据+r位检验码）与相同的生成多项式进行模2除法</li><li>如果余数非零，代表检测出错误</li></ol><div class="note warning flat"><p>CRC可以实现复杂错误的检测，但无法实现错误纠正</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810701.png" alt=""><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810700.png" alt=""></p><h3 id="2-4-比较">2.4 比较</h3><table><thead><tr><th>方法</th><th>奇偶校验</th><th>检验和</th><th>循环冗余</th></tr></thead><tbody><tr><td>能力</td><td>只能检测奇数位错误</td><td>可以检测任意数量错误</td><td>可以检测各种类型的错误</td></tr><tr><td>适用场景</td><td>简单低速通信</td><td>运输层</td><td>链路层</td></tr><tr><td>算法基础</td><td>二进制奇偶</td><td>二进制加法</td><td>二进制除法</td></tr></tbody></table><h2 id="3-多路访问协议">3. 多路访问协议</h2><h3 id="3-1-信道与碰撞">3.1 信道与碰撞</h3><p><strong>信道（channel）</strong>：用于传输数据的媒介或路径，可以是物理的（电缆、光纤）或无线的（无线电波）</p><p><strong>碰撞（collide）</strong>：在<strong>共享信道</strong>中多个节点同时传输帧，会导致<strong>信号干扰，造成数据丢失</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810697.png" alt=""></p><p><strong>多路访问协议（multiple access protocol）/ 介质访问控制协议（media access control protocol）</strong>：用于解决多个设备共享同一通信信道时如何高效、公平地分配信道资源的协议，目的是<strong>提高信道利用率并减少碰撞机率，从而提高数据传输的效率</strong></p><p>信道传输效率：假设有大量活跃节点且每个节点总有帧要发送，<strong>单个时隙成功传输的概率</strong></p><p>效率</p><ul><li>当传播时延接近0时，效率接近1，因为<strong>信号瞬时到达</strong>，所以不会发生碰撞</li><li>当传输时延接近无穷大时，效率接近1，因为<strong>在当前数据传输的过程中足以完成其他数据的全部传播</strong>，所以不会发生碰撞</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810721.png" alt=""></p><table><thead><tr><th>协议</th><th>碰撞处理</th><th>吞吐量</th></tr></thead><tbody><tr><td>信道划分协议</td><td>将一个信道划分为多个信道</td><td>限制在R/N</td></tr><tr><td>随机接入协议</td><td>重传帧前需要等待一个随机时延</td><td>只有一个节点活跃时是R，但是如果有多个节点活跃时吞吐量会很低（甚至低于R/N）</td></tr><tr><td>轮流协议</td><td>一次只让一个节点发送帧</td><td>R，但是引入了轮流时延和等待时延</td></tr></tbody></table><h3 id="3-2-信道划分协议">3.2 信道划分协议</h3><table><thead><tr><th>信道划分协议</th><th>作用</th></tr></thead><tbody><tr><td>时分多路复用（TDM）</td><td>将信道按时间划分为多个时隙，每个设备在固定的时隙内发送数据</td></tr><tr><td>频分多路复用（FDM）</td><td>将信道按频率划分为多个子信道，每个设备使用不同的频率</td></tr><tr><td>码分多址（CDM）</td><td>每个设备使用唯一的编码序列发送数据，接收方通过解码来分离不同设备的信号</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810727.png" alt=""></p><h3 id="3-3-随机接入协议">3.3 随机接入协议</h3><h4 id="3-3-1-纯-ALOHA">3.3.1 纯 ALOHA</h4><p><strong>节点可以在任意时刻传输帧，如果检测到碰撞，就等待一个随机的时间量来重传</strong></p><ul><li>节点传输成功的前提是在上一个帧传播时间和下一个帧传播时间都没有其他节点传输</li><li>节点之间的重传是独立的</li></ul><p>假设有N个节点且每个节点都有帧要发送</p><ul><li>节点在当前时隙成功传输的概率是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow><mn>2</mn><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">p(1-p)^{2(N-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></li><li>当前时隙有节点成功传输的概率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>p</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow><mn>2</mn><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">Np(1-p)^{2(N-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Np</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></li><li><ul><li>信道传输效率最大为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mi>e</mi><mo>≈</mo><mn>18.4</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">= 1/2e \approx 18.4\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">18.4%</span></span></span></span></li></ul></li></ul><div class="note info flat"><p>当N趋于无穷大时，最大效率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>e</mi></mrow></mfrac><mo>≈</mo><mn>0.18</mn></mrow><annotation encoding="application/x-tex">= \frac{1}{2e} \approx 0.18</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">e</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.18</span></span></span></span>，即<strong>纯ALOHA的效率是时隙ALOHA的一半</strong></p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810724.png" alt=""></p><h4 id="3-3-2-时隙-ALOHA">3.3.2 时隙 ALOHA</h4><p><strong>节点只能在时隙起点传输帧，如果检测到碰撞，就以概率p在后续每个时隙重传该帧</strong></p><ul><li>时隙必须大于帧传播时间，一般来说时隙时间 = 2 x 帧传播时间</li><li>当节点有新帧发送时，它会等到下一个时隙的起点才延迟发送</li><li>可以确保节点在时隙结束之前检测到碰撞，且只要发生了碰撞，就认为该时隙就没有传输任何有效数据</li><li>节点之间的重传是独立的</li></ul><p>假设有N个节点且每个节点都有帧要发送</p><ul><li>节点在当前时隙成功传输的概率是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">p(1-p)^{N-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li>当前时隙有节点成功传输的概率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>p</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">Np(1-p)^{N-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Np</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li>信道传输效率最大为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>e</mi><mo>≈</mo><mn>36.8</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">= 1/e \approx 36.8\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">36.8%</span></span></span></span></li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810725.png" alt=""></p><h4 id="3-3-3-CSMA-CA">3.3.3 CSMA/CA</h4><ol><li>节点侦听信道，如果信道忙，推迟发送</li><li>如果信道空闲，节点随机选择一个退避时间，开启定时器</li><li>如果退避时间侦听到有节点发送，暂停定时器</li><li>定时器到时，节点开始发送数据</li></ol><p>性质</p><ul><li>做不到完全避免，因为信道被占用的信息可能需要经过<strong>信道传播时延</strong>才能传输到全部节点，而在该时延内其他节点并不知道信道忙碌，因此可能在这段时延中仍然会传输帧导致碰撞</li><li>随机退避时间确保所有站点有平等的机会竞争信道，避免某些站点总是优先发送数据</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810723.png" alt=""></p><h4 id="3-3-4-CSMA-CD">3.3.4 CSMA/CD</h4><ol><li>节点侦听信道，如果信道忙，推迟发送</li><li>如果信道空闲，节点立即发送数据</li><li>节点在发送时持续侦听信道，检测冲突</li><li>如果检测到冲突，节点停止发送</li><li>节点根据二进制指数退避算法选择重传等待时间</li></ol><p>二进制指数退避算法：如果当前数据经历了n次碰撞，即需要第n次重传时，节点会等概率地从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0,1,2,...,2^{n-1}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>中选择一个值K，然后等待<strong>Kx时隙时间</strong>后重传</p><ul><li>重传等待时间不能是固定时间量，否则两个信号将发生<strong>周期性碰撞</strong>，从而导致永远无法正确传输</li><li>重传等待时间不能太小，否则当碰撞帧较多且传输时间较长时，会<strong>不断积累碰撞</strong></li></ul><div class="note success flat"><p>随着碰撞次数的变多，可供选择的K呈<strong>指数级增长</strong>，从而保证了碰撞次数和等待时间的平衡，假设时隙时间=512bit</p><ol><li>第一次碰撞，节点从{0,1}等概率选择到K=1，然后等待512比特时间</li><li>第二次碰撞，节点从{0,1,2,3}等概率选择到K=3，然后等待1536比特时间</li><li>第三次碰撞，节点从{0,1,2,3,4,5,6,7}等概率选择到K=5，然后等待3072比特时间</li><li>以此类推直到没有碰撞发生</li></ol></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810722.png" alt=""></p><h3 id="3-4-轮流协议">3.4 轮流协议</h3><table><thead><tr><th>协议</th><th>描述</th><th>缺点</th></tr></thead><tbody><tr><td>轮询（polling）</td><td>其中一个节点被指定为主节点，以循环的方式轮询每个节点，以确定哪个节点可以发送帧以及发送多少帧</td><td>引入了轮询时延，主节点单点故障会导致整个信道不可用</td></tr><tr><td>令牌传递（token-passing）</td><td>一个称为令牌的特殊帧在节点之间以某种顺序进行交换，只有持有令牌的节点可以发送帧，并且在发送完帧或无帧可发时立即将令牌传递给下一个节点</td><td>引入了令牌传递时延，令牌丢失或令牌传递失效导致信道不可用</td></tr></tbody></table><h2 id="4-LAN">4. LAN</h2><h3 id="4-1-MAC-地址">4.1 MAC 地址</h3><p>MAC 地址是网络设备的<strong>唯一硬件标识符</strong>，专用于数据链路层的通信</p><ul><li>唯一性：全球唯一，由IEEE和设备制造商统一决定</li><li>永久性：通常固化在硬件中，无法轻易更改，但可通过软件临时修改</li></ul><div class="note warning flat"><p>不能说每个设备都有一个 MAC 地址，而是他们的<strong>适配器/网络接口卡具有一个 MAC 地址</strong></p></div><table><thead><tr><th>地址</th><th>对象</th><th>存在</th><th>意义</th></tr></thead><tbody><tr><td>IP地址</td><td>适配器，接口卡</td><td>逻辑的，可以随时随地更改</td><td>网络层寻址，不同局域网的设备互联</td></tr><tr><td>MAC地址</td><td>接口</td><td>物理的，永久的</td><td>链路层寻址，同一局域网内的设备互联</td></tr></tbody></table><p>格式：一共有48位，分为6个字节，每个字节用十六进制表示，用冒号（:）或连字符（-）分隔</p><ul><li>广播地址（全1）：<strong>FF-FF-FF-FF-FF-FF</strong></li><li>MAC 地址没有类似于 IP 地址中 0.0.0.0 的特殊地址，因为 MAC 地址是人为分配的</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810719.png" alt=""></p><h3 id="4-2-ARP">4.2 ARP</h3><p><strong>地址解析协议（Address Resolution Protocol, ARP）</strong>：用于将 IP 地址解析为 MAC 地址的<strong>网络层</strong>协议，ARP 映射关系会缓存在设备的 ARP 表中</p><div class="note success flat"><p>DNS和ARP非常相似，DNS将域名映射到IP地址，ARP将IP地址映射到MAC地址，只不过DNS的作用域是互联网，而ARP的作用域是局域网</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810718.png" alt=""></p><p>流程</p><ol><li>ARP请求：如果当前设备的ARP表没有目的IP地址的映射记录，则设备会广播一个 ARP 请求，并将自己 MAC 地址作为源 MAC 地址</li><li>目标设备收到 ARP 请求后，会回复一个 ARP 响应，将自己的 MAC 地址作为源 MAC 地址</li><li>发送方收到 ARP 响应后，会将 IP 地址和 MAC 地址的映射关系存储到本地的 ARP 缓存表中</li></ol><div class="note success flat"><p>ARP是<strong>即插即用的，自学习的</strong>，因为ARP表是自动建立的，不需要管理员来配置</p></div><p>跨子网通信</p><ol><li>设备检查检查目标 IP 地址发现不在同一子网中</li><li>设备解析网关路由器的 MAC 地址</li><li>设备使用网关路由器的 MAC 地址封装数据帧，并将数据发送给网关路由器</li><li>网关路由器负责将数据转发到目标子网</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810717.png" alt=""></p><h3 id="4-3-Ethernet">4.3 Ethernet</h3><p>以太网：是一种广泛使用的局域网技术，定义了数据在局域网中如何格式化、传输以及在设备间进行通信，使用 CSAM/CD 协议处理碰撞</p><ul><li><strong>无连接</strong>：发送方和接收方不会进行握手和挥手</li><li><strong>不可靠</strong>：接收方会进行CRC校验，但如果发现数据帧出错，只是丢弃该帧</li><li><strong>无意识</strong>：以太网并不知道正在传输的是一个新帧，还是一个重传帧</li></ul><div class="note success flat"><p><strong>以太网在局域网的重要性相当于因特网在广域网的重要性</strong></p></div><p>以太网帧结构</p><table><thead><tr><th>字段</th><th>长度/字节</th><th>描述</th></tr></thead><tbody><tr><td>前同步码</td><td>8</td><td>用于同步传输，确保数据帧的正确传输</td></tr><tr><td>目的地址</td><td>6</td><td>目标设备的MAC地址</td></tr><tr><td>源地址</td><td>6</td><td>源设备的MAC地址</td></tr><tr><td>类型</td><td>2</td><td>指示上层协议</td></tr><tr><td>CRC</td><td>4</td><td>用于检测数据帧中的错误</td></tr><tr><td>数据</td><td>46-1500</td><td>数据帧的有效载荷</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810716.png" alt=""></p><h2 id="5-交换机">5. 交换机</h2><h3 id="5-1-功能">5.1 功能</h3><p>转发表：记录了每个设备的 MAC 地址与其连接的交换机接口的映射关系</p><ul><li>交换机只会从源接口学习 MAC 地址</li><li>每个条目都有一个生存时间</li></ul><p>核心功能：<strong>缓存、过滤、转发</strong></p><ul><li>不存在源 MAC 地址：记录 MAC 地址与接口的映射关系</li><li>不存在目标 MAC 地址：向所有接口广播该帧</li><li>出接口等于入接口：丢弃该帧</li><li>出接口不等于入接口：转发该帧</li><li>老化期内没有接收到以该MAC地址作为目的的帧：删除缓存表项</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810715.png" alt=""></p><div class="note danger flat"><p><strong>交换机毒化</strong>：是一种对抗交换机的攻击，攻击者向交换机发送大量具有不同伪造MAC地址的帧，从而使得交换机表充斥这些伪造的MAC地址表项，没有为合法主机留下表空间</p></div><h3 id="5-2-意义">5.2 意义</h3><p>主机和路由器根本意识不到交换机的存在，<strong>始终是对另一个主机或路由器寻址，而不是对交换机寻址</strong></p><p><strong>交换机的必要性</strong></p><table><thead><tr><th>原因</th><th>没有交换机</th><th>有交换机</th></tr></thead><tbody><tr><td>消除碰撞</td><td>所有数据都需要通过广播信道传播，所有接口共享同一个冲突域，容易发生冲突和碰撞，导致数据包丢失和重传</td><td>交换机使得每个接口都有独立的冲突域</td></tr><tr><td>数据泄露</td><td>所有设备都能接收到所有的数据帧，增加了数据泄露的风险</td><td>交换机通过学习和转发MAC地址，确保只有目标设备接收到相应的数据帧</td></tr><tr><td>管理困难</td><td>集线器只负责传输，没有过滤、转发等任何功能</td><td>交换机可以自学习，支持VLAN划分广播域</td></tr><tr><td>异质链路</td><td>集线器只支持相同类型的链路，难以适应不同的网络环境和需求</td><td>交换机可以转发到不同媒介的链路，从而实现链路隔离，提高整体带宽</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810713.png" alt=""></p><p>对比三个网络核心设备</p><table><thead><tr><th>设备</th><th>层次</th><th>对象</th><th>地址</th><th>作用域</th></tr></thead><tbody><tr><td>集线器（Hub）</td><td>物理层</td><td>比特流（bit）</td><td>物理地址</td><td>物理互连的设备</td></tr><tr><td>交换机（Switch）</td><td>链路层</td><td>数据帧（frame）</td><td>MAC地址</td><td>局域网内设备互连</td></tr><tr><td>路由器（Router）</td><td>网络层</td><td>数据报（datagram）</td><td>IP地址</td><td>广域网内设备互连</td></tr></tbody></table><h3 id="5-3-VLAN">5.3 VLAN</h3><p>传统交换局域网的局限性</p><ul><li>泛洪现象：所有端口置于同一广播域，广播流量会传遍整个网络，导致带宽浪费和性能下降</li><li>缺乏灵活性：只使用一个交换机无法根据部门或功能划分局域网</li><li>安全性不足：所有设备在同一广播域中，容易发生数据泄露或未经授权的访问</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810714.png" alt=""></p><p><strong>虚拟局域网（Virtual Local Area Network, VLAN）</strong>：将<strong>单一的局域网划分为多个逻辑局域网，每个逻辑局域网具有一个 VLAN 区域编号</strong></p><ul><li>交换机指定端口或设备所属的 VLAN 区域</li><li>使用 Trunk 链路在交换机间传输多个 VLAN 的流量</li><li>通过路由器或三层交换机实现不同 VLAN 间的通信</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810711.png" alt=""></p><h2 id="6-MPLS">6. MPLS</h2><p><strong>多协议标签交换（Multiple Protocol Label Switching, MPLS）</strong>：是一种高效的网络数据传输技术，通过在数据包前<strong>添加标签</strong>来简化转发过程，提升网络性能和灵活性</p><ul><li>高效转发：标签查找和替换速度快于传统IP路由</li><li>路由灵活：允许网络管理员根据需求设置标签和接口的映射关系，从而指定更精细和灵活的路由</li><li>支持流量工程：可以利用实验字段实现流量分类和优先级处理</li></ul><table><thead><tr><th>字段</th><th>长度/bit</th><th>作用</th></tr></thead><tbody><tr><td>标签</td><td>20</td><td>用于标识流量，是MPLS的核心</td></tr><tr><td>实验</td><td>3</td><td>用于流量工程中的优先级控制</td></tr><tr><td>S</td><td>1</td><td>表示该标签是否为栈中的最后一个标签</td></tr><tr><td>TTL</td><td>8</td><td>用于防止数据包在网络中无限循环</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810710.png" alt=""></p><p>MPLS的工作原理</p><ol><li>标签分配：入口路由器根据目的地址分配标签并添加到数据包</li><li>标签交换：中间路由器根据标签转发表进行转发，替换旧标签为新标签</li><li>标签移除：出口路由器移除标签，按IP地址转发数据包</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300822065.png" alt=""></p><h2 id="6-数据中心网络">6. 数据中心网络</h2><p>数据中心的作用</p><ol><li>为用户提供网页、搜索结果、电子邮件和流媒体视频等<strong>网络内容</strong></li><li>用于特定<strong>数据处理</strong>任务的大规模并行计算基础设施</li><li>为企业和用户提供<strong>云计算服务</strong></li></ol><table><thead><tr><th>组件</th><th>描述</th><th>作用</th></tr></thead><tbody><tr><td>刀片（blade）</td><td>是数据中心中的主机/服务器</td><td>相当于蜂巢的工蜂，负责一切计算工作，运行应用程序和处理数据</td></tr><tr><td>机架（rack）</td><td>是一组刀片的集合，主机被堆叠在机架上</td><td>为刀片提供电源、冷却和物理支撑</td></tr><tr><td>机架顶部交换机（Top of Rack,TOR）</td><td>位于机架顶部的交换机，与机架上每个主机互连，与上层交换机互连</td><td>负责当前机架上网络流量的管理和转发</td></tr><tr><td>层次交换机（switch）</td><td>与高层和底层交换机互联</td><td>用于机架间数据流转发，实施流量管理</td></tr><tr><td>边界路由器（border router）</td><td>将数据中心网络与因特网相连</td><td>处理进出数据中心的流量，确保数据在内部网络和外部网络之间的有效传递</td></tr><tr><td>接入路由器（access router）</td><td>与边界路由器互联，与层级交换机互联</td><td>划分数据中心网络为多个子网/局域网</td></tr><tr><td>负载均衡器（load balancer）</td><td>位于单个局域网的入口点</td><td>通过计算，将用户请求分发到不同的服务器上，以实现负载均衡和高可用性</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810709.png" alt=""></p><table><thead><tr><th>问题</th><th>描述</th><th>解决</th></tr></thead><tbody><tr><td>扩展性问题</td><td>大企业的主机规模可能需要扩展到几万甚至几十万台</td><td>利用等级体系，高层设备可以连接多个低层设备，低层设备也可以连接多个高层设备</td></tr><tr><td>带宽问题</td><td>高层链路通常作为瓶颈链路，导致传播速率低、传播时延高，</td><td>部署速度更快的交换机和路由器，将相关服务和数据放在尽可能近的地方，增加聚合容量</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300822967.png" alt=""></p><h2 id="7-Web页面请求全过程">7. Web页面请求全过程</h2><ol><li>Bob电脑在试图连网时，操作系统先生成一个<strong>DHCP请求报文</strong>，然后将这个报文封装在目的端口为<strong>67（DHCP服务器）</strong>，<strong>源端口为68（DHCP客户）<strong>的</strong>UDP报文段</strong>中，接着又将这个报文段封装在具有广播目的IP地址<code>255.255.255.255</code>和本地源IP地址<code>0.0.0.0</code>的<strong>IP数据报</strong>中，最后封装在具有广播目的MAC地址<code>FF-FF-FF-FF-FF-FF</code>和电脑源MAC地址<code>00-16-D3-23-68-8A</code>的<strong>以太网帧</strong>中</li><li><strong>交换机</strong>接收到帧后，向所有出端口广播</li><li>当DHCP服务器接收到帧后，分解数据包获取到DHCP请求报文，DHCP服务器管理的<strong>CIDR地址块</strong>为<code>68.85.2.0/24</code>，因此DHCP服务器分配空闲IP地址<code>68.85.2.0.101</code>给Bob电脑</li><li>DHCP服务器生成包含这个IP地址和<strong>网络掩码</strong>以及<strong>DNS服务器</strong>的IP地址<code>68.87.71.226</code>和<strong>网关路由器</strong>的IP地址<code>68.85.2.1</code>的<strong>DHCP ACK报文段</strong>，同上，依次被封装在UDP报文段、IP数据报和以太网帧中</li><li>由于交换机是<strong>自学习</strong>的，包含DHCP ACK的以太网帧的目的MAC地址是Bob电脑的源MAC地址，因此交换机知道从哪个端口转发该帧</li><li>Bob电脑接收到帧后抽取得到DHCP ACK报文，电脑上的DHCP客户程序记录下本机的IP地址以及DNS服务器的IP地址，并在其<strong>IP转发表</strong>中添加了网关路由器的IP地址</li><li>Dasi将谷歌的<strong>URL</strong><code>www.google.com</code>键入其<strong>Web浏览器</strong>的搜索栏，然后按下回车</li><li>操作系统生成一个<strong>DNS查询报文</strong>，将URL字符串放入DNS查询报文的问题字段中，然后封装在目的端口为<strong>53（DNS服务器）<strong>的</strong>UDP报文段</strong>中，接着又封装进目的IP地址为<code>68.87.71.226</code>的IP数据报中</li><li>操作系统在进行上一步的同时，还生成了一个<strong>ARP查询报文</strong>，先封装进目的IP地址为<code>68.85.2.1</code>的IP数据报中，再封装进具有广播目的MAC地址<code>FF-FF-FF-FF-FF-FF</code>的以太网帧中</li><li>网关路由器接收到包含ARP查询的帧，发现目的IP地址匹配到自身IP地址，因此生成了一个<strong>ARP回答报文</strong>，指示自己的MAC地址为<code>00-22-6B-45-1F-1B</code></li><li>Bob电脑得到默认网关路由器的MAC地址后，再将第8步得到的IP数据报封装成以太网帧（<strong>注意这里的目的IP地址是DNS服务器的，但是目的MAC地址是网关路由器的</strong>）</li><li>网关路由器接收到该帧后，抽取IP目的地址，然后根据其转发表和<strong>BGP协议</strong>决定转发到Comcast网络中的网关路由器，该路由器收到后再一次检查IP目的地址，根据其转发表决定转发到DNS服务器</li><li>DNS服务器此时终于接收到DNS查询报文，然后在它的<strong>DNS数据库</strong>中查找名字<code>www.google.com</code>对应的IP地址<code>64.233.169.105</code>，并生成一个<strong>DNS回答报文</strong></li><li>Bob电脑从DNS回答报文中抽取出<strong>谷歌服务器</strong>的IP地址，然后浏览器程序生成<strong>TCP套接字</strong>，与谷歌服务器中的TCP进行<strong>三次握手</strong>，先生成一个具有目的端口<strong>80（HTTP服务）<strong>的</strong>SYN报文段</strong>，封装进目的IP地址为<code>64.233.169.105</code>的IP数据报，再封装进MAC地址为<code>00-22-6B-45-1F-1Bd</code>的以太网帧</li><li>由<strong>BGP协议</strong>和<strong>AS协议</strong>实现域间和域内路由，谷歌服务器分解得到与端口80相连的<strong>欢迎套接字</strong>，随后也生成一个TCP套接字，并封装进一个<strong>SYN-ACK报文段</strong>返回</li><li>Bob电脑接收到SYN-ACK报文段并分解得到TCP套接字，从而进入连接状态</li><li>Bob电脑借助TCP套接字，生成并发送包含要获取URL的<strong>HTTP GET报文</strong>，封装进一个<strong>TCP报文段</strong></li><li>谷歌中的HTTP服务器从TCP套接字中读取到了HTTP GET报文，并生成一个<strong>HTTP响应报文</strong>，将Web页的字节内容放入HTTP响应报文的有效载荷中，最后发送进TCP套接字中</li><li>Bob电脑上的浏览器程序获得了HTTP响应报文，抽取有效载荷中关于Web网页的html、css等数据，开始渲染，最后呈现一个Web网页在屏幕上</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter6/202409300810708.png" alt=""></p><p>总结为以下步骤：</p><ol><li>利用DHCP协议获取主机IP地址（1-6）</li><li>利用DNS协议获取域名服务器的IP地址，利用ARP协议获取网关路由器的MAC地址（7-10）</li><li>利用DNS协议获取目标服务器的IP地址（11-13）</li><li>利用BGP协议，AS协议和TCP协议建立TCP连接（14-16）</li><li>利用HTTP协议获取网页内容（17-19）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenGL：三角形</title>
      <link href="/posts/7fdffb64/"/>
      <url>/posts/7fdffb64/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-图形渲染管线">1. 图形渲染管线</h2><p><strong>管线/流水线（Pipeline）</strong>：将一堆原始图形数据途经一个输送管道，期间经过各种变化处理最终出现在屏幕的过程，主要有以下两步</p><ol><li>将顶点的3D坐标转换为2D坐标</li><li>将顶点的2D坐标转变为屏幕的像素</li></ol><div class="note warning flat"><p>坐标和像素是不同的，坐标是空间中一个精确的点，而像素只是分辨率中的一个方块，可以认为<strong>像素是坐标的近似</strong>！</p></div><p><strong>着色器（Shader）</strong>：用于图形渲染的GPU程序，负责管线内的各个操作</p><ul><li><strong>顶点着色器（vertex）</strong>：处理单个顶点的输入，负责坐标变换、光照计算</li><li><strong>几何着色器（geometry）</strong>：处理一组顶点的输入，负责增加或改变顶点</li><li><strong>图元装配（Primitive Assembly）</strong>：将顶点组合成图元</li><li><strong>光栅化（Rasterization）</strong>：把图元映射为最终屏幕上相应的像素</li><li><strong>片段着色器（fragment）</strong>：处理每个片段的颜色和纹理，计算最终的像素值</li><li><strong>测试（Test）</strong>：包括深度测试和模板测试，确定哪些片段可见，哪些被丢弃</li><li><strong>混合（Blend）</strong>：将多个片段的颜色结合，处理透明度和颜色混合效果</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291952577.png" alt=""></p><div class="note info flat"><p>图元（primitive）：有三种基本类型，<strong>点（GL_POINTS）</strong>、<strong>线（GL_LINE_STRIP）</strong>、<strong>三角形（GL_TRIANGLES）</strong><br>片段（fragment）：是OpenGL渲染一个像素所需的所有数据，是<strong>像素的前身</strong></p></div><h2 id="2-VBO">2. VBO</h2><h3 id="2-1-什么是VBO？">2.1 什么是VBO？</h3><p><strong>顶点缓冲对象（Vertex Buffer Object,VBO）</strong>：是存储顶点数据的图形对象，是<strong>CPU和GPU之间传递数据</strong>的桥梁</p><mark class="hl-label orange">为什么要使用VBO？</mark> <p>关键在于理解B即<strong>Buffer</strong>的含义，缓冲代表VBO可以暂时存储多个顶点的数据，之后可以<strong>一次性发送多个顶点数据到显卡</strong>，而不是每个顶点都发送一次，这样使得顶点着色器能<strong>立即同时访问到全部顶点</strong>，从而<strong>充分发挥GPU并行计算</strong>的功能，极大程度<strong>加快渲染效率</strong></p><mark class="hl-label orange">常见的顶点数据</mark> <ul><li><strong>位置（Position）</strong>：顶点在三维空间中的坐标(x,y,z)</li><li><strong>颜色（color）</strong>：顶点的颜色(r,g,b,a)</li><li><strong>纹理（texture）</strong>：用于映射纹理到顶点的坐标(s,t)</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291952576.png" alt=""></p><div class="note warning flat"><p><strong>标准化坐标设备（Normalized Device Coordinates,NDC）</strong>：OpenGL中的顶点坐标需要经过NDC处理转换为值在[-1.0,1.0]范围内的标准化坐标，才能最终显示在屏幕上！</p></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> vertices[] = &#123;</span><br><span class="line">  <span class="comment">// 位置             // 颜色             // 纹理</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="comment">// 右上</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="comment">// 右下</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>,  <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>,  <span class="number">0.0f</span>, <span class="number">1.0f</span>  <span class="comment">// 左上</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2-2-如何创建VBO？">2.2 如何创建VBO？</h3><p>首先，<strong>生成具有唯一ID的VBO对象</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> VBO;</span><br><span class="line"><span class="built_in">glGenBuffers</span>(<span class="number">1</span>, &amp;VBO);</span><br></pre></td></tr></table></figure><p>然后，<strong>将VBO绑定到指定缓冲类型</strong>，<code>GL_ARRAY_BUFFER</code>表示顶点数组（这一步相当于<strong>C中声明一个变量的数据类型</strong>）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO)</span><br></pre></td></tr></table></figure><p>最后，<strong>将数据添加到VBO中</strong></p><ul><li>第一个参数是目标缓冲的类型</li><li>第二个参数指定传输数据的大小（以字节为单位）</li><li>第三个参数是发送的实际数据</li><li>第四个参数指定了显卡如何管理给定的数据<ul><li><code>GL_STATIC_DRAW</code>数据不会或几乎不会改变（静态图像通常使用这个）</li><li><code>GL_DYNAMIC_DRAW</code>数据会被改变很多</li><li><code>GL_STREAM_DRAW</code>数据每次绘制时都会改变</li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glBufferData</span>(GL_ARRAY_BUFFER, <span class="built_in">sizeof</span>(vertices), vertices, GL_STATIC_DRAW)</span><br></pre></td></tr></table></figure><h2 id="3-VAO">3. VAO</h2><h3 id="3-1-什么是VAO？">3.1 什么是VAO？</h3><div class="note warning flat"><p>VBO实际上就是存储了一大堆数据，但是OpenGL中的GPU事先根本不知道这些数据的<strong>组织结构和含义</strong>是什么，GPU视角下它可能只是看到了<strong>一堆毫无意义的数字</strong>！这种时候我们就需要VAO</p></div><p><strong>顶点数组对象（Vertex Array Object,VAO）</strong>：保存了与顶点数据对应属性的对象，用于<strong>给GPU解释绑定的VBO的数据含义</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291952571.png" alt=""></p><mark class="hl-label orange">为什么VAO是必要的？</mark> <p>实际上，我们可以不用VAO，只是用一些命令告知GPU数据组织构造和含义即可。但这样做的话，<strong>每一个构造相同的VBO都需要重复上述命令</strong>，如果一个图形有几百个构造相同的VBO，那么就可能需要编写和执行几千条甚至几万条一模一样的代码，这显然是<strong>不合适且不合理</strong>的！因此，我们只需要<strong>根据某一构造的VBO写一个VAO</strong>，就可以只用一个VAO来处理全部相同构造的VBO</p><h3 id="3-2-如何创建VAO？">3.2 如何创建VAO？</h3><p>首先，<strong>生成具有唯一ID的VAO对象</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> VAO;</span><br><span class="line"><span class="built_in">glGenVertexArrays</span>(<span class="number">1</span>, &amp;VAO);</span><br></pre></td></tr></table></figure><p>然后，<strong>绑定VAO到指定缓冲类型</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br></pre></td></tr></table></figure><p>接着，<strong>配置VAO即定义如何解析顶点数据</strong></p><ul><li>index：顶点数据的索引</li><li>size：顶点数据的分量个数</li><li>type：顶点数据的类型</li><li>参数4：顶点数据是否需要标准化</li><li>参数5：顶点数据的步长，即单个顶点的数据长度</li><li>参数6：顶点数据的在缓冲起始位置的偏移量</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glVertexAttribPointer</span>(index, size, type, normalized, stride, (<span class="type">void</span>*)pointer);</span><br></pre></td></tr></table></figure><p>最后，<strong>启用顶点属性</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(index);</span><br></pre></td></tr></table></figure><h3 id="3-3-VAO实例分析">3.3 VAO实例分析</h3><div class="note info flat"><p>假设一个顶点有两个属性，先是位置，然后是颜色</p></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, (<span class="number">3</span> + <span class="number">4</span>) * <span class="built_in">sizeof</span>(<span class="type">float</span>), offset);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li>位置是第一个属性，所以index是0</li><li>位置有(x,y,z)共3个值构成，所以size是3</li><li>坐标值是32位的浮点值，所以type是GL_FLOAT</li><li>由于传输的数据已经标准化了，所以normalized是GL_FALSE</li><li>步长即是单个顶点的字节数，位置有3个浮点值，颜色有4个浮点值，所以stride是(3 + 4) * sizeof(float)</li><li>位置是第一个属性，所以偏移量是(void*)pointer</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291952575.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">1</span>, <span class="number">4</span>, GL_FLOAT, GL_FALSE, (<span class="number">3</span> + <span class="number">4</span>) * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)(<span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>)));</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li>颜色是第二个属性，所以index是1</li><li>位置有(r,g,b,a)共4个值构成，所以size是4</li><li>颜色值是32位的浮点值，所以type是GL_FLOAT</li><li>由于颜色数据无需标准化了，所以normalized是GL_FALSE</li><li>步长即是单个顶点的字节数，位置有3个浮点值，颜色有4个浮点值，所以stride是(3 + 4) * sizeof(float)</li><li>位置是第二个属性，前一个是位置属性，所以偏移量是(void*)(3 * sizeof(float))</li></ul><h3 id="3-4-VAO如何实现一对多？">3.4 VAO如何实现一对多？</h3><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/OpenGL202409291952572.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绑定 VAO</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="comment">// 绑定第一个 VBO</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 绑定第二个 VBO</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, <span class="number">0</span>); <span class="comment">// 解绑颜色 VBO</span></span><br><span class="line"><span class="comment">// 解绑 VAO</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="4-着色器编程">4. 着色器编程</h2><div class="note info flat"><p>着色器本质上是<strong>GPU的可执行渲染程序</strong>，主要进行三步：编程-编译-链接</p><ul><li><strong>编程（programme）</strong>：使用着色器语言（GLSL）编写代码</li><li><strong>编译（Compiler）</strong>：使用OpenGL API将GLSL代码提供给着色器对象并编译</li><li><strong>链接（Link）</strong>：将已编译的着色器附加到一个程序对象上，并进行链接</li></ul></div><h3 id="4-1-着色器编程">4.1 着色器编程</h3><p>以下自定义的顶点着色器实现了：<strong>将每个输入顶点的位置从模型空间转换到裁剪空间，为后续的图形渲染做好准备</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用GLSL 3.3版本的核心模式</span></span><br><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="comment">// 从渲染管线的location处接收顶点数据，存储到名为aPos的三维向量vec3中（这里是位置数据）</span></span><br><span class="line"><span class="built_in">layout</span>(location = <span class="number">0</span>) in vec3 aPos;</span><br><span class="line"><span class="comment">// 设置顶点最后的输出位置gl_Position=(x,y,z,w)，其中w=1.0表示这个点是一个位置而不是方向</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  gl_Position = <span class="built_in">vec4</span>(aPos.x, aPos.y, aPos.z, <span class="number">1.0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下自定义的片段着色器实现了：为每个片段指定一个固定的颜色，生成一个统一的橙色效果</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用GLSL 3.3版本的核心模式</span></span><br><span class="line"><span class="meta">#version 330 core</span></span><br><span class="line"><span class="comment">// 从渲染管线输出顶点数据FragColor，是存储最终的颜色值的四维向量</span></span><br><span class="line">out vec4 FragColor;</span><br><span class="line"><span class="comment">// 设置FragColor的具体值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  FragColor = <span class="built_in">vec4</span>(<span class="number">1.0f</span>, <span class="number">0.5f</span>, <span class="number">0.2f</span>, <span class="number">1.0f</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="4-2-着色器编译">4.2 着色器编译</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 将源码存储在字符串中</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *vertexShaderSource = <span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line">  <span class="string">&quot;layout (location = 0) in vec3 aPos;\n&quot;</span></span><br><span class="line">  <span class="string">&quot;void main() &#123;\n&quot;</span></span><br><span class="line">  <span class="string">&quot; gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\n&quot;</span></span><br><span class="line">  <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *fragmentShaderSource = <span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line">  <span class="string">&quot;out vec4 FragColor;\n&quot;</span></span><br><span class="line">  <span class="string">&quot;void main() &#123;\n&quot;</span></span><br><span class="line">  <span class="string">&quot; FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\n&quot;</span></span><br><span class="line">  <span class="string">&quot;&#125;\0&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 创建顶点着色器对象，传递着色器类型参数</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> vertexShader;</span><br><span class="line">vertexShader = <span class="built_in">glCreateShader</span>(GL_VERTEX_SHADER);</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> fragmentShader;</span><br><span class="line">fragmentShader = <span class="built_in">glCreateShader</span>(GL_FRAGMENT_SHADER);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 把着色器源码附加到着色器对象上，第一个参数是着色器对象，第二个参数是源码字符串数量，第三个参数是源码字符串</span></span><br><span class="line"><span class="built_in">glShaderSource</span>(vertexShader, <span class="number">1</span>, &amp;vertexShaderSource, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">glShaderSource</span>(fragmentShader, <span class="number">1</span>, &amp;fragmentShaderSource, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 编译着色器源码</span></span><br><span class="line"><span class="built_in">glCompileShader</span>(vertexShader);</span><br><span class="line"><span class="built_in">glCompileShader</span>(fragmentShader);</span><br></pre></td></tr></table></figure><h3 id="4-3-着色器链接">4.3 着色器链接</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 创建一个着色器程序对象</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> shaderProgram;</span><br><span class="line">shaderProgram = <span class="built_in">glCreateProgram</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 把着色器对象附加到了程序上</span></span><br><span class="line"><span class="built_in">glAttachShader</span>(shaderProgram, vertexShader);</span><br><span class="line"><span class="built_in">glAttachShader</span>(shaderProgram, fragmentShader);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 链接着色器对象</span></span><br><span class="line"><span class="built_in">glLinkProgram</span>(shaderProgram);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 删除着色器对象</span></span><br><span class="line"><span class="built_in">glDeleteShader</span>(vertexShader);</span><br><span class="line"><span class="built_in">glDeleteShader</span>(fragmentShader);</span><br></pre></td></tr></table></figure><h2 id="5-元素缓冲对象">5. 元素缓冲对象</h2><p><strong>元素缓冲对象（Element Buffer Object，EBO）</strong>：用于存储<strong>索引数据</strong>，以消除<strong>顶点数据的重复</strong></p><div class="note warning flat"><p>OpenGL的基本图元类型是三角形，如果我们想要画一个矩形，就需要<strong>两个三角形（6个顶点）<strong>拼凑到一起，但这样有两个顶点重复了，因此实际上我们</strong>只需要四个顶点</strong>即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> vertices[] = &#123;</span><br><span class="line">  <span class="comment">// 第一个三角形</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右上角</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// 右下角（重复）</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// 左上角（重复）</span></span><br><span class="line">  <span class="comment">// 第二个三角形</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// 右下角（重复）</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下角</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>   <span class="comment">// 左上角（重复）</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><p><strong>索引（index）</strong>：是创建数组时，顶点数据在数组中的位置。<code>glDrawElements</code>函数从当前绑定到<code>GL_ELEMENT_ARRAY_BUFFER</code>目标的<code>EBO</code>中获取其索引</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据</span></span><br><span class="line"><span class="type">float</span> vertices[] = &#123;</span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>,   <span class="comment">// 右上角，索引0</span></span><br><span class="line">  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>,  <span class="comment">// 右下角，索引1</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下角，索引2</span></span><br><span class="line">  <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>   <span class="comment">// 左上角，索引3</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 索引</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> indices[] = &#123;</span><br><span class="line">  <span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="comment">// 第一个三角形</span></span><br><span class="line">  <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>  <span class="comment">// 第二个三角形</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 创建对象</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> VBO, VAO, EBO;</span><br><span class="line"><span class="built_in">glGenVertexArrays</span>(<span class="number">1</span>, &amp;VAO);</span><br><span class="line"><span class="built_in">glGenBuffers</span>(<span class="number">1</span>, &amp;VBO);</span><br><span class="line"><span class="built_in">glGenBuffers</span>(<span class="number">1</span>, &amp;EBO);</span><br><span class="line"><span class="comment">// 2. 绑定VAO</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="comment">// 3. 给VBO添加数据</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ARRAY_BUFFER, <span class="built_in">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">// 4. 给EBO添加索引</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ELEMENT_ARRAY_BUFFER, EBO);</span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ELEMENT_ARRAY_BUFFER, <span class="built_in">sizeof</span>(indices), indices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">// 5. 给VAO添加属性</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>当你绑定一个 VAO 时，最后一次绑定到该 VAO 的 EBO 会被自动绑定，当你使用 glDrawElements 绘制对象时，不再需要手动绑定 EBO</p></div><h2 id="5-渲染循环中绘制图形">5. 渲染循环中绘制图形</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 指定怎样处理顶点</span></span><br><span class="line"><span class="built_in">glUseProgram</span>(shaderProgram);</span><br><span class="line"><span class="comment">// 指定怎样解析顶点</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="comment">// 指定怎样绘制顶点（没有EBO）</span></span><br><span class="line"><span class="built_in">glDrawArrays</span>(mode, index, count);</span><br><span class="line"><span class="comment">// 指定怎样绘制顶点（有EBO）</span></span><br><span class="line"><span class="built_in">glDrawElements</span>(mode, count, type, index);</span><br></pre></td></tr></table></figure><ul><li>mode是图元类型：一般是<code>GL_TRIANGLES</code></li><li>type是数据类型：一般是<code>GL_UNSIGNED_INT</code></li><li>index是顶点数组中的起始索引</li><li>count是绘制的顶点数量</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CG </tag>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenGL：窗口</title>
      <link href="/posts/c4eaa028/"/>
      <url>/posts/c4eaa028/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-头文件">1. 头文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br></pre></td></tr></table></figure><p>引入glad加载库，glfw窗口库，iostream标准输入输出库</p><div class="note warning flat"><p><strong>一定要在包含GLFW的头文件之前包含了GLAD的头文件</strong>，因为GLAD的头文件包含了正确的OpenGL头文件（例如GL/gl.h），所以需要在其它依赖于OpenGL的头文件之前包含GLAD</p></div><h2 id="2-初始化GLFW窗口">2. 初始化GLFW窗口</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glfwInit</span>();</span><br><span class="line"><span class="built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">glfwWindowHint</span>(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br></pre></td></tr></table></figure><ul><li><code>glfwInit</code>函数用来初始化GLFW</li><li><code>glfwWindowHint</code>函数来配置GLFW：第一个参数代表选项的名称（以GLFW_开头的枚举值），第二个参数接受一个整型用来设置这个选项的值（<a href="http://www.glfw.org/docs/latest/window.html#window_hints">GLFW’s window handling</a>）<ul><li><strong>将主版本号（Major）和次版本号（Minor）都设为3</strong>：因为当前大部分驱动程序和显卡都是基于OpenGL3.3版本</li><li><strong>使用核心模式</strong>：不包括旧版本中的向后兼容特性，只向前兼容，简化开发过程，处理更加高效</li></ul></li></ul><h2 id="3-创建窗口对象">3. 创建窗口对象</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GLFWwindow* window = <span class="built_in">glfwCreateWindow</span>(<span class="number">800</span>, <span class="number">600</span>, <span class="string">&quot;LearnOpenGL&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (window == <span class="literal">NULL</span>) &#123;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Failed to create GLFW window&quot;</span> &lt;&lt; endl;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">glfwMakeContextCurrent</span>(window);</span><br></pre></td></tr></table></figure><ul><li><code>glfwCreateWindow</code>：创建一个窗口对象，参数分别是（宽度，高度，标题，监视器，监视器）</li><li><code>glfwMakeContextCurrent</code>：用于设置当前的OpenGL上下文，使后续的OpenGL操作作用于指定的窗口</li></ul><h2 id="4-初始化GLAD">4. 初始化GLAD</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="built_in">gladLoadGLLoader</span>((GLADloadproc)glfwGetProcAddress)) &#123;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Failed to initialize GLAD&quot;</span> &lt;&lt; endl;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>GLADloadproc</code>：函数指针类型，这里将glfwGetProcAddress转换为GLADloadproc类型</li><li><code>glfwGetProcAddress</code>：用于获取OpenGL函数指针</li><li><code>gladLoadGLLoader</code>：用于根据OpenGL函数指针来加载OpenGL函数</li></ul><h2 id="5-初始化视口和回调视口">5. 初始化视口和回调视口</h2><p><strong>视口（viewport）</strong>：是窗口中渲染图形的实际尺寸大小，理论上不能大于窗口但可以小于等于窗口<br><strong>回调（callback）</strong>：用户可以改变窗口大小，而视口大小也应该跟着窗口大小的改变而改变</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前两个参数控制窗口左下角的位置。第三个和第四个参数控制渲染窗口的宽度和高度</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">framebuffer_size_callback</span><span class="params">(GLFWwindow* window, <span class="type">int</span> width, <span class="type">int</span> height)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">glViewport</span>(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 传递窗口对象和视口回调函数，用于实现每次窗口大小被调整的时候都被自动调用（第一次创建窗口的时候也会被调用，相当于初始化了）</span></span><br><span class="line"><span class="built_in">glfwSetFramebufferSizeCallback</span>(window, framebuffer_size_callback);</span><br></pre></td></tr></table></figure><h2 id="6-渲染循环">6. 渲染循环</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(!<span class="built_in">glfwWindowShouldClose</span>(window)) &#123;</span><br><span class="line">  <span class="built_in">glfwSwapBuffers</span>(window);</span><br><span class="line">  <span class="built_in">glfwPollEvents</span>();    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>渲染循环（Render Loop）</strong>：在GLFW退出前保持运行，从而能让开发者持续观察渲染效果</p><ul><li><code>glfwWindowShouldClose</code>：检查窗口关闭请求（如用户点击窗口关闭按钮）</li><li><code>glfwSwapBuffers</code>：交换前后缓冲，将渲染的图像显示到窗口上，在每次渲染循环的最后进行，以确保屏幕上显示的内容是最新的</li><li><code>glfwPollEvents</code>：检查有没有触发什么事件（如键盘输入，鼠标移动，窗口调整）</li></ul><div class="note info flat"><p><strong>双缓冲（Double Buffer）</strong>：通过交换前后缓冲，可以<strong>立即</strong>将图像呈现出来，从而消除<strong>逐渐渲染的图像闪烁</strong>问题</p><ul><li>前缓冲：当前显示在屏幕窗口上的图像</li><li>后缓冲：正在被绘制的图像</li></ul></div><h2 id="7-销毁窗口">7. 销毁窗口</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">glfwDestroyWindow</span>(window);</span><br><span class="line"><span class="built_in">glfwTerminate</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><ul><li><code>glfwDestroyWindow</code>：销毁指定的窗口，释放与窗口相关的所有资源</li><li><code>glfwTerminate</code>：清理GLFW库，终止使用GLFW，通常在程序结束或程序出错时调用</li></ul><h2 id="8-键盘输入">8. 键盘输入</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以返回键(Esc)为例</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">processInput</span><span class="params">(GLFWwindow *window)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">glfwGetKey</span>(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)</span><br><span class="line">    <span class="built_in">glfwSetWindowShouldClose</span>(window, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>glfwGetKey</code>：用于检查特定键的当前状态，<code>GLFW_PRESS</code>表示当前被按下，<code>GLFW_REPEAT</code>表示当前被持续按住，<code>GLFW_RELEASE</code>表示当前未被按下</li><li><code>glfwSetWindowShouldClose</code>：明确告诉GLFW窗口应当关闭，常用于响应用户输入</li></ul><h2 id="9-清空颜色">9. 清空颜色</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以清空颜色为例</span></span><br><span class="line"><span class="built_in">glClearColor</span>(<span class="number">0.2f</span>, <span class="number">0.3f</span>, <span class="number">0.3f</span>, <span class="number">1.0f</span>);</span><br><span class="line"><span class="built_in">glClear</span>(GL_COLOR_BUFFER_BIT);</span><br></pre></td></tr></table></figure><ul><li><code>glClearColor</code>：设置清除后的颜色(R,G,B,A)</li><li><code>glClear</code>：清除指定的缓冲区，<code>GL_COLOR_BUFFER_BIT</code>表示颜色缓冲区</li></ul><h2 id="10-完整代码">10. 完整代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">framebuffer_size_callback</span><span class="params">(GLFWwindow* window, <span class="type">int</span> width, <span class="type">int</span> height)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">glViewport</span>(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 键盘输入函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">processInput</span><span class="params">(GLFWwindow *window)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">glfwGetKey</span>(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)</span><br><span class="line">    <span class="built_in">glfwSetWindowShouldClose</span>(window, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 初始化GLFW</span></span><br><span class="line">  <span class="built_in">glfwInit</span>();</span><br><span class="line">  <span class="built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>); <span class="comment">// 设置主版本为3</span></span><br><span class="line">  <span class="built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>); <span class="comment">// 设置次版本为3</span></span><br><span class="line">  <span class="built_in">glfwWindowHint</span>(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE); <span class="comment">// 设置使用核心模式</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建窗口</span></span><br><span class="line">  GLFWwindow* window = <span class="built_in">glfwCreateWindow</span>(<span class="number">800</span>, <span class="number">600</span>, <span class="string">&quot;Simple Triangle&quot;</span>, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>);</span><br><span class="line">  <span class="keyword">if</span> (!window) &#123;</span><br><span class="line">    cerr &lt;&lt; <span class="string">&quot;Failed to create GLFW window&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">glfwMakeContextCurrent</span>(window); <span class="comment">// 设置为上下文</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化GLAD</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">gladLoadGLLoader</span>((GLADloadproc)glfwGetProcAddress))&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Failed to initialize GLAD&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化视口</span></span><br><span class="line">  <span class="built_in">glViewport</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line">  <span class="built_in">glfwSetFramebufferSizeCallback</span>(window, framebuffer_size_callback);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 渲染循环</span></span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">glfwWindowShouldClose</span>(window)) &#123;</span><br><span class="line">    <span class="comment">// 输入</span></span><br><span class="line">    <span class="built_in">processInput</span>(window);</span><br><span class="line">    <span class="comment">// 渲染</span></span><br><span class="line">    <span class="built_in">glClearColor</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line">    <span class="built_in">glClear</span>(GL_COLOR_BUFFER_BIT);</span><br><span class="line">    <span class="comment">// 呈现</span></span><br><span class="line">    <span class="built_in">glfwSwapBuffers</span>(window);</span><br><span class="line">    <span class="built_in">glfwPollEvents</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 销毁窗口</span></span><br><span class="line">  <span class="built_in">glfwDestroyWindow</span>(window);</span><br><span class="line">  <span class="built_in">glfwTerminate</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CG </tag>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图形系统</title>
      <link href="/posts/654241d3/"/>
      <url>/posts/654241d3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-图形系统">1. 图形系统</h2><p>图形系统组成及相互关系</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221868.png" alt=""></p><p>图形软件和图形硬件</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221867.png" alt=""></p><p>图形应用数据结构：</p><ul><li>几何信息：形状、大小</li><li>拓扑信息：位置、布局</li><li>属性信息：颜色、亮度、纹理</li><li>非几何信息：标题、标记</li></ul><h2 id="2-图形硬件">2. 图形硬件</h2><h3 id="2-1-图形显示设备">2.1 图形显示设备</h3><h4 id="2-1-1-阴极射线管（CRT）">2.1.1 阴极射线管（CRT）</h4><p>工作原理：高速电子束由<strong>电子枪</strong>发出，经过<strong>聚焦系统</strong>、<strong>加速系统</strong>和<strong>磁偏转系统</strong>，到达荧光屏的特定位置，荧光物质的电子被轰击后从低能态高能态，但是高能态的电子十分不稳定，会重新跃迁回低能态，这期间会释放出能量，以光的形式表现出来</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221866.png" alt=""></p><p><strong>电子枪</strong>：发射电子，并控制其强度</p><ul><li>加热器：升温使金属阴极上的电子摆脱能垒的束缚</li><li>金属阴极：通常由铯、锂或其他金属制成，特殊的金属存储大量电子</li><li>电平控制器：加上正电压，电子束大量通过，形成较亮的点；加上负电压，电子束被部分或全部阻截，形成较暗的点</li></ul><p><strong>聚焦系统</strong>：是一个电透镜，将分散的电子聚焦成细束</p><p><strong>加速系统</strong>：通过施加高电压来增加电子的动能，使其携带足够多的能量来激发荧光物质</p><p><strong>磁偏转系统</strong>：使用磁场控制电子束的路径，使其能够精确地定位到荧光屏的特定位置</p><mark class="hl-label orange">如何保持荧光屏上有稳定图像？</mark> <ul><li>持续发射电子束来刷新屏幕：刷新一次指电子束从上到下将荧光屏扫描一次</li><li>足够快地发射电子束：大约每秒刷新60次即60帧，人眼才能感觉到屏幕不闪烁，一般65帧以上人眼才会感觉舒服</li><li>隔行扫描：如果无法保证扫描速度，则可以采取隔行扫描的技术，即每次<strong>交替扫描偶数/奇数行</strong>，这样能够<strong>近似扫描频率加倍</strong>的效果</li></ul><mark class="hl-label orange">如何实现彩色？</mark> <ul><li>荧光屏上涂有三种荧光物质，分别发送<strong>红绿蓝三原色</strong>的光</li><li>电子束发送三束电子来激发三种荧光物质，中间通过一个<strong>控制栅格</strong>来决定电子束的到达位置</li><li>电子枪有8位256级的<strong>强度控制</strong>，就可以利用三原色来构造各种各样的颜色</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221865.png" alt=""></p><h4 id="2-1-2-液晶显示器（LCD）">2.1.2 液晶显示器（LCD）</h4><p>液晶特性：液晶受到电压影响时，物理性质会改变，此时通过它的光的<strong>折射角</strong>会发生变化，从而产生色彩</p><p>显示原理：光线首先通过一个垂直光偏振器，然后通过控制两片夹有液晶材料的平行玻璃板之间的电极，来改变交叉处液晶材料特性，进而改变光的偏振状态，电极排布成行和列，形成一个网格，每一个行列交叉处定义了一个像素，最后光线通过水平光偏振器</p><p>亮暗控制：通过精确控制每个像素的电压，液晶显示器能够控制光的亮度</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221864.png" alt=""></p><div class="note warning flat"><p>成像原理是光的折射，因此在不同角度看液晶显示屏必然会有不同的效果，能看到清晰图像的最大角度被称为可视角度，工业上有相关标准来定义可视角度</p></div><h3 id="2-2-图形显示方式">2.2 图形显示方式</h3><h4 id="2-2-1-随机扫描显示">2.2.1 随机扫描显示</h4><p>绘制原理：电子束可以<strong>在显示屏的任意方向上自由移动</strong>，按照命令用<strong>画线</strong>的方式绘出图形</p><p>刷新原理：图形的定义以<strong>矢量画线命令</strong>的形式存放在显示文件中，由显示处理器处理，更改显示文件以在下一次刷新时修改图形</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221863.png" alt=""></p><p>性质</p><ul><li>响应快速，适合实时图形和动画</li><li>适合显示矢量图形，如线条和轮廓</li><li>不能逼真地显示彩色图形</li><li>图形的显示质量和处理时长都与一帧的画线数量相关</li></ul><h4 id="2-2-2-光栅扫描显示">2.2.2 光栅扫描显示</h4><p>绘制原理：电子束按照<strong>固定的扫描顺序</strong>进行扫描，即先从荧光屏的左上角开始，向右扫描一条水平线，然后迅速回到最左边下一行的位置，继续扫描第二条水平线，以此类推直到最后一条水平线</p><p>刷新原理：光栅扫描显示设备是画点设备，可以看作成一个点阵，改变电子束的强度来控制每个像素点的亮度和颜色</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221862.png" alt=""></p><p>性质</p><ul><li>能够清晰显示复杂的位图图像，细节丰富</li><li>支持丰富的颜色深度和图形效果</li><li>占用内存较大</li><li>显示斜线时存在<strong>线条边缘的阶梯效应</strong>，即走样</li></ul><h4 id="2-2-3-光栅扫描显示系统">2.2.3 光栅扫描显示系统</h4><p>组成</p><ul><li>显示器：由像素构成的光栅网格</li><li>视频控制器/显示控制器：进行光栅操作，如刷新、移动、裁剪、消影等</li><li>帧缓冲存储器/帧缓存/显存：存储像素的灰度、颜色等图像信息</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221861.png" alt=""></p><p>性质</p><ul><li>分辨率：行方向和列方向可寻址的地址数的乘积，表示显示器的清晰度</li><li>帧率/刷新率：每秒刷新的帧数，表示显示器的流畅度</li></ul><p>分辨率m×n，颜色数K，和显存大小V满足：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>≥</mo><mi>n</mi><mo>×</mo><mi>m</mi><mo>×</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">v \geq n \times m \times \log_2(K)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span></p><h3 id="2-3-显卡和GPU">2.3 显卡和GPU</h3><p>显卡：全称显示接口卡，也叫显示适配器，是主机与显示器连接的桥梁，用于控制计算机的图形输出</p><ul><li>图形处理器（GPU）：处理需要显示的数据</li><li>显存（video memory）：存储图像数据的高速内存</li><li>数模转换器（DAC）：将数字信号转换为模拟信号，并传输给显示器</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221860.png" alt=""></p><div class="note info flat"><p>如果说CPU是主机的心脏，那么GPU就是显卡的心脏</p></div><p>GPU的最重要特性：<strong>高效执行大量并行计算</strong></p><ul><li>图形渲染：适合实时生成和渲染3D图像，常用于游戏和动画</li><li>并行计算：适合大规模计算任务，性能远超CPU，常用于深度学习和人工智能</li></ul><p>目前显卡供应商主要有：英特尔（Intel）、超微半导体（AMD）和英伟达（Nvidia）</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221859.png" alt=""></p><h2 id="3-图形软件">3. 图形软件</h2><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221858.png" alt=""></p><h2 id="4-图形流水线">4. 图形流水线</h2><h3 id="4-1-三阶段">4.1 三阶段</h3><ol><li><strong>应用程序阶段</strong>：开发者将数据以图元的形式提供给图形硬件</li><li><strong>几何处理阶段</strong>：负责处理多边形和顶点操作，如顶点变换、投影、裁剪、着色、光照计算等，以生成最终的几何图形</li><li><strong>光栅阶段</strong>：屏幕对象被传到像素处理器进行光栅化，然后输出到显示器</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221857.png" alt=""></p><h3 id="4-2-处理单元">4.2 处理单元</h3><p><strong>顶点（vertex）</strong>：是构成3D模型的基本单元，每个顶点包含位置坐标向量（X、Y、Z）和其他属性信息</p><p><strong>点云（Point Cloud）</strong>：大量顶点组成的集合，用于表示3D空间中的物体或场景</p><p><strong>图元（primitive）</strong>：是图形渲染的基本构建块，通常指三角形、线段或点，用于描述物体的形状</p><p><strong>片元（fragment）</strong>：是光栅化的结果，包含颜色、深度、纹理等信息</p><p><strong>像素（pixel）</strong>：是图像的最小显示单元，表示屏幕上可见的单个点</p><div class="note warning flat"><p>片元包含了比像素更多的信息，单个像素是最终呈现在图像上的点，可能会从多个片元中挑选一个</p></div><h3 id="4-3-处理操作">4.3 处理操作</h3><p>三角化（Triangulation）：将复杂的多边形或曲面分解为三角形，这是因为三角形是最简单的图形单元，能够有效地表示各种形状，简化渲染计算</p><p>投影（Projection）：将3D坐标转换为2D坐标的过程</p><p>裁剪（Clipping）：裁剪是去除视野外的图形部分，以提高渲染效率</p><p>纹理映射（Texturing）：将纹理应用于3D模型表面的过程，将图像细节与模型几何相结合，增强视觉效果</p><p>遮挡探测（Occlusion Detection）：确定哪些对象被其他对象遮挡，以优化渲染顺序和效率</p><p>光栅化（Rasterization）：将几何图形转换为片元的过程</p><h3 id="4-4-OpenGL流水线">4.4 OpenGL流水线</h3><p><strong>顶点着色器</strong>：负责对顶点进行坐标变换、投影变换等操作<br><strong>光栅着色器器</strong>：将图元转换为片元<br><strong>片元着色器</strong>：负责对片元进行颜色处理、纹理处理等操作</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221856.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是计算机图形学</title>
      <link href="/posts/7e3c0534/"/>
      <url>/posts/7e3c0534/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-计算机图形学的定义">1. 计算机图形学的定义</h2><p>ISO：研究通过计算机将数据转换为图形，并在专门显示设备上显示的原理、方法和技术的学科</p><p>IEEE：利用计算机产生图形图像的艺术或科学</p><p>国内：利用计算机研究图形的表示、生成、处理和显示的学科</p><p>汇总：研究通过计算机<strong>将场景对象转换为图形</strong>并<strong>进行显示为图像</strong>的一门学科</p><ul><li>表示/建模：如何用图形方式表示真实或虚拟世界中的场景对象</li><li>显示/绘制：将数字几何模型转换为直观形象的图像形式</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221871.png" alt=""></p><p>图形和图像的区别</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221872.png" alt=""></p><p>图形学相关学科</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221870.png" alt=""></p><h2 id="2-计算机图形学的核心目标">2. 计算机图形学的核心目标</h2><p>核心目标：创建有效的视觉交流，帮助人脑从图形图像的角度理解事物本质</p><p><strong>视觉交流</strong></p><ol><li>观察-&gt;问题/信息：通过观察，明确问题或要传达的信息</li><li>问题/信息-&gt;几何：通过建模表达问题，使问题可以用几何模型抽象地表示</li><li>几何-&gt;图像：将问题或信息可视化</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerGraphic/Chapter1,2/202409221221869.png" alt=""></p><p>应用领域</p><ul><li><strong>计算机辅助设计与制造（CAD/CAM）</strong>：工程和建筑设计，帮助创建精确的2D和3D模型</li><li><strong>科学计算可视化（visualization）</strong>：将复杂的数据和模型以可视化形式呈现，使科学研究和分析更加直观</li><li><strong>虚拟现实（Virtual Reality）</strong>：提供沉浸式体验，广泛应用于游戏、教育和模拟训练中</li><li><strong>动画（Animation）</strong>：创造动态视觉内容，涵盖电影、游戏和广告等多个领域</li></ul><h2 id="3-OpenGL">3. OpenGL</h2><h3 id="3-1-介绍">3.1 介绍</h3><p>OpenGL（Open Graphics Library）被认为是一个应用程序编程接口（API），包含了一系列可以操纵图形和图像的函数，其严格规定了每个函数该如何执行，以及他们的输入输出值</p><div class="note warning flat"><p>实际上，OpenGL本身并不是一个API，它仅仅是一个由Khronos组织制定并维护的规范，具体的实现是由驱动开发商针对特定显卡实现的</p></div><h3 id="3-2-模式">3.2 模式</h3><p>立即渲染模式（Immediate mode）：允许程序直接调用绘制命令，并立即渲染图形，这种方式易于使用，但效率较低，因为每个绘制调用都会与GPU通信</p><p>核心模式（Core-profile）：推荐使用着色器和顶点缓冲对象来提高性能和灵活性，提供了更多的灵活性，更高的效率，更重要的是可以更深入的理解图形编程</p><h3 id="3-3-状态机">3.3 状态机</h3><p><strong>状态机（State Machine）</strong>：OpenGL依赖于一系列变量来指示运行</p><p><strong>上下文（Context）</strong>：包含OpenGL所有状态和资源的环境，每个上下文是独立的，通常在不同的窗口或线程中创建，并且使用当前的OpenGL上下文来渲染</p><mark class="hl-label orange">OpenGL实现的本质</mark> <ul><li>设置选项：使用<strong>状态设置函数</strong>改变上下文指示绘图</li><li>操作缓冲：使用<strong>状态使用函数</strong>根据上下文执行操作</li><li>渲染图形：使用<strong>状态渲染函数</strong>根据上下文进行渲染</li></ul><h3 id="3-4-对象">3.4 对象</h3><p>OpenGL库是用<strong>C语言</strong>写的，同时也支持多种语言的派生，但其内核仍是一个C库</p><p>OpenGL对象（object）：是一些选项的集合，代表OpenGL状态的一个子集</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">object_name</span> &#123;</span><br><span class="line">  <span class="type">float</span>  option1;</span><br><span class="line">  <span class="type">int</span>    option2;</span><br><span class="line">  <span class="type">char</span>[] name;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>OpenGL结构体（struct）：OpenGL上下文被当做一个大的结构体，通过库中的函数来设置结构体中的对象，从而改变OpenGL状态</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">OpenGL_Context</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  object* object_Window_Target;</span><br><span class="line">  ...     </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-5-GLAD和GLFW">3.5 GLAD和GLFW</h3><p><strong>GLAD</strong>：由于OpenGL的功能在不同平台和驱动中可能不同，开发者需要在运行时获取函数地址并将其保存在一个函数指针中供以后使用，非常复杂且繁琐。而GLAD是一个OpenGL加载库，可以帮助开发者动态加载所需的OpenGL函数，且不必担心兼容性问题</p><p><strong>GLFW</strong>：是一个跨平台的窗口管理库，提供了一些渲染物体所需的最低限度的接口，用于创建OpenGL上下文、定义窗口参数以及处理用户输入，使得开发者可以专注于图形渲染，而不用处理底层平台差异</p><p>配置参考</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.csdn.net/m0_50695988/article/details/134497796">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a461b627dc2.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">VsCode配置OpenGL开发环境【自用备忘】</div>          <div class="tag-link-sitename">wild-civil</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h3 id="3-6-特点">3.6 特点</h3><ul><li>应用广泛：无论是在PC机上，还是在工作站上，甚至在大型机和超级计算机上都能表现出它的高性能和强大威力</li><li>跨平台性：OpenGL能够在几乎所有的主流操作系统上运行</li><li>可扩展性：可以利用API进行功能扩充</li><li>绘制专一性：OpenGL只提供绘制操作访问，而没有提供建立窗口、接受用户输入等机制，它要求所运行环境中的窗口系统提供这些机制、</li><li>网络透明性：OpenGL允许一个运行在工作站上的进程在本机或通过网络在远程工作站上显示图形</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中级SQL</title>
      <link href="/posts/2566557f/"/>
      <url>/posts/2566557f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-连接">1. 连接</h2><p>什么是连接：<strong>将多个表中的元组经过特定方式结合在一起，以便进行特定的查询</strong></p><p>为什么使用连接：<strong>笛卡尔积会生成大量无意义的元组组合</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter4/202409241401382.png" alt=""></p><h3 id="1-1-NATURAL-JOIN">1.1 NATURAL JOIN</h3><p>自动基于两个表中<strong>同名的属性</strong>来匹配元组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> student.name</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">natural</span> <span class="keyword">join</span> takes;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><code>relation1 natural join relation2,relation3</code>不等价于<code>relation1 natural join relation2 natural join relation3</code>，因为前者是与relation3的笛卡尔积，后者是与relation3的自然连接</p></div><h3 id="1-2-INNER-JOIN">1.2 INNER JOIN</h3><p><code>inner join...on &lt;谓词&gt;</code>：设置通用的谓词来明确连接条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 内连接</span></span><br><span class="line"><span class="keyword">select</span> student.ID,takes.ID,name,course_id</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> takes <span class="keyword">on</span> student.ID <span class="operator">=</span> take.ID;</span><br></pre></td></tr></table></figure><div class="note info flat"><p><code>join</code>缺省情况下是内连接<code>inner join</code></p></div><h3 id="1-3-OUTER-JOIN">1.3 OUTER JOIN</h3><div class="note info flat"><p>自然连接和内连接的局限性：<strong>仅保留匹配的记录，而丢失其他元组，但有时候我们又希望保留部分不匹配元组</strong></p></div><p><code>left/right/full outer join...on &lt;谓词&gt;</code>：不仅返回满足连接条件的行，还会返回部分未匹配的行，自动用空值填充缺失的属性</p><ul><li><strong>左外连接</strong>：只保留出现在左边的关系中的元组</li><li><strong>右外连接</strong>：只保留出现在右边的关系中的元组</li><li><strong>全外连接</strong>：保留出现在两个关系中的元组</li></ul><p>使用左外连接<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter4/202409241401384.png" alt=""></p><p>使用右外连接<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter4/202409241401385.png" alt=""></p><h3 id="1-4-USING">1.4 USING</h3><p><code>JOIN USING (&lt;属性列表&gt;)</code>：用于指定连接两个表时使用的相同列名，使得查询更加简洁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 列出所有被选课程的信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> takes <span class="keyword">join</span> course <span class="keyword">using</span> (course_id);</span><br></pre></td></tr></table></figure><h3 id="1-5-总结">1.5 总结</h3><p>实际上，连接可以分为<strong>连接类型</strong>和<strong>连接条件</strong>，<strong>任意的连接类型可以和任意的连接条件进行组合</strong></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter4/202409241401386.png" alt=""></p><p>以下四种方式是等价的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 自然连接</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">natural</span> <span class="keyword">join</span> takes;</span><br><span class="line"><span class="comment">-- 内连接</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">inner</span> <span class="keyword">join</span> takes <span class="keyword">on</span> student.ID <span class="operator">=</span> take.ID;</span><br><span class="line"><span class="comment">-- USING运算</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">join</span> takes <span class="keyword">using</span> (ID);</span><br><span class="line"><span class="comment">-- 使用where子句</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> student,takes</span><br><span class="line"><span class="keyword">where</span> student.ID <span class="operator">=</span> takes.ID;</span><br></pre></td></tr></table></figure><h2 id="2-视图">2. 视图</h2><p><code>create view &lt;视图名&gt; as &lt;查询表达式&gt;</code>：视图是<strong>虚拟表，不存储数据，每次查询时动态生成结果</strong>，目的是用户<strong>可以不必重复编写</strong>复杂的SQL语句来访问同一个表</p><div class="note warning flat"><p>普通视图可以看做成是<strong>永久性的with语句</strong></p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创造物理系在2017年秋季开设的所有课程信息视图</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> physics_fall_2017 <span class="keyword">as</span></span><br><span class="line">  <span class="keyword">select</span> course.course_id,sec_id,building,room_number</span><br><span class="line">  <span class="keyword">from</span> course,section</span><br><span class="line">  <span class="keyword">where</span> course.course_id <span class="operator">=</span> section.course_id</span><br><span class="line">    <span class="keyword">and</span> course.dept_name <span class="operator">=</span> <span class="string">&#x27;Physics&#x27;</span></span><br><span class="line">    <span class="keyword">and</span> section.semester <span class="operator">=</span> <span class="string">&#x27;Fall&#x27;</span></span><br><span class="line">    <span class="keyword">and</span> section.year <span class="operator">=</span> <span class="number">2017</span>;</span><br><span class="line"><span class="comment">-- 查看视图</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> physics_fall_2017;</span><br><span class="line"><span class="comment">-- 使用视图</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> physics_fall_2017;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter4/202409241401378.png" alt=""></p><p><strong>物化视图（materialized view）</strong>：是一种特殊类型的视图，它在数据库中存储实际的数据，而不是简单地存储查询定义，同时物化视图需要持续刷新来保持<strong>数据的最新状态</strong></p><p>如果视图满足下列可更新条件，对视图的更新会反映到基表中</p><ul><li>简单视图：<strong>没有GROUP BY、DISTINCT、ODDERED BY和HAVING等</strong></li><li>单一表：定义视图时<strong>不允许使用连接，嵌套子查询，集合运算</strong></li><li>没有计算列：<strong>没有计算列、表达式和聚集函数</strong></li></ul><h2 id="3-约束">3. 约束</h2><h3 id="3-1-NOT-NULL">3.1 NOT NULL</h3><p><strong>非空约束</strong>：某些属性的值不允许为空</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 姓名和预算不允许为空</span></span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">budget <span class="type">numeric</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>主码始终满足非空约束</p></div><h3 id="3-2-UNIQUE">3.2 UNIQUE</h3><p><strong>唯一性约束</strong>：关系中没有两个元组在某些属性上的取值相同</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 同一学期同一建筑同一房间同一时间不允许有两个课程</span></span><br><span class="line"><span class="keyword">unique</span>(semester,building,room_number,time_slot_id)</span><br></pre></td></tr></table></figure><h3 id="3-3-CHECK">3.3 CHECK</h3><p><strong>检查约束</strong>：指定一个谓词，关系中的每个元组都必须满足这个谓词</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 学期必须是四个季节之一</span></span><br><span class="line"><span class="keyword">check</span>(semester <span class="keyword">in</span> (<span class="string">&#x27;Fall&#x27;</span>,<span class="string">&#x27;Winter&#x27;</span>,<span class="string">&#x27;Spring&#x27;</span>,<span class="string">&#x27;Summer&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="3-4-REFERENCES">3.4 REFERENCES</h3><p><strong>引用约束</strong>：确保在一个表中引用另一个表的行时，引用的值在被引用的表中是有效的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 系名必须存在于系表中</span></span><br><span class="line"><span class="keyword">foreign</span> key (dept_name) <span class="keyword">references</span> department(dept_name)</span><br></pre></td></tr></table></figure><h3 id="3-5-CASCADE">3.5 CASCADE</h3><p><strong>级联约束</strong>：用在外码中，当主表中的记录被删除/更新时，自动删除/更新外表中相关的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreign</span> key (dept_name) <span class="keyword">references</span> department(dept_name) </span><br><span class="line"><span class="comment">-- 删除被引用的元组时，自动删除所有引用该元组的元组</span></span><br><span class="line"><span class="keyword">on</span> <span class="keyword">delete</span> cascade,</span><br><span class="line"><span class="comment">-- 更新被引用的元组时，自动更新所有引用该元组的元组</span></span><br><span class="line"><span class="keyword">on</span> <span class="keyword">update</span> cascade</span><br></pre></td></tr></table></figure><h3 id="3-6-CONSTRAINT">3.6 CONSTRAINT</h3><p><strong>约束命名</strong>：给上述约束起名字，当违反约束时可以根据名称来明确错误类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给check约束命名为min_salary</span></span><br><span class="line">salary <span class="type">numeric</span>(<span class="number">8</span>,<span class="number">2</span>), <span class="keyword">constraint</span> min_salary <span class="keyword">check</span>(salary <span class="operator">&gt;</span> <span class="number">20000</span>)</span><br></pre></td></tr></table></figure><h3 id="3-7-assertion">3.7 assertion</h3><p><strong>断言约束</strong>：用于定义跨多个表或行的全局条件，确保数据库中的数据满足特定的规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用于检查所有学生的总学分是否与他们实际获得的学分一致</span></span><br><span class="line"><span class="keyword">create</span> assertion tot_credits_constraint <span class="keyword">check</span>(\</span><br><span class="line">  <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    <span class="keyword">select</span> ID</span><br><span class="line">    <span class="keyword">from</span> student</span><br><span class="line">    <span class="keyword">where</span> tot_cred <span class="operator">&lt;&gt;</span> (</span><br><span class="line">      <span class="keyword">select</span> <span class="built_in">coalesce</span>(<span class="built_in">sum</span>(credits), <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">from</span> takes <span class="keyword">natural</span> <span class="keyword">join</span> course</span><br><span class="line">      <span class="keyword">where</span> student.ID <span class="operator">=</span> takes.ID <span class="keyword">and</span> grade <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><div class="note success flat"><p>SQL不提供<code>for all X, P(X)</code>的结构，所以一般采用<code>not exists X that not P(X)</code>，即<strong>对全部X都有P==不存在X不满足P</strong></p></div><h2 id="4-数据处理">4. 数据处理</h2><h3 id="4-1-日期和时间">4.1 日期和时间</h3><p>数据类型</p><ul><li><code>DATE</code>：存储年月日，<strong>YYYY-MM-DD</strong></li><li><code>TIME</code>：存储时分秒，<strong>HH:MM:SS</strong></li><li><code>DATETIME/TIMESTAMP</code>：存储时间戳，<strong>YYYY-MM-DD HH:MM:SS</strong></li></ul><p>内置函数</p><ul><li><code>CURDATE()</code>：返回当前年月日</li><li><code>CURTIME()</code>：返回当前时分秒</li><li><code>NOW()</code>：返回当前时间戳</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建一个事件表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> events (</span><br><span class="line">  event_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  event_date <span class="type">DATE</span>,</span><br><span class="line">  event_time <span class="type">TIME</span>,</span><br><span class="line">  event_timestamp <span class="type">TIMESTAMP</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入事件记录</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> events (event_id, event_date, event_time, event_timestamp) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="built_in">CURRENT_DATE</span>, <span class="built_in">CURRENT_TIME</span>, NOW()),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;2024-09-23&#x27;</span>, <span class="string">&#x27;14:30:00&#x27;</span>, <span class="string">&#x27;2024-09-23 14:30:00&#x27;</span>);</span><br><span class="line"><span class="comment">-- 查询事件记录的年份</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(event_timestamp) <span class="keyword">AS</span> <span class="keyword">year</span>,</span><br><span class="line"><span class="keyword">FROM</span> events;</span><br></pre></td></tr></table></figure><h3 id="4-2-类型转换">4.2 类型转换</h3><h4 id="4-2-1-CAST">4.2.1 CAST</h4><p><code>cast(expression as type)</code>：将表达式e转换为类型t</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将字符串 &#x27;123&#x27; 转换为整数 123</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;123&#x27;</span> <span class="keyword">AS</span> SIGNED);</span><br><span class="line"><span class="comment">-- 将字符串 &#x27;2023-10-01&#x27; 转换为日期</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;2023-10-01&#x27;</span> <span class="keyword">AS</span> <span class="type">DATE</span>);</span><br><span class="line"><span class="comment">-- 将浮点数 123.45 转换为小数类型</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="number">123.45</span> <span class="keyword">AS</span> <span class="type">DECIMAL</span>(<span class="number">5</span>, <span class="number">2</span>));</span><br></pre></td></tr></table></figure><h4 id="4-2-2-FORMAT">4.2.2 FORMAT</h4><p><code>format(number, decimal)</code>：格式化数字，<strong>添加千位分隔符并指定小数位数</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 返回 &#x27;1,234,567.89&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> FORMAT(<span class="number">1234567.89</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">-- 返回 &#x27;1,235&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> FORMAT(<span class="number">1234.567</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><h4 id="4-2-3-COALESCE">4.2.3 COALESCE</h4><p><code>coalesce(column, value)</code>：用于提供默认值或处理空值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 显示教师的ID和工资，但是将空工资显示为-1</span></span><br><span class="line"><span class="keyword">select</span> ID, <span class="built_in">coalesce</span>(salary, <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">from</span> instructor;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>处理后的值必须符合属性数据结构</p></div><h3 id="4-3-DEFAULT">4.3 DEFAULT</h3><p>用于插入数据时，指定某些属性的初始值/缺省值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 学生的初始学分为0</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">  ID          <span class="type">varchar</span> (<span class="number">5</span>),</span><br><span class="line">  name        <span class="type">varchar</span> (<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">  dept_name   <span class="type">varchar</span> (<span class="number">20</span>),</span><br><span class="line">  tot_cred    <span class="type">numeric</span> (<span class="number">3</span>,<span class="number">0</span>) <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line">  <span class="keyword">primary</span> key (ID)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="4-4-LOB">4.4 LOB</h3><ul><li>字符大对象（CLOB）：用于存储大量的文本数据</li><li>二进制大对象（BLOB）：用于存储大量的二进制数据，如图像、音频、视频等</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">book_review <span class="type">clob</span>(<span class="number">10</span>KB) </span><br><span class="line">picture <span class="type">blob</span>(<span class="number">10</span>MB) </span><br><span class="line">movie <span class="type">blob</span>(<span class="number">2</span>GB)</span><br></pre></td></tr></table></figure><h3 id="4-5-自定义">4.5 自定义</h3><p><code>create type type_name as data_type</code>：自定义一个数据类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建美元数据类型并使用</span></span><br><span class="line"><span class="keyword">create</span> type Dollars <span class="keyword">as</span> <span class="type">numeric</span>(<span class="number">12</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> department(</span><br><span class="line">  dept_name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">  building  <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">  budget    Dollars</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>create domain domain_name domain_definition</code>：自定义一个域类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 不仅可以设置数据类型，还可以添加约束条件</span></span><br><span class="line"><span class="keyword">create</span> domain Dollars <span class="keyword">as</span> <span class="type">numeric</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h3 id="4-6-AUTO-INCREMENT">4.6 AUTO_INCREMENT</h3><p>为主码生成唯一的、递增的值，而不是人为去一个个设置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">  ID number(<span class="number">5</span>) AUTO_INCREMENT</span><br><span class="line">);</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>MySQL会为AUTO_INCREMENT设置一个计数器，计数器是单调递增的，即如果删除元组不会导致计数器回退，如果数据库发现当前id已经被占用，则继续递增</p></div><h2 id="5-授权">5. 授权</h2><h3 id="5-1-GRANT">5.1 GRANT</h3><p><code>grant &lt;权限列表&gt; (&lt;属性列表&gt;) on &lt;对象列表&gt; to &lt;用户/角色列表&gt;;</code></p><ul><li><code>(属性列表)</code>是可选的，不是所有数据库都支持</li><li>对象可以是表、视图、数据库</li><li>关键字<code>all previleges</code>表示授予全部权限</li><li>关键字<code>public</code>表示公开，即授权给全部人</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给数据库用户Amit授予了在department关系上的选择权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> department <span class="keyword">to</span> Amit;</span><br><span class="line"><span class="comment">-- 授予关于department的全部权限给全部人</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> previleges <span class="keyword">on</span> department <span class="keyword">to</span> public;</span><br></pre></td></tr></table></figure><h3 id="5-2-ROLE">5.2 ROLE</h3><p>不必给每一个用户都使用相同命令来设置权限，而是<strong>先给角色授予权限，再给用户授予角色即可</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 授予用户权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">delete</span> <span class="keyword">on</span> department <span class="keyword">to</span> dasi;</span><br><span class="line"><span class="comment">-- 创建老师和教导主任角色</span></span><br><span class="line"><span class="keyword">create</span> role dean;</span><br><span class="line"><span class="keyword">create</span> role teacher;</span><br><span class="line"><span class="comment">-- 授予角色权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">update</span> <span class="keyword">on</span> teaches <span class="keyword">to</span> dean;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> teaches <span class="keyword">to</span> teacher;</span><br><span class="line"><span class="comment">-- 将老师的权限授予教导主任</span></span><br><span class="line"><span class="keyword">grant</span> teacher <span class="keyword">to</span> dean;</span><br><span class="line"><span class="comment">-- 将教导主任的权限授予用户</span></span><br><span class="line"><span class="keyword">grant</span> dean <span class="keyword">to</span> dasi;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>角色可以授予用户，也可以授予其他角色，用户可以有多重身份</p></div><h3 id="5-3-视图权限">5.3 视图权限</h3><ul><li>如果当前用户希望创建一个视图，必须<strong>在视图引用的底层表上至少有选择权限</strong></li><li>可以给其他用户授予使用视图的权限</li><li>用户对视图的权限不会自动继承到底层表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> geo_instructor <span class="keyword">as</span>(</span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line">  <span class="keyword">from</span> instructor </span><br><span class="line">  <span class="keyword">where</span> dept_name <span class="operator">=</span> <span class="string">&#x27;Geology&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 给用户授权使用视图来查询</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> geo_instructor <span class="keyword">to</span> dasi;</span><br></pre></td></tr></table></figure><h3 id="5-4-引用权限">5.4 引用权限</h3><p>用户必须拥有某个表的引用权限才能<strong>在新表中定义对该表的外键约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 允许dasi引用department关系的dept_name属性</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">references</span> (dept_name) <span class="keyword">on</span> department <span class="keyword">to</span> dasi;</span><br></pre></td></tr></table></figure><h3 id="5-5-转移权限">5.5 转移权限</h3><p>用户可以不仅赋予它使用的权限，还赋予它授权别人的权利</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 授予Amit在department上的选择权限，并且允许Amit将该权限授予其他用户</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> department <span class="keyword">to</span> Amit <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure><h3 id="5-6-收回权限">5.6 收回权限</h3><ul><li><code>restrict</code>是禁止级联收权，如果权限已经转移，则收权失败</li><li><code>cascade</code>是允许级联收权，会收回其他用户的权限</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 非级联</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">select</span> <span class="keyword">on</span> department <span class="keyword">from</span> Amit restrict;</span><br><span class="line"><span class="comment">-- 级联</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">select</span> <span class="keyword">on</span> department <span class="keyword">from</span> dasi cascade;</span><br><span class="line"><span class="comment">-- 收回授权的权利</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">grant</span> option <span class="keyword">for</span> <span class="keyword">select</span> <span class="keyword">on</span> department <span class="keyword">from</span> Amit;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初级SQL</title>
      <link href="/posts/f5af5ab0/"/>
      <url>/posts/f5af5ab0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-什么是SQL？">1. 什么是SQL？</h2><p><strong>结构化查询语言（Structured Query Language,SQL）</strong>：用于管理和操作关系数据库的标准语言</p><ul><li><strong>数据定义语言（Data-Definition Language,DDL）</strong>：定义和管理数据库结构</li><li><strong>数据操纵语言（Data-Manipulation Language,DML）</strong>：查询和操作数据库中数据</li><li><strong>数据控制语言（Data-Control Language,DCL）</strong>：控制对数据库对象的访问权限等</li><li><strong>事务控制语言（Transaction-Control Language,TCL）</strong>：管理数据库事务</li></ul><p>以下都是基于书本中的大学数据库模式，可以参考这个链接下载</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.csdn.net/doctor_fung/article/details/82753742">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a461b627dc2.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">《数据库系统概念》中的大学模式（University Schema）</div>          <div class="tag-link-sitename">dpkt</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654061.png" alt=""></p><h2 id="2-DDL">2. DDL</h2><h3 id="2-1-DDL定义什么？">2.1 DDL定义什么？</h3><p>模式（Scheme）：是以下数据库对象的集合体</p><ul><li><strong>关系/表（Table）</strong>：表的结构，即表名、属性名</li><li><strong>域（Domain）</strong>：每个属性可以存储的数据类型和范围</li><li><strong>约束（Constraints）</strong>：用于确保数据的有效性和一致性</li><li><strong>视图（Views）</strong>：用于简化复杂查询并增强安全性</li><li><strong>索引（Indexes）</strong>：用于提高查询性能</li><li><strong>权限（Privilege）</strong>：控制用户对数据库对象的访问权限</li><li><strong>存储过程（Stored Procedures）</strong>：描述数据在物理存储上的组织方式</li><li><strong>函数（Functions）</strong>：可重用的代码块，用于执行特定的操作并返回一个值</li></ul><p>DDL涉及的SQL命令：<code>CREATE, DROP, DELETE, ALTER, RENAME</code></p><h3 id="2-2-基本数据类型">2.2 基本数据类型</h3><table><thead><tr><th>标识符</th><th>描述</th></tr></thead><tbody><tr><td>char(n)</td><td>指定长度n的固定长字符串</td></tr><tr><td>varchar(n)</td><td>指定最大长度n的可变长字符串</td></tr><tr><td>int</td><td>整数</td></tr><tr><td>float</td><td>单精度浮点数</td></tr><tr><td>numeric(p,d)</td><td>指定有p位数字，且小数点右边有d位数字</td></tr></tbody></table><div class="note warning flat"><p>char类型的值会<strong>在字符串末尾自动补充空格</strong>来达到固定长度，所以即使char和varchar类型存储相同的值，比较的结果也有可能是不同的</p></div><h3 id="2-3-创建关系">2.3 创建关系</h3><p>通用形式（A表示属性名Attribute，D表示数据类型Data）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> r(</span><br><span class="line">  A1 D1,</span><br><span class="line">  A2 D2,</span><br><span class="line">  ...</span><br><span class="line">  An Dn,</span><br><span class="line">  <span class="operator">&lt;</span>完整性约束<span class="number">1</span><span class="operator">&gt;</span>，</span><br><span class="line">  ...,</span><br><span class="line">  <span class="operator">&lt;</span>完整性约束m<span class="operator">&gt;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>码约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主码约束</span></span><br><span class="line"><span class="keyword">primary</span> key(attribute1,attribute2)</span><br><span class="line"><span class="comment">-- 外码约束</span></span><br><span class="line"><span class="keyword">foreign</span> key(attribute1,attribute2) <span class="keyword">references</span> t(attribute1,attribute2)</span><br></pre></td></tr></table></figure><p>举例：创建中山大学学生卡的关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sysu_card(</span><br><span class="line">  card_id <span class="type">int</span>,</span><br><span class="line">  name <span class="type">varchar</span>(<span class="number">4</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">  stu_id <span class="type">char</span>(<span class="number">8</span>),</span><br><span class="line">  college <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">  <span class="keyword">primary</span> key (card_id),</span><br><span class="line">  <span class="keyword">foreign</span> key (stu_id) <span class="keyword">references</span> student(stu_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>查看关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">describe</span> <span class="operator">&lt;</span>table_name<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654062.png" alt=""></p><h3 id="2-4-修改关系">2.4 修改关系</h3><table><thead><tr><th>操作</th><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>删除表</td><td><code>drop table r;</code></td><td>不仅删除r的所有元组还删除r的模式</td></tr><tr><td>清空表</td><td><code>delete from r;</code></td><td>删除r的所有元组但保留关系</td></tr><tr><td>添加属性</td><td><code>alter table r add A D;</code></td><td>r是现有关系，A是属性名，D是属性类型</td></tr><tr><td>去除属性</td><td><code>alter table r drop A;</code></td><td>注意这里只能是drop不能是delete</td></tr></tbody></table><h2 id="3-DML">3. DML</h2><h3 id="3-1-查询：SELECT">3.1 查询：SELECT</h3><p>含义：<strong>为from子句中指定的关系产生笛卡尔积，然后应用where子句中指定的谓词，最后筛选输出select子句中指定的属性</strong></p><ul><li><strong>select</strong>：列出查询结果中所需要的属性</li><li><strong>from</strong>：列出需要访问的关系表</li><li><strong>where</strong>：列出作用在关系的属性上的谓词</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> A1,A2,...,An</span><br><span class="line"><span class="keyword">from</span> r1,r2,...,rm</span><br><span class="line"><span class="keyword">where</span> P;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654060.png" alt=""></p><div class="note warning flat"><p>必须以select、from、where的次序写出</p></div><p>附加用法</p><ul><li><strong>distinct</strong>关键字：在select后插入，表示<strong>去除重复属性值</strong></li><li><strong>all</strong>关键字：在select后插入，表示<strong>不去除重复属性值</strong></li><li>算术运算符：可以在select中对运算对象使用<code>+,-,*,/</code>运算符</li><li>逻辑连接词：可以在where中对多个谓词逻辑使用<code>and,or,not</code>连接词</li></ul><p>单关系查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出Comp. Sci.系中工资超过70000的所有老师的姓名</span></span><br><span class="line"><span class="keyword">select</span> name</span><br><span class="line"><span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> dept_name <span class="operator">=</span> <span class="string">&#x27;Comp. Sci.&#x27;</span> <span class="keyword">and</span> salary <span class="operator">&gt;</span> <span class="number">70000</span>;</span><br></pre></td></tr></table></figure><p>多关系查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 对于大学中所有讲授课程的教师，找出他们的姓名以及他们所讲授的所有课程的ID</span></span><br><span class="line"><span class="keyword">select</span> name,course_id</span><br><span class="line"><span class="keyword">from</span> instructor,teaches</span><br><span class="line"><span class="keyword">where</span> instructor.ID <span class="operator">=</span> teaches.ID;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>对于那些属于不同关系但重名的属性，必须加上关系名前缀</p></div><h3 id="3-2-删除：DELETE">3.2 删除：DELETE</h3><p><strong>只能删除整个元组，无法只删除某些属性上的值</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除属于Finance系的教师</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> dept_name <span class="operator">=</span> <span class="string">&#x27;Finance&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除工资低于20000的教师</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> salary <span class="operator">&lt;</span> <span class="number">20000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除在Watson楼的系中工作的教师</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> dept_name <span class="keyword">in</span> (</span><br><span class="line">  <span class="keyword">select</span> dept_name</span><br><span class="line">  <span class="keyword">from</span> department</span><br><span class="line">  <span class="keyword">where</span> buildng <span class="operator">=</span> <span class="string">&#x27;Watson&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除工资低于大学平均工资的教师</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> salary <span class="operator">&lt;</span> (</span><br><span class="line">  <span class="keyword">select</span> <span class="built_in">avg</span>(salary)</span><br><span class="line">  <span class="keyword">from</span> instructor</span><br><span class="line">);</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>一条delete命令只能作用于一个关系</p></div><h3 id="3-3-插入：INSERT">3.3 插入：INSERT</h3><p><strong>可以插入指定元组，也可以插入查询语句生成的元组集合</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 往课程中插入指定数据（要求按照定义的属性顺序排列）</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course </span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;CS-437&#x27;</span>,<span class="string">&#x27;Database Systems&#x27;</span>,<span class="string">&#x27;Comp. Sci.&#x27;</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 往课程中插入指定属性和数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course(course_id,title,dept_name, credits)</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;CS-437&#x27;</span>,<span class="string">&#x27;Database Systems&#x27;</span>,<span class="string">&#x27;Comp. Sci.&#x27;</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入查询语句生成的元组集合：让Music系每个修满144学时的学生成为Music系的教师</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> instructor</span><br><span class="line">  <span class="keyword">select</span> ID,name,dept_name,<span class="number">18000</span></span><br><span class="line">  <span class="keyword">from</span> student</span><br><span class="line">  <span class="keyword">where</span> dept_name <span class="operator">=</span> <span class="string">&#x27;Music&#x27;</span> <span class="keyword">and</span> tot_cred <span class="operator">&gt;</span> <span class="number">144</span>;</span><br></pre></td></tr></table></figure><h3 id="3-4-更新：UPDATE">3.4 更新：UPDATE</h3><p><strong>在不改变一个元组所有值的情况下改变其某个属性的值</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 所有教师的工资将增长5%</span></span><br><span class="line"><span class="keyword">update</span> instructor</span><br><span class="line"><span class="keyword">set</span> salary <span class="operator">=</span> salary <span class="operator">*</span> <span class="number">1.05</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给Music系的老师涨1000工资</span></span><br><span class="line"><span class="keyword">update</span> instructor</span><br><span class="line"><span class="keyword">set</span> salary <span class="operator">=</span> salary <span class="operator">+</span> <span class="number">1000</span></span><br><span class="line"><span class="keyword">where</span> dept_name <span class="operator">=</span> <span class="string">&#x27;Music&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 给工资低于平均值的教师涨20%的工资</span></span><br><span class="line"><span class="keyword">update</span> instructor</span><br><span class="line"><span class="keyword">set</span> salary <span class="operator">=</span> salary <span class="operator">*</span> <span class="number">1.2</span></span><br><span class="line"><span class="keyword">where</span> salary <span class="operator">&lt;</span> (</span><br><span class="line">  <span class="keyword">select</span> <span class="built_in">avg</span>(salary)</span><br><span class="line">  <span class="keyword">from</span> instructor</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>同步更新：相当于if-else语句，自上而下满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">pred_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">re</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>则赋值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">result_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">res</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654051.png" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给工资低于80000的教师涨10%，超过80000但低于100000美元的教师涨5%的工资，而给其余教师涨3%</span></span><br><span class="line"><span class="keyword">update</span> instructor</span><br><span class="line"><span class="keyword">set</span> salary <span class="operator">=</span> </span><br><span class="line"><span class="keyword">case</span></span><br><span class="line">  <span class="keyword">when</span> salary <span class="operator">&lt;</span> <span class="number">80000</span> <span class="keyword">then</span> salary <span class="operator">*</span> <span class="number">1.1</span></span><br><span class="line">  <span class="keyword">when</span> salary <span class="keyword">between</span> <span class="number">80000</span> <span class="keyword">and</span> <span class="number">100000</span> <span class="keyword">then</span> salary <span class="operator">*</span> <span class="number">1.05</span></span><br><span class="line">  <span class="keyword">else</span> salary <span class="operator">*</span> <span class="number">1.03</span></span><br><span class="line"><span class="keyword">end</span>; </span><br></pre></td></tr></table></figure><h2 id="4-运算符">4. 运算符</h2><h3 id="4-1-AS">4.1 AS</h3><p><code>old-name as new-name</code></p><ul><li>将长的列名或表名替换为短的别名，使查询更易读</li><li>在自连接或子查询中，为同一张表指定不同的别名以区分</li><li>为计算列、聚合函数结果或子查询结果指定一个有意义的名称</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询至少比Biology系某一位老师工资高的所有姓名</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> T.name</span><br><span class="line"><span class="keyword">from</span> instructor <span class="keyword">as</span> T,instructor <span class="keyword">as</span> S</span><br><span class="line"><span class="keyword">where</span> T.salary <span class="operator">&gt;</span> S.salary <span class="keyword">and</span> S.dept_name <span class="operator">=</span> <span class="string">&#x27;Biology&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询工资大于5000的老师，减去税收500后的实际工资</span></span><br><span class="line"><span class="keyword">select</span> salary <span class="operator">-</span> <span class="number">500</span> <span class="keyword">as</span> salary_after_tax</span><br><span class="line"><span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="number">5000</span>;</span><br></pre></td></tr></table></figure><h3 id="4-2-LIKE">4.2 LIKE</h3><p><code>where &lt;属性&gt; like &lt;字符串模式&gt;</code></p><ul><li>百分号%：匹配任意字符串，如<code>%dasi%</code>匹配任意包含<code>dasi</code>的字符串</li><li>下划线_：匹配任意字符，如<code>dasi_</code>匹配任意前缀是dasi且长度为5的字符串</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出建筑名称中包含子串&#x27;Watson&#x27;的所有系名</span></span><br><span class="line"><span class="keyword">select</span> dept_name</span><br><span class="line"><span class="keyword">from</span> department</span><br><span class="line"><span class="keyword">where</span> building <span class="keyword">like</span> <span class="string">&#x27;%Watson%&#x27;</span>;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>在MySQL中like运算符是<strong>大小写不敏感的</strong></p></div><h3 id="4-3">4.3 *</h3><p><code>*</code>在select子句中表示所有属性</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询department表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> department;</span><br></pre></td></tr></table></figure><h3 id="4-4-ORDER-BY">4.4 ORDER BY</h3><p><code>order by &lt;属性&gt; &lt;序&gt;</code>：让查询结果按照某个属性的值排序显示，同时支持多列排序</p><ul><li>desc：降序</li><li>asc：升序</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给出instructor关系，按照薪水降序列出，若salary相同则按name升序列出</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> salary <span class="keyword">desc</span>,name <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654058.png" alt=""></p><h3 id="4-5-BETWEEN">4.5 BETWEEN</h3><p><code>(not) between...and...</code>：筛选值在或不在某个范围内的记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出薪水在90000到100000的老师的名字</span></span><br><span class="line"><span class="keyword">select</span> name </span><br><span class="line"><span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> salary <span class="keyword">between</span> <span class="number">90000</span> <span class="keyword">and</span> <span class="number">100000</span>;</span><br></pre></td></tr></table></figure><h2 id="5-集合运算">5. 集合运算</h2><div class="note info flat"><p>集合运算针对查询结果，由于集合的特性，会自动去除重复，如果要保留重复项，需要显式使用关键字<code>all</code></p></div><h3 id="5-1-UNION">5.1 UNION</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询2017年秋季或2018春季开课的课程id</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> section</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Fall&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2017</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> section</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Spring&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2018</span>;</span><br></pre></td></tr></table></figure><h3 id="5-2-INTERSECT">5.2 INTERSECT</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询2017年秋季且2018春季开课的课程id</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> section</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Fall&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2017</span></span><br><span class="line"><span class="keyword">intersect</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> section</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Spring&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2018</span>;</span><br></pre></td></tr></table></figure><h3 id="5-3-EXCEPT">5.3 EXCEPT</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询2017年秋季但2018春季不开课的课程id</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> section</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Fall&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2017</span></span><br><span class="line"><span class="keyword">except</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> section</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Spring&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2018</span>;</span><br></pre></td></tr></table></figure><h2 id="6-NULL">6. NULL</h2><p><code>NULL</code>：空值，用于表示某个字段没有有效数据</p><p><code>UNKNOWN</code>：是除了<code>FALSE</code>和<code>TRUE</code>之外的第三个逻辑值</p><ol><li>空值与任何值（包括空值）的比较情况都是<code>UNKNOWN</code></li><li>空值与任何值的逻辑结果都是<code>UNKNOWN</code></li><li><code>NOT UNKNOWN</code>的值还是<code>UNKNOWN</code></li><li>聚合函数会忽略空值</li><li>唯一约束允许列中存在多个空值</li><li><code>WHERE</code>子句只认可<code>TRUE</code>，不接受<code>UNKNWON</code></li><li><code>NULL</code>在排序中被认为是最小的值</li><li>只能使用 <code>IS NULL</code> 或 <code>IS NOT NULL</code> 来判断空值</li></ol><h2 id="7-聚集">7. 聚集</h2><h3 id="7-1-聚集函数">7.1 聚集函数</h3><p><strong>聚集函数（aggregate）</strong>：以集合为输入，返回集合中值情况的函数</p><ul><li>平均值：<strong>avg</strong></li><li>最大值：<strong>max</strong></li><li>最小值：<strong>min</strong></li><li>总数：<strong>sum</strong></li><li>计数：<strong>count</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出在2018年春季授课的教师总数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> ID)</span><br><span class="line"><span class="keyword">from</span> teaches</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Spring&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2018</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 找出薪水比平均薪水大的薪水总和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(salary) <span class="keyword">as</span> sum_salary</span><br><span class="line"><span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> salary <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(salary) <span class="keyword">from</span> instructor);</span><br></pre></td></tr></table></figure><h3 id="7-2-GROUP-BY">7.2 GROUP BY</h3><p><code>group by &lt;属性&gt;</code>：根据一个或多个属性的值来构造分组，从而<strong>将聚集函数作用在多个分组上</strong></p><div class="note warning flat"><p>如果在select中使用聚集函数，select选择的属性，必须是group by使用的属性</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出每个系的平均工资</span></span><br><span class="line"><span class="keyword">select</span> dept_name,<span class="built_in">avg</span>(salary) <span class="keyword">as</span> avg_salary</span><br><span class="line"><span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dept_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 找出每个系在2018年春季授课的教师人数</span></span><br><span class="line"><span class="keyword">select</span> dept_name,<span class="built_in">count</span>(<span class="keyword">distinct</span> instructor.ID) <span class="keyword">as</span> instr_count</span><br><span class="line"><span class="keyword">from</span> instructor,teaches</span><br><span class="line"><span class="keyword">where</span> instructor.ID <span class="operator">=</span> teaches.ID <span class="keyword">and</span> semester <span class="operator">=</span> <span class="string">&#x27;Spring&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2018</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> dept_name;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654055.png" alt=""></p><h3 id="7-3-HAVING">7.3 HAVING</h3><p><code>having &lt;谓词表达式&gt;</code>：专门用于<strong>对分组限定条件</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 对于2017年中至少有2名学生选课的课程，查询每个课程的学生的总学分的平均值</span></span><br><span class="line"><span class="keyword">select</span> course_id,semester,<span class="built_in">avg</span>(tot_cred)</span><br><span class="line"><span class="keyword">from</span> student,takes</span><br><span class="line"><span class="keyword">where</span> student.ID <span class="operator">=</span> takes.ID <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2017</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> course_id,semester</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(student.ID) <span class="operator">&gt;=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654054.png" alt=""></p><div class="note success flat"><p>作用顺序与含义</p><table><thead><tr><th>顺序</th><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>1</td><td>from</td><td>选出一个关系A</td></tr><tr><td>2</td><td>where</td><td>将谓词作用在关系A上，得到关系B</td></tr><tr><td>3</td><td>group by</td><td>对关系B进行分组，得到若干个关系C</td></tr><tr><td>4</td><td>having</td><td>将谓词作用在不同关系C上，得到关系D</td></tr><tr><td>5</td><td>select</td><td>将聚集函数作用在不同关系D上</td></tr></tbody></table></div><h2 id="8-嵌套子查询">8. 嵌套子查询</h2><div class="note warning flat"><p>嵌套子循环都需要<strong>加括号</strong><br><strong>相关子查询</strong>：是一个概念，指的是<strong>来自外层查询的相关名称可以用在where子句的子查询中</strong></p></div><h3 id="8-1-在where中嵌套">8.1 在where中嵌套</h3><h4 id="8-1-1-IN">8.1.1 IN</h4><p><code>(not) in (&lt;子查询&gt;)</code>：<strong>检查某个值是否在子查询结果中</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查找在2017秋季开课但2018春季不开课的课程ID</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> course_id</span><br><span class="line"><span class="keyword">from</span> section</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Fall&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2017</span> <span class="keyword">and</span> course_id <span class="keyword">not</span> <span class="keyword">in</span> ( </span><br><span class="line">  <span class="keyword">select</span> course_id</span><br><span class="line">  <span class="keyword">from</span> section</span><br><span class="line">  <span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Spring&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2018</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="8-1-2-SOME-和-ALL">8.1.2 SOME 和 ALL</h4><p><code>some (&lt;子查询&gt;)</code>：<strong>检查某个值是否满足与子查询结果中的任意一个值的比较条件</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出工资至少比&#x27;Biology&#x27;系某位教师的工资要高的所有教师的姓名</span></span><br><span class="line"><span class="keyword">select</span> name</span><br><span class="line"><span class="keyword">from</span> instructor</span><br><span class="line"><span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">some</span> (</span><br><span class="line">  <span class="keyword">select</span> salary</span><br><span class="line">  <span class="keyword">from</span> instructor</span><br><span class="line">  <span class="keyword">where</span> dept_name <span class="operator">=</span> <span class="string">&#x27;Biology&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>all (&lt;子查询&gt;)</code>：<strong>检查某个值是否满足与子查询结果中的所有值的比较条件</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出那些工资大于所有系平均工资的系名</span></span><br><span class="line"><span class="keyword">select</span> dept_name</span><br><span class="line"><span class="keyword">from</span> instructor </span><br><span class="line"><span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">all</span> (</span><br><span class="line">  <span class="keyword">select</span> <span class="built_in">avg</span>(salary)</span><br><span class="line">  <span class="keyword">from</span> instructor </span><br><span class="line">  <span class="keyword">group</span> <span class="keyword">by</span> dept_name</span><br><span class="line">);</span><br></pre></td></tr></table></figure><div class="note success flat"><p><code>=some</code>等价于<code>in</code>，但是<code>&lt;&gt;some</code>不等价于<code>not in</code><br><code>&lt;&gt;all</code>等价于<code>not in</code>，但是<code>=all</code>不等价于<code>in</code></p></div><h4 id="8-1-3-EXISTS">8.1.3 EXISTS</h4><p><code>(not) exists (&lt;子查询&gt;)</code>：检查子查询返回的结果<strong>是否为空</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出在2017年秋季学期和2018年春季学期都开课的所有课程</span></span><br><span class="line"><span class="keyword">select</span> course_id</span><br><span class="line"><span class="keyword">from</span> section <span class="keyword">as</span> S</span><br><span class="line"><span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Fall&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2017</span> <span class="keyword">and</span> <span class="keyword">exists</span> (</span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">  <span class="keyword">from</span> section <span class="keyword">as</span> T</span><br><span class="line">  <span class="keyword">where</span> semester <span class="operator">=</span> <span class="string">&#x27;Spring&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span> <span class="operator">=</span> <span class="number">2018</span> <span class="keyword">and</span> S.course_id <span class="operator">=</span> T.course_id</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="8-1-4-UNIQUE">8.1.4 UNIQUE</h4><p><code>(not) unique (&lt;子查询&gt;)</code>：检查子查询返回的结果是否具有唯一性</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出在2017年最少开设两次的所有课程</span></span><br><span class="line"><span class="keyword">select</span> T.course_id</span><br><span class="line"><span class="keyword">from</span> course <span class="keyword">as</span> T</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">unique</span> (</span><br><span class="line">  <span class="keyword">select</span> R.course_id</span><br><span class="line">  <span class="keyword">from</span> course <span class="keyword">as</span> R</span><br><span class="line">  <span class="keyword">where</span> T.course_id <span class="operator">=</span> R.course_id <span class="keyword">and</span> R.year <span class="operator">=</span> <span class="number">2017</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="8-2-在from中嵌套">8.2 在from中嵌套</h3><p>子查询的结果作为父查询的目标关系，需要<strong>使用as运算符对子查询结果的属性重新命名</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出系平均工资超过42000美元的那些系的教师平均工资</span></span><br><span class="line"><span class="keyword">select</span> dept_name,avg_salary</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">  <span class="keyword">select</span> dept_name,<span class="built_in">avg</span>(salary)</span><br><span class="line">  <span class="keyword">from</span> instructor</span><br><span class="line">  <span class="keyword">group</span> <span class="keyword">by</span> dept_name</span><br><span class="line">) <span class="keyword">as</span> dept_avg(dept_name,avg_salary)</span><br><span class="line"><span class="keyword">where</span> avg_salary <span class="operator">&gt;</span> <span class="number">42000</span>;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654053.png" alt=""></p><h3 id="8-3-with">8.3 with</h3><p><code>with &lt;临时关系&gt; as (&lt;子查询&gt;)</code>：定义临时结果集，以便在后续查询中重复使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 找出工资总额大于所有系平均工资总额的所有系</span></span><br><span class="line"><span class="keyword">with</span> </span><br><span class="line">  dept_total(dept_name,<span class="keyword">value</span>) <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> dept_name,<span class="built_in">sum</span>(salary)</span><br><span class="line">    <span class="keyword">from</span> instructor</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> dept_name</span><br><span class="line">  ), <span class="comment">-- 先得到所有系的工资总额</span></span><br><span class="line">  dept_total_avg(<span class="keyword">value</span>) <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">avg</span>(<span class="keyword">value</span>)</span><br><span class="line">    <span class="keyword">from</span> dept_total</span><br><span class="line">  )  <span class="comment">-- 再得到所有系的工资总额的平均</span></span><br><span class="line"><span class="keyword">select</span> dept_name</span><br><span class="line"><span class="keyword">from</span> dept_total,dept_total_avg</span><br><span class="line"><span class="keyword">where</span> dept_total.value <span class="operator">&gt;</span> dept_total_avg.value;</span><br></pre></td></tr></table></figure><h3 id="8-4-标量子查询">8.4 标量子查询</h3><p>就是利用聚合函数只返回单个值的子查询，适用于计算、比较或作为表达式的一部分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 列出所有的系以及每个系中的教师总数</span></span><br><span class="line"><span class="keyword">select</span> dept_name,(</span><br><span class="line">  <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>)</span><br><span class="line">  <span class="keyword">from</span> instructor</span><br><span class="line">  <span class="keyword">where</span> department.dept_name <span class="operator">=</span> instructor.dept_name</span><br><span class="line">) <span class="keyword">as</span> num</span><br><span class="line"><span class="keyword">from</span> department;</span><br></pre></td></tr></table></figure><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/DataBase/chapter3/202409191654052.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关系模型</title>
      <link href="/posts/7fda2204/"/>
      <url>/posts/7fda2204/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-关系数据库">1. 关系数据库</h2><p>关系数据库：将数据组织成表格形式，为每张表赋予一个唯一名称</p><ul><li><strong>表（table）</strong>：每个表由行和列组成</li><li><strong>元祖（tuple）</strong>：指代行，每一行代表一个数据记录</li><li><strong>属性（attribute）</strong>：指代列，每一列代表一个数据字段</li></ul><div class="note info flat"><p>根据集合的定义，元组在关系中出现的顺序是无关紧要的</p></div><p><strong>域（domain）</strong>：每个属性允许取值的集合</p><div class="note success flat"><p>性别属性的域是男和女<br>年龄属性的域是0-100的整数</p></div><p><strong>原子的（atomic）</strong>：一个域中的元素被认为是不可再分的单元</p><div class="note success flat"><p>数量上：联系电话可以既填自己、父母和朋友等，是多个手机号码的集合<br>结构上：手机号可以拆分为国家编号、地区编号和通信公司编号等，是多个字段的组成</p></div><p><strong>关系模式（schema）</strong>：描述了关系的<strong>蓝图</strong>，定义了表的<strong>名称、属性、数据类型、域和约束</strong></p><p>关系实例（instance）：描述了关系的<strong>快照</strong>，存储了某时刻的数据集合，是具体的元组的集合</p><div class="note success flat"><p>学生关系的模式：student(name,id,age,major,cardnum)<br>学生关系的实例：(dasi,22336218,20,cs,5201314)</p></div><h2 id="2-码">2. 码</h2><mark class="hl-label orange">数据完整性（uniqueness）</mark> <ul><li><strong>实体完整性</strong>：确保任一元组的所有属性值必须能<strong>唯一标识</strong>该元组，即一个关系中<strong>不能存在两个元组在所有属性值上都相同</strong></li><li><strong>引用完整性/参照完整性</strong>：确保引用属性的值必须存在于其他表中</li><li><strong>域完整性</strong>：确保属性值符合域和数据结构</li><li><strong>用户自定义完整性</strong>：属性值符合特定业务的规则</li></ul><p><strong>超码（superkey）</strong>：一个或多个属性的集合，超码可以在一个关系中唯一标识出一个元组</p><div class="note info flat"><p>根据定义，超码的<strong>任意超集</strong>都是超码，因此可能存在很多超码</p></div><p><strong>候选码（candidate key）</strong>：任意真子集都不是超码的<strong>最小超码</strong></p><div class="note info flat"><p>候选码虽然是最小的，但是<strong>可以有多个候选码</strong>，如学生既可以用身份证唯一标识，也可以用学号唯一标识，还可以用“专业+毕业高中+年级+姓名”的组合来唯一标识</p></div><p><strong>主码（primary key）</strong>：由数据库设计者<strong>人为选中</strong>来作为在一个关系中区分不同元组的候选码</p><ul><li>主码<strong>一定是候选码</strong>！主码<strong>一定是超码</strong>！</li><li>主码<strong>不是表的天然属性</strong>，是人根据数据库的使用目的来手动选择的！</li><li>主码的选择必须是那些<strong>不变化或者极少变化的属性</strong>！</li></ul><div class="note info flat"><p>习惯上，总是将主码属性放在其他属性<strong>之前</strong>，并加<strong>下划线</strong>：student(<u>id</u>,name,age)</p></div><p><strong>外码（foreign key）</strong>：外码用于引用另一个关系中的主码或唯一约束</p><ul><li>用来确保数据的引用完整性，即外码值必须在被引用的主码或唯一约束中存在</li><li>外码可以引用本关系中的主码，形成自引用</li></ul><div class="note warning flat"><p>外码约束不等于引用完整性约束！外码约束是引用完整性约束的子集，引用完整性不仅包括外键与主键的关系，还可能涉及更复杂的业务规则</p></div><h2 id="3-模式图">3. 模式图</h2><p>每个关系为一个框，关系名用灰色显示在顶部，在框内列出了各属性</p><div class="note info flat"><p>使用<strong>双箭头</strong>表示不是外码约束的引用完整性约束<br>数据库系统支持<strong>图形化用户界面</strong>的设计工具来创建数据库模式图</p></div><h2 id="4-关系查询语言">4. 关系查询语言</h2><ul><li><strong>命令式（imperative）</strong>：明确指定数据库操作的步骤和顺序，如存储过程、触发器</li><li><strong>函数式（functional）</strong>：通过函数或表达式来描述数据操作，如SQL 内置函数、关系代数</li><li><strong>声明式（declarative）</strong>：只需要描述“想要什么”，而不需要指定“如何做”，如SQL 查询</li></ul><h2 id="5-关系代数">5. 关系代数</h2><h3 id="5-1-选择运算（select）">5.1 选择运算（select）</h3><p>功能：选出满足给定谓词的元组，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>来表示，谓词写在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>的下标，关系写在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>后的括号内，并支持比较运算和逻辑连接词</p><div class="note success flat"><p>查询月薪高于10000的老师：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>s</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi><mo>&gt;</mo><mn>10000</mn></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{salary&gt;10000}(teacher)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span><span class="mrel mtight">&gt;</span><span class="mord mtight">10000</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span></span></span></span><br>查询月薪高于10000且年龄大于40的老师：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>a</mi><mi>g</mi><mi>e</mi><mo>&gt;</mo><mn>40</mn><mo>∧</mo><mi>s</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi><mo>&gt;</mo><mn>10000</mn></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{age&gt;40 \land salary&gt;10000}(teacher)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight">&gt;</span><span class="mord mtight">40</span><span class="mbin mtight">∧</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span><span class="mrel mtight">&gt;</span><span class="mord mtight">10000</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span></span></span></span></p></div><h3 id="5-2-投影运算（project）">5.2 投影运算（project）</h3><p>功能：用于过滤掉属性从而只给出特定属性的关系，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Π</span></span></span></span>表示，希望显示的属性列表作为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Π</span></span></span></span>的下标，关系写在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Π</span></span></span></span>后的括号内，并支持在属性列表中使用算术运算</p><div class="note success flat"><p>查询老师的名字、年龄和编号：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>a</mi><mi>g</mi><mi>e</mi><mo separator="true">,</mo><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{name,age,id}(teacher)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span></span></span></span><br>查询老师的名字和减去税收100的月薪：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>s</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi><mo>−</mo><mn>100</mn></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{name,salary-100}(teacher)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span><span class="mbin mtight">−</span><span class="mord mtight">100</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span></span></span></span></p></div><h3 id="5-3-笛卡尔积运算（cartesian-product）">5.3 笛卡尔积运算（cartesian-product）</h3><p>功能：将两个关系的元组拼接成单个元组，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span>表示，对于仅出现在一个关系的属性，通常删除关系名前缀</p><div class="note success flat"><p>学生：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>m</mi><mi>a</mi><mi>j</mi><mi>o</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">student(id,name,major)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">nam</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">maj</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mclose">)</span></span></span></span><br>老师：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mo separator="true">,</mo><mi>s</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">teacher(name,course,salary)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mopen">(</span><span class="mord mathnormal">nam</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rse</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">)</span></span></span></span><br>学生和老师的笛卡尔积：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>s</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>m</mi><mi>a</mi><mi>j</mi><mi>o</mi><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><mi>e</mi><mo separator="true">,</mo><mi>s</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(id,student.name,major,teacher.name,course,salary)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mord mathnormal">nam</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">maj</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord">.</span><span class="mord mathnormal">nam</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rse</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">)</span></span></span></span></p></div><h3 id="5-4-连接运算（join）">5.4 连接运算（join）</h3><p>功能：用于选择笛卡尔积中满足谓词的元组，用符号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋈</mo></mrow><annotation encoding="application/x-tex">\bowtie</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.51em;vertical-align:-0.005em;"></span><span class="mrel">⋈</span></span></span></span>表示，谓词作为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋈</mo></mrow><annotation encoding="application/x-tex">\bowtie</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.51em;vertical-align:-0.005em;"></span><span class="mrel">⋈</span></span></span></span>的下标，笛卡尔积放在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋈</mo></mrow><annotation encoding="application/x-tex">\bowtie</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.51em;vertical-align:-0.005em;"></span><span class="mrel">⋈</span></span></span></span>后的括号内</p><p>实际上连接运算等价于：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><msub><mo>⋈</mo><mi>θ</mi></msub><mi>s</mi><mo>=</mo><msub><mi>σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo>×</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r\bowtie_{\theta}s = \sigma_{\theta}(r \times s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.655em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></p><div class="note success flat"><p>学生是2022级且老师名字是dasi的连接：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><msub><mo>⋈</mo><mrow><mi>s</mi><mi>t</mi><mi>u</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2022</mn><mo>∧</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo>=</mo><mi>d</mi><mi>a</mi><mi>s</mi><mi>i</mi></mrow></msub><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">student\bowtie_{student.year=2022 \land teacher.name=dasi}teacher</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mtight">.</span><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2022</span><span class="mbin mtight">∧</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mtight">.</span><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span></span></p></div><h3 id="5-5-并运算（union）">5.5 并运算（union）</h3><p>功能：用于给出两个关系的并集，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∪</span></span></span></span>表示。要求两个关系必须有<strong>相同数量的属性</strong>，且关系对应<strong>属性类型必须相同</strong></p><div class="note success flat"><p>查询2017年或2018年开设课程的id：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∪</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2018</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{coureid}(\sigma_{year=2017}(section))\cup\Pi_{coureid}(\sigma_{year=2018}(section))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2018</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></p></div><h3 id="5-6-交运算（intersection）">5.6 交运算（intersection）</h3><p>功能：用于给出两个关系的交集，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∩</span></span></span></span>表示</p><div class="note success flat"><p>查询2017年且2018年都开设课程的id：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∩</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2018</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{coureid}(\sigma_{year=2017}(section))\cap\Pi_{coureid}(\sigma_{year=2018}(section))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2018</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></p></div><h3 id="5-7-差运算（set-difference）">5.7 差运算（set-difference）</h3><p>功能：用于给出两个关系的差集，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo></mrow><annotation encoding="application/x-tex">-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">−</span></span></span></span>表示</p><div class="note success flat"><p>查询2017年开设但2018年没有开设的课程id：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>−</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2018</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{coureid}(\sigma_{year=2017}(section))-\Pi_{coureid}(\sigma_{year=2018}(section))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2018</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></p></div><h3 id="5-8-赋值运算（assignment）">5.8 赋值运算（assignment）</h3><p>功能：将关系代数表达式的结果赋值给临时的关系变量，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>表示，左边是关系变量，右边是关系代数表达式</p><div class="note success flat"><p>查询2017年且2018年都开设课程的id<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><msub><mi>e</mi><mn>2</mn></msub><mn>017</mn><mo>←</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2017</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">course_2017 \leftarrow \Pi_{coureid}(\sigma_{year=2017}(section))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rs</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">017</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2017</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><msub><mi>e</mi><mn>2</mn></msub><mn>018</mn><mo>←</mo><msub><mi mathvariant="normal">Π</mi><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>e</mi><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>y</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo>=</mo><mn>2018</mn></mrow></msub><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">course_2018 \leftarrow \Pi_{coureid}(\sigma_{year=2018}(section))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rs</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">018</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ye</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">2018</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">sec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span><br>$course_2017 \cap <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>s</mi><msub><mi>e</mi><mn>2</mn></msub><mn>018</mn></mrow><annotation encoding="application/x-tex">course_2018</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">rs</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">018</span></span></span></span></p></div><h3 id="5-9-更名运算（rename）">5.9 更名运算（rename）</h3><p>功能：给关系代数表达式的结果赋予一个名称，使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span></span></span></span>表示，下标是名称，后跟括号内是关系代数表达式</p><ul><li>给表达式E的结果命名为x：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ρ</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\rho_x(E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span></li><li>给表达式E的结果命名为x，并且将其属性重命名为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A_1,···,A_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,⋅⋅⋅,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ρ</mi><mrow><mi>x</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\rho_{x(A_1,···,A_n)}(E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,⋅⋅⋅,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span></li></ul><div class="note success flat"><p>查询比ID为123的老师工资多的老师的姓名：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>i</mi><mi mathvariant="normal">.</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>i</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi><mo>&gt;</mo><mi>w</mi><mi mathvariant="normal">.</mi><mi>s</mi><mi>a</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>y</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>ρ</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo><mo>×</mo><msub><mi>σ</mi><mrow><mi>w</mi><mi mathvariant="normal">.</mi><mi>i</mi><mi>d</mi><mo>=</mo><mn>123</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>ρ</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{i.name}((\sigma_{i.salary&gt;w.salary}(\rho_{i}(teacher)\times\sigma_{w.id=123}(\rho_{w}(teacher)))))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">.</span><span class="mord mathnormal mtight">nam</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">((</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">.</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span><span class="mrel mtight">&gt;</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight">.</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ry</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight">.</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mrel mtight">=</span><span class="mord mtight">123</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)))))</span></span></span></span></p></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络层-控制平面</title>
      <link href="/posts/6bdcc3ed/"/>
      <url>/posts/6bdcc3ed/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-SDN">1. SDN</h2><h3 id="1-1-软件定义网络">1.1 软件定义网络</h3><p><strong>控制器</strong>运行在控制平面，负责制定网络设备的路由选择和流量管理，<strong>路由器/交换机</strong>运行在数据平面，根据下发的规则执行具体的数据包转发</p><table><thead><tr><th>特征</th><th>解释</th></tr></thead><tbody><tr><td><strong>基于流的转发</strong></td><td>SDN控制的交换机使用流表规则来转发数据包，即匹配运输层、网络层、链路层的首部字段执行对应操作，实现精细化的流量管理</td></tr><tr><td><strong>数据平面和控制平面分离</strong></td><td>SDN的数据平面专注于数据包的实际转发，而SDN的控制平面则集中于策略制定和网络管理</td></tr><tr><td><strong>网络控制功能</strong></td><td>SDN的控制功能通过SDN控制器和网络控制应用程序实现</td></tr><tr><td><strong>可编程网络</strong></td><td>SDN允许管理人员通过编程接口对网络进行动态配置和管理，赋予了控制平面灵活的“智力”</td></tr></tbody></table><div class="note info flat"><p>SDN控制器运行在<strong>多个服务器</strong>上，且这些服务器可以部署在<strong>不同物理位置</strong>上，但<strong>逻辑上是集中的</strong></p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601472.png" alt=""></p><table><thead><tr><th>层次</th><th>作用</th><th>功能</th></tr></thead><tbody><tr><td>抽象层/北向接口</td><td>负责与网络控制应用程序进行交互</td><td>路由选择、接入控制、负载均衡</td></tr><tr><td>管理层</td><td>负责管理网络</td><td>监控、检测、控制、优化</td></tr><tr><td>通信层/南向接口</td><td>负责与交换机进行通信</td><td>获取设备状态，执行网络配置</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601473.png" alt=""></p><h3 id="1-2-控制层面">1.2 控制层面</h3><ul><li><strong>每路由器控制</strong>：每台路由器都有一个路由选择组件，用于与其他路由器通信，并计算转发表的值</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601463.png" alt=""></p><ul><li><strong>逻辑集中制控制</strong>：外部控制器与路由器上的控制代理（Control Agent）进行交互，以配置和管理路由器的转发表</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601464.png" alt=""></p><p>网络的拓扑图表示</p><ul><li>节点：路由器</li><li>边：路由器之间的链路</li><li>权值：传输开销</li><li>邻居：物理相连的路由器</li><li>路径：节点序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1,x_2,...,x_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601465.png" alt=""></p><p>路由类型</p><ul><li><strong>集中式</strong>：算法知道全局节点信息</li><li><strong>分散式</strong>：每个节点仅有邻居节点信息</li><li><strong>静态</strong>：路由随时间的变化非常缓慢，通常由人工进行手动调整</li><li><strong>动态</strong>：随着网络流量的<strong>负载或拓扑</strong>的变化而变化</li><li><strong>负载敏感</strong>：链路开销会动态地变化以反映出<strong>拥塞水平</strong></li><li><strong>负载迟钝</strong>：链路开销不明确地反映拥塞水平</li></ul><h2 id="2-路由选择算法">2. 路由选择算法</h2><h3 id="2-1-链路状态算法">2.1 链路状态算法</h3><p><strong>链路状态算法（Link State, LS）</strong></p><ol><li>通过 Hello 报文发现直接连接的邻居</li><li>将本地链路状态信息广播给网络中的所有路由器</li><li>路由器根据收到的链路状态信息构建网络的完整拓扑图</li><li>使用 Dijkstra 算法计算到其他路由器的最短路径</li><li>根据计算结果更新路由表</li></ol><p>局限性</p><ul><li>Dijkstra 算法计算复杂度较高</li><li>每个路由器需要存储整个网络的拓扑信息，增加了路由器的存储负担</li><li>泛洪机制会增加网络流量，导致网络拥堵</li></ul><p>Dijkstra 算法</p><ol><li>选择源节点加入可拓展节点，设置到自己的距离为0，到其他节点的距离为正无穷</li><li>从可拓展节点列表中，选择当前距离最小的节点进行拓展，如果通过当前节点到达其他节点的路径更短，则更新其他节点的距离</li><li>如果拓展节点的邻居节点不在已拓展节点列表中，则加入邻居节点到可拓展列表</li><li>将可拓展节点列表按照距离排序</li><li>重复第2-4步，一直到可拓展列表为空</li></ol><div class="note success flat"><p>LS算法过程：<strong>假设u为源</strong></p><table><thead><tr><th>迭代</th><th>已拓展</th><th>可拓展</th><th>正在拓展</th><th>u-&gt;u</th><th>u-&gt;v</th><th>u-&gt;w</th><th>u-&gt;x</th><th>u-&gt;y</th><th>u-&gt;z</th></tr></thead><tbody><tr><td>0</td><td>无</td><td>u</td><td>无</td><td>0</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td></tr><tr><td>1</td><td>无</td><td>u</td><td>最小是u</td><td>0</td><td>2（更新）</td><td>5（更新）</td><td>1（更新）</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td></tr><tr><td>2</td><td>u</td><td>x,v,w</td><td>最小是x</td><td>0</td><td>2</td><td>4（更新）</td><td>1</td><td>2（更新）</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td></tr><tr><td>3</td><td>u,x</td><td>v,y,w</td><td>最小是v</td><td>0</td><td>2</td><td>4</td><td>1</td><td>2</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td></tr><tr><td>4</td><td>u,v,x</td><td>y,w</td><td>最小是y</td><td>0</td><td>2</td><td>3（更新）</td><td>1</td><td>2</td><td>4（更新）</td></tr><tr><td>5</td><td>u,v,x,y</td><td>w,z</td><td>最小是w</td><td>0</td><td>2</td><td>3</td><td>1</td><td>2</td><td>4</td></tr><tr><td>6</td><td>u,v,x,y,w</td><td>z</td><td>最小是z</td><td>0</td><td>2</td><td>3</td><td>1</td><td>2</td><td>4</td></tr><tr><td>7</td><td>u,v,x,y,w,z</td><td>无</td><td>无</td><td>0</td><td>2</td><td>3</td><td>1</td><td>2</td><td>4</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601465.png" alt=""></p></div><p><strong>路由振荡</strong>：网络结构和路径开销的动态变化，导致<strong>频繁更换路由</strong></p><div class="note success flat"><p>如下图考虑y到w的路由，a时刻决定b时刻顺时针走，b时刻c时刻逆时针走，c时刻决定d时刻顺时针走，d时刻决定下次逆时针走<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151712659.png" alt=""></p></div><h3 id="2-2-距离向量算法">2.2 距离向量算法</h3><p><strong>距离向量算法（Distance Vector, DV）</strong></p><ul><li><strong>距离向量</strong>：包含从该节点到网络中所有其他节点的<strong>当前已知</strong>的最短路径</li><li><strong>距离向量表/路由选择表</strong>：包含当前获得的邻居的距离向量</li></ul><p><strong>Bellman-Ford算法</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mo stretchy="false">[</mo><mi>y</mi><mo stretchy="false">]</mo><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">{</mo><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>d</mi><mi>v</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">d_x[y]=\min\{c(x,v) + d_v(y)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">{</span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)}</span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>是x的所有邻居</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c(x,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>表示当前节点x到邻居节点v的开销</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_x(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>表示当前节点x到其他节点y到开销</li></ul><p>DV算法过程</p><ol><li>每个节点初始化自己的距离向量表，到直接连接的邻居节点的距离为实际距离，而到其他节点的距离为无穷大</li><li>节点定期将距离向量信息发送给邻居节点</li><li>节点根据收到的距离向量信息，填入自己的距离向量表，然后使用 Bellman-Ford 方程更新自己的距离向量</li><li>如果节点的距离向量发生变化，会发送更新报文给邻居节点</li><li>重复上述过程，直到所有节点的距离向量表不再变化</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601466.png" alt=""></p><h3 id="2-3-区别">2.3 区别</h3><table><thead><tr><th>属性</th><th>LS算法</th><th>DV算法</th></tr></thead><tbody><tr><td>类型</td><td>集中式</td><td>分布式</td></tr><tr><td>发送对象</td><td>广播更新报文到全部节点</td><td>发送更新报文到邻居节点</td></tr><tr><td>收敛速度</td><td>固定为为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td>很慢</td></tr><tr><td>健壮性</td><td>路由计算在某种程度上是独立的，具有一定的健壮性</td><td>一台路由器出现延迟可能导致整个网络路由改变</td></tr></tbody></table><h3 id="2-4-路由选择环路">2.4 路由选择环路</h3><p>定义数据包在网络中<strong>由于错误的路由信息而在多个路由器之间无限循环</strong>，无法到达目标地址的现象</p><p>原因</p><ul><li>路由器之间的路由信息不一致，导致数据包被错误地转发</li><li>路由协议在拓扑变化时收敛速度较慢，可能导致临时环路</li><li>路由信息在短时间内频繁变化，可能导致数据包在网络中循环</li></ul><p>解决</p><ol><li><strong>最大跳数</strong>：当数据包的跳数超过最大跳数值时，数据包将被丢弃</li><li><strong>毒性逆转</strong>：当路由器检测到某条路径失效时，将该路径的距离设置为无穷大，并立即通知邻居</li><li><strong>水平分割</strong>：路由器不会将从一个邻居学到的路由信息再发送回该邻居</li></ol><h2 id="3-AS">3. AS</h2><p><strong>自治系统（Autonomous System, AS）</strong>：是网络管理的基本单位，是在一个<strong>统一的管理域内</strong>运行的一组路由器，这些路由器使用<strong>相同的路由策略和路由协议</strong></p><ul><li><strong>路由管理的模块化</strong>：将网络管理划分为一个个域，降低路由器的计算和存储开销</li><li><strong>路由策略的灵活性</strong>：不同的网络可能有不同的路由需求（如优先级、流量控制、安全策略等）</li><li><strong>提高网络的可靠性和扩展性</strong>：每个 AS 只需维护内部路由和少量外部路由信息，避免了单点故障，支持互联网的持续扩展</li></ul><p>路由协议</p><ul><li>内部网关协议（Interior Gateway Protocol, IGP）：用于 AS 内部的路由选择</li><li>外部网关协议（Exterior Gateway Protocol, EGP）：用于 AS 之间的路由选择</li></ul><h2 id="4-OSPF">4. OSPF</h2><p><strong>开放最短路优先（Open Shortest Path First, OPSF）</strong>：用于在自治系统内部交换路由信息的协议</p><div class="note warning flat"><p>OSPF 是网络层协议，不用 UDP 或 TCP，而是直接使用 IP 数据包传送</p></div><p>OSPF 分组类型</p><ul><li>Hello 分组：用于发现邻居路由器并建立邻居关系</li><li>数据库描述分组（DataBase Description, DBD）：用于交换链路状态数据库的摘要信息</li><li>链路状态请求分组（Link-State Request, LSR）：用于请求缺失的链路状态信息</li><li>链路状态更新分组（Link-State Update, LSU）：用于发送链路状态信息</li><li>链路状态确认分组（Link-State Acknowledgement, LSAck）：用于确认接收到的链路状态信息</li></ul><p>OSPF 流程</p><ol><li>邻居发现：通过 Hello 分组发现邻居并建立邻居关系</li><li>数据库同步：通过 DBD 分组交换 LSDB 的摘要信息</li><li>请求缺失信息：通过 LSR 分组请求缺失的链路状态信息</li><li>更新链路状态：通过 LSU 分组发送链路状态信息</li><li>确认接收：通过 LSAck 分组确认接收到的链路状态信息</li></ol><p>区域划分</p><ul><li>将一个AS划分为<strong>多个逻辑区域</strong>，每个区域拥有自己独立的<strong>链路状态数据库</strong></li><li>所有区域必须连接到<strong>骨干区域（Area 0）</strong>，确保区域间的路由信息传播</li></ul><h2 id="5-BGP">5. BGP</h2><h3 id="5-1-工作机制">5.1 工作机制</h3><p><strong>边界网关协议（Broder Gateway Protocol, BGP）</strong>：用于在不同自治系统之间交换路由信息的协议</p><div class="note warning flat"><p>BGP是应用层协议，是基于TCP的</p></div><p>BGP工作流程</p><ol><li>AS选择一个路由器作为自己的边界网关路由器（eBGP），其他路由器则作为内部路由器（iBGP）</li><li>eBGP发送 OPEN 报文与其他 eBGP 建立关系</li><li>eBGP 通告 AS 所能到达的 CIDR 前缀子网信息</li><li>eBGP 根据路径属性（<code>AS-PATH</code>、<code>NEXT-HOP</code>、<code>LOCAL-PREF</code>）和路由选择算法进行路由</li><li>只有在路由信息发生变化时，eBGP 才会立即发送 Update 报文</li><li>eBGP 会定期发送 Keepalive 报文 维护邻居关系</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601467.png" alt=""></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601468.png" alt=""></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601469.png" alt=""></p><h3 id="5-2-路由选择">5.2 路由选择</h3><h4 id="5-2-1-热土豆">5.2.1 热土豆</h4><p><strong>总是选择具有最小最短路径开销的网关</strong></p><ul><li>最短：当前节点到所有其他节点的所有路径中最短的路径</li><li>最小：当前节点到所有网关节点的最短路径中最小的路径</li></ul><p>局限性：<strong>没有考虑AS间的端到端开销，只为了减小在AS内部的开销</strong></p><div class="note info flat"><p>AS 希望赶紧将它扔给别的 AS</p></div><h4 id="5-2-2-消除规则">5.2.2 消除规则</h4><p>按顺序地调用下列消除规则直到余下一条路由供选择</p><ol><li>选择<strong>最高LOCAL-PREF</strong>的路由（最高优先级，由人为设定）</li><li>选择<strong>最短AS-PATH长度</strong>的路由（全局最短）</li><li>选择<strong>最靠近NEXT-HOP</strong>的路由（热土豆，局部最短）</li><li>使用<strong>最高BGP标识符</strong>的路由（最高的接口ip地址或loopback接口ip地址）</li></ol><h3 id="5-3-IP任播">5.3 IP任播</h3><p><strong>IP任播（anycast）</strong>：允许多个不同的服务器或网络节点共享同一个 IP 地址，当客户端向这个 IP 地址发送请求时，网络会将请求路由到最近的或最优的服务器节点，而不是固定的某个节点</p><ul><li><strong>降低延迟</strong>：用户请求可以快速被路由到最近的服务器</li><li><strong>提高可靠性</strong>：如果一个节点出现故障，流量会自动转发到其他健康的节点</li><li><strong>负载均衡</strong>：通过共享相同的IP地址，网络可以将流量均匀地分配到多个节点上</li></ul><div class="note success flat"><p>IP任播技术广泛用于<strong>CDN、DNS、DHCP</strong></p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601470.png" alt=""></p><h3 id="5-4-多宿接入的边界客户网络">5.4 多宿接入的边界客户网络</h3><p>多宿：客户网络通过多个ISP接入互联网</p><p>边界：客户网络位于网络边界，不会用于转发流量</p><p>优势</p><ul><li>提高可靠性：如果一个 ISP 故障，流量会自动切换到另一个 ISP</li><li>提高性能：流量可以分配到多个 ISP，减少单一链路的压力</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601471.png" alt=""></p><h2 id="6-ICMP">6. ICMP</h2><h3 id="6-1-报文">6.1 报文</h3><p><strong>网际控制报文协议（Internet Control Messages Protocol, ICMP</strong>）：用于主机和路由器之间沟通网络层信息</p><div class="note warning flat"><p>ICMP 是网络层协议，ICMP 报文是承载在IP报文中的，即作为 IP 数据包的有效载荷</p></div><table><thead><tr><th>类型</th><th>编码</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>回显应答</td></tr><tr><td>3</td><td>0</td><td>目的网络不可达</td></tr><tr><td>3</td><td>1</td><td>目的主机不可达</td></tr><tr><td>3</td><td>2</td><td>目的协议不可达</td></tr><tr><td>3</td><td>3</td><td>目的端口不可达</td></tr><tr><td>3</td><td>6</td><td>目的网络未知</td></tr><tr><td>3</td><td>7</td><td>目的主机未知</td></tr><tr><td>4</td><td>0</td><td>源抑制：用于拥塞控制</td></tr><tr><td>8</td><td>0</td><td>回显请求</td></tr><tr><td>9</td><td>0</td><td>路由器通告：通告当前路由器的存在和配置信息</td></tr><tr><td>10</td><td>0</td><td>路由器发现：请求别的路由器发送通告</td></tr><tr><td>11</td><td>0</td><td>TTL过期</td></tr><tr><td>12</td><td>0</td><td>IP首部受损</td></tr></tbody></table><p>核心用途</p><ul><li>终点不可达：通告源设备无法到达目标设备</li><li>源点抑制：防止网络设备过载，缓解拥塞问题</li><li>时间超过：帮助诊断网络路径问题，避免数据包无限转发</li><li>参数问题：帮助源设备发现并修正数据包格式问题</li><li>改变路由：通知源设备更新路由表</li></ul><h3 id="6-2-ping">6.2 ping</h3><ol><li>源主机发送一个<strong>类型8编码0</strong>的ICMP报文到指定ip地址或域名的主机，请求回显</li><li>目的主机收到回显请求报文后，会发送一个<strong>类型0编码0</strong>的ICMP报文到源主机，响应回显</li><li>ping命令的结果会指示<strong>往返时间和丢包率</strong></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601478.png" alt=""></p><h3 id="6-3-tracert">6.3 tracert</h3><ol><li>源主机不断发送<strong>TTL递增且端口不可达</strong>的IP数据包到目的主机，从而实现对路径的追踪</li><li>当到达中间路由器且TTL过期时，中间路由器会返回一个<strong>类型11编码0</strong>的ICMP报文</li><li>当到达目的主机时，目的主机会返回一个<strong>类型3编码3</strong>的ICMP报文</li><li>tracert命令的结果会指示往返时延和途径ip地址，如果超时会显示<code>*</code></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601480.png" alt=""></p><h2 id="7-SNMP">7. SNMP</h2><p>网络管理是对计算机网络及其设备进行监控、配置、控制和优化的活动，旨在确保网络的高效、安全和可靠运行</p><p><strong>简单网络管理协议（Simple Network Management Protocol, SNMP）</strong>：是一个<strong>应用层协议</strong>，用于管理站和代理之间传递管理控制报文</p><ul><li><strong>管理站（Network Management Station,NMS</strong>）：向代理发送管理请求，接收代理的响应和通知</li><li><strong>代理（Agent）</strong>：部署在被管设备上，维护管理信息库（MIB），响应管理站的请求，报告异常情况</li><li><strong>管理信息库（Management Information Base,MIB）</strong>：描述被管理设备的属性的标准化数据结构</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601476.png" alt=""></p><p>SNMP报文：作为<strong>UDP</strong>的有效载荷，使用<strong>161</strong>端口进行请求报文和响应报文的传输，使用<strong>162</strong>端口进行陷阱报文的传输</p><table><thead><tr><th>类型</th><th>方向</th><th>描述</th></tr></thead><tbody><tr><td>GetRequest</td><td>管理者-&gt;代理</td><td>请求取得指定MIB对象实例值</td></tr><tr><td>GetNextRequest</td><td>管理者-&gt;代理</td><td>请求取得下一个MIB对象实例值</td></tr><tr><td>GetBulkRequest</td><td>管理者-&gt;代理</td><td>请求批量取得多个MIB对象实例值</td></tr><tr><td>InformRequest</td><td>管理者-&gt;管理</td><td>通知另一个管理相关信息</td></tr><tr><td>SetRequest</td><td>管理者-&gt;代理</td><td>请求设置MIB对象的实例值</td></tr><tr><td>Response</td><td>代理-&gt;管理者or管理者-&gt;管理者</td><td>对请求的响应</td></tr><tr><td>Trap</td><td>代理-&gt;管理者</td><td>向管理者通知一个异常事件</td></tr></tbody></table><div class="note warning flat"><p>陷阱报文是由代理产生的，并且只从代理到管理者，不要求Response，报文结构和其他报文不一样</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter5/202409151601477.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git基本操作</title>
      <link href="/posts/f11dbe61/"/>
      <url>/posts/f11dbe61/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-什么是Git？">1. 什么是Git？</h2><p>Git是一种<strong>分布式版本控制系统</strong>，广泛用于协作开发、版本管理和分支管理</p><ul><li><strong>协作开发</strong>：每个开发者在本地都有完整的仓库，可以从远程仓库拉取最新更新到本地仓库，也可以提交本地仓库的修改到远程仓库</li><li><strong>版本管理</strong>：Git记录了项目的每一次更改，并可以通过查看历史记录比较差异和文件恢复</li><li><strong>分支管理</strong>：Git支持开创多个独立的工作线，运行开发者在分支进行开发、测试和修复，将项目发布在主分支（master或main）</li></ul><div class="note info flat"><p>Git本义其实是饭桶、傻瓜的意思，创始人林纳斯·托瓦兹（Linus Torvalds）想说哪怕是傻瓜都可以使用git实现分布式版本控制<br>后人将“Git” 解释为 “Global Information Tracker” ，即全球信息追踪器，一定程度上蕴含了Git的功能，但这并不是命名的真实意图</p></div><h2 id="2-Git原理">2. Git原理</h2><p>【Git仓库（Repository）】</p><ul><li><strong>远程仓库</strong>：托管在网络服务器上的Git仓库（Github或Gitee），用于开源共享和协作开发</li><li><strong>本地仓库</strong>：托管在开发者个人计算机上的Git仓库，包含项目的所有文件及其版本历史记录</li></ul><p>【Git的四个区】</p><ul><li><strong>工作区/本地库</strong>：存放项目的本地副本，是编辑文件的地方</li><li><strong>暂存区</strong>：暂时存放你准备提交的修改</li><li><strong>版本库</strong>：保存了项目的所有提交记录，即项目的所有版本历史</li><li><strong>远程库</strong>：托管在网络服务器上的Git仓库</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/Gitee/202409181327357.png" alt=""></p><h2 id="3-Git操作">3. Git操作</h2><h3 id="3-1-Git安装">3.1 Git安装</h3><p>git安装网上很多教程，这里推荐这个链接</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.csdn.net/qq_45281589/article/details/134650456">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a461b627dc2.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Git安装教程（超详细）</div>          <div class="tag-link-sitename">Fun_Rock</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h3 id="3-2-SSH">3.2 SSH</h3><p><strong>SSH（Secure Shell）</strong>：安全外壳协议，提供了对计算机的加密连接，确保数据在传输过程中的机密性和完整性，主要用于<strong>远程登录、文件传输和命令执行</strong></p><p>【SSH的认证】</p><table><thead><tr><th>方法</th><th>方式</th><th>适用</th><th>性质</th></tr></thead><tbody><tr><td>密码（password）</td><td>用户提供用户名和密码给服务器来验证身份</td><td>临时访问</td><td>每次都需要输入，麻烦</td></tr><tr><td>密钥（secret key）</td><td>私钥存储在本地，公钥存储在服务器</td><td>长期访问</td><td>配置好之后免密登录，私钥不容易泄露</td></tr></tbody></table><p>【SSH的认证流程】</p><ol><li><strong>生成SSH密钥对</strong>：<code>-t rsa</code>指定密钥类型为RSA，<code>b 4096</code>指定密钥长度为4096位，<code>-C your_email</code>为密钥添加邮箱参数</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C your_email</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>your_email是在github或gitee注册时用的邮箱！</p></div><ol start="2"><li><p><strong>按提示操作</strong></p><ol><li>输入文件保存位置：可以自己设置路径，默认是保存在<code>c/Users/DELL/.ssh</code></li><li>输入私钥访问密码</li><li>确认私钥访问密码</li></ol></li><li><p><strong>复制公钥</strong>：切换到路径下的目录，复制公钥文件<code>id_rsa.pub</code>内容</p></li><li><p><strong>添加公钥</strong>：在github或gitee中的个人设置中添加公钥（标题可以写笔记本电脑的名字，用于标识此电脑）<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/Gitee/202409111429264.png" alt=""></p></li><li><p><strong>测试SSH连接</strong></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="3-3-配置">3.3 配置</h3><ol><li><strong>配置本地的用户名和邮箱</strong>：帮助客户端身份被Gitee/Github服务器正确识别</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name your_name</span><br><span class="line">git config --global user.email your_email</span><br></pre></td></tr></table></figure><div class="note success flat"><p>使用命令<code>git config --list</code>可以查看配置信息</p></div><ol start="2"><li><strong>初始化Git仓库</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> path_to_your_project</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><div class="note success flat"><p>会创建一个名为<code>.git</code>的子目录，需要设置<code>显示隐藏的项目</code>才能看到</p></div><ol start="3"><li><strong>连接到远程仓库</strong>：引用名是可选的，默认是origin，哪怕自定义了远程仓库引用名，origin依然保留</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add 引用名 远程仓库URL</span><br></pre></td></tr></table></figure><div class="note success flat"><p>可以通过<code>git remote -v</code>或<code>git remote show</code>来查看连接信息</p></div><h3 id="3-4-获取">3.4 获取</h3><h4 id="3-4-1-获取整个仓库">3.4.1 获取整个仓库</h4><p><strong>克隆仓库</strong>：将远程仓库完整地克隆到本地，如果本地存在同名文件或文件夹会报错，因此这个方法适用于<strong>最初在空文件夹中获取远程仓库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 远程URL</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>后台会自定建立一个本地仓库和远程仓库的连接！不再需要先前的手动连接！</p></div><h4 id="3-4-2-获取最新更改">3.4.2 获取最新更改</h4><p><strong>拉取仓库</strong>：从远程仓库的分支拉取最新的更改到本地仓库（注意<strong>合并冲突</strong>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull 引用名 分支名</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>本地仓库和远程仓库必须存在连接才能使用该命令</p></div><h3 id="3-5-发布">3.5 发布</h3><ol><li><p><strong>修改</strong>：在本地添加、删除和编辑文件</p></li><li><p><strong>上传</strong>：将工作区的修改上传到暂存区（第一个针对全部文件，第二个是指定文件或文件夹）</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git add path-to-file</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>提交</strong>：将暂存区的修改提交到到版本库</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m 声明内容</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><code>-m 声明内容</code>是必须的！这符合协作开发时每个人都清楚知道文件更改详情的原则！如果不使用<code>-m</code>选项会自动进入Vim编辑器，十分不好用</p></div><ol start="4"><li><strong>推送</strong>：将分支版本库的修改推送到远程仓库的分支</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push 引用名 分支名</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>分支名是远程仓库的分支名，不是本地仓库的</p></div><h3 id="3-6-撤销">3.6 撤销</h3><p><strong>软撤销</strong>：撤销最近n次提交，但是<strong>保留更改在工作区</strong>，以便<strong>修改提交声明</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft HEAD~n</span><br></pre></td></tr></table></figure><p><strong>硬撤销</strong>：撤销最近n次提交，并且<strong>丢弃工作区的所有更改</strong>，以便<strong>回到历史版本，重新修改文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD~n</span><br></pre></td></tr></table></figure><p><strong>撤销推送</strong>：撤销已经推送的提交，回到之前版本，以便<strong>回到本地仓库的历史版本进行新一次的工作流</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert commit-hash -m 声明内容</span><br></pre></td></tr></table></figure><div class="note success flat"><p>虽然只使用<code>git revert</code>不会撤销远程仓库的修改，但会自动<strong>创建一个撤销的提交</strong>，此时使用<code>git push</code>即可实现撤销对远程仓库的修改<br><strong>commit-hash</strong>提交的哈希值可以通过<code>git log</code>指令查看</p></div><h3 id="3-7-分支操作">3.7 分支操作</h3><p><strong>查看本地分支</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p><strong>查看远程分支</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure><p><strong>新建分支</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch name</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>在本地新建的分支，跟远程的分支一点关系都没有！</p></div><p><strong>分支重命名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m old-name new-name</span><br></pre></td></tr></table></figure><p>切换分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git switch name</span><br><span class="line">git checkout name</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>switch只有2.23或更高版本的Git才可以使用，可以使用<code>git --version</code>查看当前git版本</p></div><p><strong>删除分支</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d name</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>不能删除当前分支</p></div><h3 id="3-8-引用名操作">3.8 引用名操作</h3><p><strong>添加引用名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rmeote add name 远程库URL</span><br></pre></td></tr></table></figure><p><strong>修改引用名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rename old-name new-name</span><br></pre></td></tr></table></figure><p><strong>删除引用名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote remove name</span><br></pre></td></tr></table></figure><p><strong>查看全部引用名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote show</span><br></pre></td></tr></table></figure><p><strong>查看引用名的具体信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote show name</span><br></pre></td></tr></table></figure><h3 id="3-9-四个区的操作（进阶）">3.9 四个区的操作（进阶）</h3><p><strong>查看版本库的提交信息</strong>：提交的哈希值，作者信息，提交日期和提交的简短说明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p><strong>查看暂存区状态</strong>：列出了有几个本地提交尚未推送到远程仓库，并显示哪些更改已被添加到暂存区，哪些更改还在工作区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p><strong>查看暂存区和版本库的差异</strong>：每次使用<code>git add</code>都会<strong>更新暂存区</strong>的修改，而版本库只保留<strong>最后一次提交</strong>的修改，使用以下指令可以审查和比较代码的变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached</span><br><span class="line">git diff --staged</span><br></pre></td></tr></table></figure><div class="note info flat"><p>实际上，diff的用法还有很多，既可以比较指定版本的差异，还可以比较分支的差异，甚至可以通过选项来设置比较手段，可以查阅相关资料</p></div><p><strong>拉取远程库到版本库</strong>：从远程仓库下载最新更改到版本库，但<strong>不合并这些更改到当前工作分支</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch 引用名 分支名</span><br></pre></td></tr></table></figure><p><strong>拉取版本库到本地库</strong>：合并指定分支到当前分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge 引用名/分支名 -m 声明内容</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>在合并之前，不允许对本地库进行未提交的更改，否则会造成合并冲突</p></div><h3 id="3-10-通用">3.10 通用</h3><p>实际上，如果只是单纯的获取和提交，使用到的指令可能只有这几个：</p><ol><li>获取更新：<code>git pull 引用名 master</code></li><li>上传修改：<code>git add .</code></li><li>提交修改：<code>git commit -m 声明</code></li><li>推送修改：<code>git push 引用名 master</code></li></ol><h2 id="4-Pull-Request">4. Pull Request</h2><p>待更</p><h2 id="5-参考链接">5. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://geek-docs.com/git">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Git</div>          <div class="tag-link-sitename">极客教程</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络层-数据平面</title>
      <link href="/posts/e9eeac5f/"/>
      <url>/posts/e9eeac5f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-网络层功能">1. 网络层功能</h2><table><thead><tr><th>平面</th><th>数据平面</th><th>控制平面</th></tr></thead><tbody><tr><td>功能</td><td>局部分组转发</td><td>全局路由决策</td></tr><tr><td>对象</td><td>从输入链路转发到输出链路</td><td>从源地址传输到目的地址</td></tr><tr><td>方式</td><td>硬件：转发表</td><td>软件：路由选择算法</td></tr><tr><td>时间尺度</td><td>纳秒</td><td>毫秒</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737056.png" alt=""></p><p>网络服务模型：定义了网络层中分组在发送与接收主机之间的<strong>端到端传输特性</strong></p><ul><li><strong>确保交付</strong>：确保分组将最终到达目的地</li><li><strong>时延上限</strong>：确保规定时间内分组能够到达目的地</li><li><strong>有序交付</strong>：确保分组以发送的顺序到达目的地</li><li><strong>带宽下限</strong>：确保网络提供的带宽至少满足某个下限值</li><li><strong>安全性</strong>：在源加密并在目的地解密</li></ul><p>因特网的网络服务模型：<strong>尽力而为服务（best-effort）</strong>，既不保证按序，也不保证交付，既不保证时延，也不保证带宽</p><div class="note success flat"><p>符合端到端原则，使得网络造价大大降低，运行方式灵活，能够适应多种应用</p></div><h2 id="2-路由器">2. 路由器</h2><h3 id="2-1-流程">2.1 流程</h3><ol><li>端接：通过输入端口接收来自网络的数据包</li><li>拆封：校验数据包的完整性，并解析网络层的首部信息</li><li>路由：使用目标 IP 地址查找路由表，决定数据包的<strong>下一跳地址</strong></li><li>检查：根据 ACL 协议检查数据包是否符合安全策略</li><li>转换：根据 NAT 协议进行网络地址转换</li><li>排队：根据流量类型、优先级和 QoS，将数据包放入适当的队列并进行调度</li><li>交换：将数据包从输入端口移动到输出端口</li><li>排队：根据流量类型、优先级和 QoS，将数据包放入适当的队列并进行调度</li><li>封装：根据下一跳地址和目标网络，重新封装数据包以便在下一段链路上传输</li><li>端接：通过输出端口将数据包发送到网络</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737054.png" alt=""></p><p>查找方式</p><ul><li><strong>影子副本</strong>：指在每个输入端口上维护转发表的本地副本，使得每个端口可以独立地做出转发决策，而不需要实时依赖集中式路由处理器</li><li><strong>最长前缀匹配规则</strong>：在该表中寻找与分组目的地址具有最长前缀匹配的链路接口进行转发</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737055.png" alt=""></p><table><thead><tr><th>交换方式</th><th>操作</th><th>性质</th></tr></thead><tbody><tr><td>经内存交换</td><td>分组首先被存储到内存中，由CPU完成发送到输出端口</td><td>依赖CPU和内存，速度非常慢</td></tr><tr><td>经总线交换</td><td>通过一个共享的总线在输入端口和输出端口之间传递</td><td>并发转发，一次只有一个分组能跨域总线，总线的带宽决定了交换速度</td></tr><tr><td>经互联网交换</td><td>利用纵横式交换机，通过控制交叉开关进行分组转发</td><td>并行转发，高吞吐量和低延迟</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737051.png" alt=""></p><h3 id="2-2-排队">2.2 排队</h3><p>输入/输出排队：分组<strong>缓存在输入/输出端口队列</strong>中等待交换/传输</p><ul><li><strong>流量突发</strong>：短时间内到达大量分组</li><li><strong>网络拥塞</strong>：端口处理能力有限，无法同时处理多个分组</li><li><strong>队列头部阻塞（Head-of-Line Blocking, HOL）</strong>：排在前面的分组阻塞了后续分组的处理</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737049.png" alt=""></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737048.png" alt=""></p><p><strong>缓存大小 = 平均往返时延 × 链路容量</strong></p><ul><li>缓存太小：丢包率太高，频繁重传导致性能下降</li><li>缓存太大：过大的缓存会让路由器<strong>从一个转发设备变成一个存储设备</strong>，分组到达路由器之后就一直留在缓存中排队，长时间内路由器<strong>既不会转发该分组，也不会告知发送方网络拥塞</strong></li></ul><div class="note warning flat"><p><strong>缓存膨胀（bufferbloat）</strong>：路由器的缓存只是用于辅助转发，用于处理<strong>一定程度的</strong>流量突发，如果流量大到完全超过路由器的处理能力，那么路由器应该丢包以告知发送方降低发送速率或改变路由路径，而不是缓存大量分组，<strong>给发送方造成一种路由器性能过剩的错觉</strong></p></div><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.csdn.net/dog250/article/details/54999332">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a461b627dc2.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">深夜聊聊Bufferbloat以及TCP BBR</div>          <div class="tag-link-sitename">dog250</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h3 id="2-3-调度">2.3 调度</h3><h4 id="2-3-1-先来先服务-先进先出">2.3.1 先来先服务/先进先出</h4><p>分组按照到达的顺序被调度离开</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737047.png" alt=""></p><h4 id="2-3-2-优先权排队">2.3.2 优先权排队</h4><p>根据优先级将分组分配到不同的队列，调度器优先从队列非空的最高优先权中选择一个分组传输，同一优先级队列中选择FIFO方式</p><div class="note warning flat"><p><strong>非抢占式（non-preemptive）</strong>：一旦分组开始传输，就不能被打断</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737046.png" alt=""></p><h4 id="2-3-3-轮询调度">2.3.3 轮询调度</h4><p>分组先被分到不同的类，调度器在这些类之间轮流提供传输服务</p><div class="note warning flat"><p><strong>保持工作排队（work-conserving）</strong>：有分组在排队的时候，不允许链路空闲，即如果当前类没有分组，会立即检查下一个类</p></div><h4 id="2-3-4-加权公平排队">2.3.4 加权公平排队</h4><p>类似循环排队，但是每个类根据自身情况会被分配到一个权值，调度器根据权值决定传输的带宽份额</p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737045.png" alt=""></p><h4 id="2-3-5-网络中立性">2.3.5 网络中立性</h4><p>主张互联网服务提供商（ISP）应平等对待所有互联网流量，不得因<strong>内容、应用、服务、用户或来源</strong>的不同而区别对待，具有以下原则：</p><ul><li><strong>无阻塞</strong>：不得屏蔽合法的流程</li><li><strong>无限流</strong>：不得损害或降低合法的流量</li><li><strong>无付费优先</strong>：不能收费来使某些流量优于其他流量</li></ul><h2 id="3-IPv4">3. IPv4</h2><h3 id="3-1-首部">3.1 首部</h3><table><thead><tr><th>字段</th><th>长度/比特</th><th>功能</th></tr></thead><tbody><tr><td>版本</td><td>4</td><td>指定IP协议版本，IPv4的值为4</td></tr><tr><td>首部长度</td><td>4</td><td>指示IP首部的长度，以32位字为单位</td></tr><tr><td>服务类型</td><td>8</td><td>表示数据包所需的服务质量</td></tr><tr><td>数据包长度</td><td>16</td><td>指定整个IP数据包的长度，以8位字节为单位</td></tr><tr><td>标识</td><td>16</td><td>唯一标识每个IP数据包，用于分片的重新组装</td></tr><tr><td>标志</td><td>3</td><td>控制和标识数据包的分片</td></tr><tr><td>片偏移</td><td>13</td><td>指示分片在原始数据包中的位置，用于重新组装</td></tr><tr><td>生存时间</td><td>8</td><td>限制数据包在网络中的生存时间，防止无限循环</td></tr><tr><td>协议号</td><td>8</td><td>指示IP数据包所承载的运输层协议</td></tr><tr><td>首部检验和</td><td>16</td><td>用于检测IP首部在传输过程中是否发生错误</td></tr><tr><td>源IP地址</td><td>32</td><td>发送方的IP地址</td></tr><tr><td>目的IP地址</td><td>32</td><td>接收方的IP地址</td></tr><tr><td>选项</td><td>可变</td><td>提供附加功能和控制</td></tr><tr><td>有效载荷</td><td>可变</td><td>实际的传输数据</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737044.png" alt=""></p><div class="note info flat"><p>除去选项，IPv4首部大小为<strong>固定的20字节</strong><br>协议号<strong>6表示交给TCP，17表示交给UDP</strong></p></div><h3 id="3-2-编址">3.2 编址</h3><h4 id="3-2-1-格式">3.2.1 格式</h4><p><strong>点分十进制计法</strong>：地址中的<strong>每个字节</strong>用它的<strong>十进制形式</strong>书写，各字节间以<strong>英文句点</strong>隔开</p><p>特殊ip地址：预留的，不允许被使用</p><ul><li><code>0.0.0.0</code>：<strong>本地地址</strong>或<strong>默认路由地址</strong></li><li><code>255.255.255.255</code>：<strong>广播地址</strong></li></ul><p><strong>子网（subnet）</strong>：是较大网络中的一个分段区域，由一组IP地址构成</p><p><strong>掩码（mask）</strong>：用于确定IP地址中哪些部分是子网标识，哪些部分是主机标识，其中<strong>位为1表示必须匹配，位为0表示任意匹配</strong></p><div class="note success flat"><p>子网掩码是<code>255.255.255.0</code>表示ip地址的前24位用于标识子网，后8位用于表示主机</p></div><p><strong>接口（interface）</strong>：设备与物理链路之间的边界，一个IP地址与一个接口相关联</p><div class="note warning flat"><p>IP地址不是与整个设备相关联，而是与设备的网络接口相关联，也就是说一个设备只要有多个网络接口，它就可以有多个IP地址</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737042.png" alt=""></p><h4 id="3-2-2-编址方式">3.2.2 编址方式</h4><p><strong>分类编址</strong>：IP地址的网络部分被限制为<strong>8位、16位和24位</strong>，分别被称为<strong>A、B和C类</strong>网络</p><ul><li>地址浪费：例如，一个组织需要2000台主机，使用C类网络太小，而使用B类网络又会浪费大量地址</li><li>缺乏灵活性：固定的网络部分长度无法适应不同规模的网络需求</li></ul><p><strong>无类别域间路由选择（Classless Interdomain Routing,CIDR）</strong>：使用<code>IP地址/前缀长度</code>即<code>a.b.c.d/x</code>的形式，前x位用于子网部分，其余位数用于主机部分</p><ul><li>灵活度高：可以根据需要划分不同大小的子网。</li><li>地址聚合：支持将多个小的地址块合并为一个更大的地址块。</li><li>路由优化：简化路由表，提高路由效率。</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737066.png" alt=""></p><h2 id="4-DHCP">4. DHCP</h2><h3 id="4-1-性质">4.1 性质</h3><p><strong>动态主机配置协议（Dynamic Host Configuration Protocol,DHCP）</strong>：用于主机自动分配得到IP地址及其他网络配置参数，如子网掩码，默认网关，DNS服务器</p><p>DHCP的性质</p><ul><li><strong>即插即用（plug-and-play）/零配置（zeroconf）</strong>：DHCP支持主机每连接到一个新的网络后，都能够自动分配到对应的IP地址并实现网络配置，无需任何手动操作</li><li><strong>客户-服务器模式</strong>：客户是新到达子网并申请ip地址的主机，服务器是子网中的DHCP服务器</li><li><strong>基于UDP</strong>：DHCP报文本身较小，且交互是短暂的，没必要使用TCP</li><li><strong>中继代理</strong>：如果当前子网没有DHCP服务器，可以通过路由器与其它子网的DHCP服务器通信，以此实现DHCP服务</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737065.png" alt=""></p><p>IP地址池：是DHCP服务器管理的一组IP地址，其跟踪每个IP地址的状态用于动态分配</p><ul><li><strong>可用（Available）</strong>：未被分配给任何客户端，处于可供分配的状态</li><li><strong>分配（Allocated）</strong>：已分配给客户端，正在使用中，租约期间内不能再分配给其他主机</li><li><strong>保留（Reserved）</strong>：保留给某些特定设备，确保这些设备每次连接获得相同IP地址</li></ul><h3 id="4-2-流程">4.2 流程</h3><table><thead><tr><th>报文类型</th><th>说明</th></tr></thead><tbody><tr><td>Discover</td><td>客户端发送的广播请求，用于查找可用的DHCP服务器</td></tr><tr><td>Offer</td><td>DHCP服务器响应客户端的Discover报文，提供IP地址和其他配置信息</td></tr><tr><td>Request</td><td>客户端请求Offer中的IP地址</td></tr><tr><td>Decline</td><td>客户端通知DHCP服务器，它收到的IP地址不可用</td></tr><tr><td>ACK</td><td>DHCP服务器确认客户端的Request报文，分配指定的IP地址并提供其他配置</td></tr><tr><td>NAK</td><td>DHCP服务器拒绝客户端的Request报文</td></tr><tr><td>Release</td><td>客户端通知DHCP服务器，它已经释放了之前分配的IP地址</td></tr><tr><td>Inform</td><td>客户端请求额外的配置信息，但不需要IP地址的分配</td></tr></tbody></table><p>流程</p><ol><li>客户端广播Discover报文，以寻找DHCP服务器</li><li>服务器收到Discover报文后，广播一个Offer报文</li><li>客户端从收到的多个Offer报文中选择一个，广播Request报文</li><li>服务器收到Request报文后，广播ACK报文</li></ol><p>为什么都是广播？</p><ul><li>Discover：DHCP客户不知道DHCP服务器在哪儿</li><li>Offer：DHCP服务器不知道DHCP客户在哪儿</li><li>Request：DHCP客户需要通知所有DHCP服务器自己的选择，让其他DHCP服务器释放暂时分配给自己的地址</li><li>ACK：DHCP服务器还是不知道DHCP客户在哪儿</li></ul><div class="note info flat"><p>68是DHCP客户监听的端口，67是DHCP服务器监听的端口</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737064.png" alt=""></p><h3 id="4-3-续约">4.3 续约</h3><ol><li>客户端在租约时间剩余50%的时候，向DHCP服务器单播一个Request报文请求续租</li><li>客户端在租约时间剩余12.5%的时候，广播一个Request报文请求续租</li><li>服务器响应一个ACK报文，确认续租并重新约定一个租约时间</li><li>服务器响应一个NAK报文，拒绝续约</li><li>当客户端不再需要IP地址或者租约到期，会发送Release报文通知DHCP服务器释放IP地址</li></ol><h2 id="5-NAT">5. NAT</h2><h3 id="5-1-性质">5.1 性质</h3><p><strong>网络地址转换（Network Address Translation, NAT）</strong>：是一种部署在路由器的网络技术，用于将私有网络中的 IP 地址转换为公有 IP 地址</p><ul><li><strong>私有网络</strong>：指的是专用网和局域网，在互联网中不可路由，在不同私有网络中可以重复，有三个特定地址空间<code>10.0.0.0/8</code>，<code>172.16.0.0/12</code>，<code>192.168.0.0/16</code>（代表大中小三个规模）</li><li><strong>公有网络</strong>：指的是互联网和广域网，在互联网中是可路由的，具有全球唯一性</li></ul><p>NAT的意义</p><ul><li><strong>解决 IPv4 地址短缺</strong>：NAT 允许在不同的私有网络中使用相同的私有 IP 地址，只需要为不同私有网络分配不同公有 IP 地址</li><li><strong>提高网络安全性</strong>：NAT 隐藏内部网络的私有 IP 地址，外部网络只能看到 NAT 设备的公有 IP 地址</li><li><strong>简化网络管理</strong>：多个私有 IP 地址可以映射到同一个公有 IP 地址，降低网络管理成本</li></ul><h3 id="5-2-流程">5.2 流程</h3><p>NAT 类型</p><ul><li>静态 NAT：将一个私有 IP 地址永久映射到一个公有 IP 地址</li><li>动态 NAT：从公有 IP 地址池中动态分配一个 IP 地址给内部设备</li><li>PAT：将多个私有 IP 地址映射到一个公有 IP 地址，并通过端口号区分不同的会话</li></ul><p>NAT 流程</p><ol><li>内部设备发送数据包到外部网络，会经过 NAT 设备</li><li>NAT 设备根据不同的方式，选择一个公有 IP 地址，将数据包的源 IP 地址和端口号替换为公有 IP 地址和端口号，并将映射关系缓存在 NAT 转换表中</li><li>NAT 设备将转换后的数据包转发到外部网络</li><li>NAT 设备收到外部服务器的响应数据包</li><li>NAT 设备根据 NAT 转换表，将目标 IP 地址和端口号转换回内部设备的私有 IP 地址和端口号</li><li>NAT 设备将转换后的数据包转发到内部网络</li><li>内部设备收到数据包，完成通信</li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737063.png" alt=""></p><h2 id="6-IPv6">6. IPv6</h2><h3 id="6-1-首部">6.1 首部</h3><table><thead><tr><th>字段</th><th>长度/比特</th><th>含义</th></tr></thead><tbody><tr><td>版本</td><td>4</td><td>指示IP协议版本，IPv6的值为6</td></tr><tr><td>流量类型</td><td>8</td><td>用于分类数据包</td></tr><tr><td>流量标签</td><td>20</td><td>用于标识数据流，支持流量的优先级处理</td></tr><tr><td>有效载荷长度</td><td>16</td><td>指示数据部分长度</td></tr><tr><td>下一首部</td><td>8</td><td>指示数据包要交付给哪个协议（TCPorUDP）</td></tr><tr><td>跳限制</td><td>8</td><td>类似TTL，限制数据包路由次数</td></tr><tr><td>源地址</td><td>128</td><td>指示数据包发送者的地址</td></tr><tr><td>目的地址</td><td>128</td><td>指示数据包接收者的地址</td></tr><tr><td>有效载荷</td><td>变长</td><td>扩展首部+实际传输的数据</td></tr></tbody></table><p>IPv6与IPv4的核心差别</p><ul><li>使用<strong>128比特</strong>地址，扩大的地址容量</li><li>移除了校验和、分片、选项字段，提高了路由效率</li><li>引入了扩展头部，支持灵活的功能扩展</li></ul><h3 id="6-2-IPv6编址">6.2 IPv6编址</h3><p>表示方法：128比特，<strong>是用冒号分隔的8组4位16进制数</strong></p><ul><li>前导零可以省略，<code>2001:0db8:0000:0000:0000:0000:0000:0001</code>可以简化为 <code>2001:db8:0:0:0:0:0:1</code></li><li>连续的零组可以用双冒号::代替，如<code>2001:0db8:0000:0042:0000:0000:0000:1234</code>可以简化为 <code>2001:db8:0:42::1234</code></li></ul><p>IPv6的目的地址类型</p><ul><li><strong>单播（Unicast）</strong>：一对一通信，数据从单个发送方传输到单个接收方</li><li><strong>多播（Multicast）</strong>：一对多通信，数据从单个发送方传输到一组指定的接收方</li><li><strong>任播（Anycast）</strong>：一对最近的通信，数据从单个发送方传输到一组接收方中最近的一个</li></ul><h3 id="6-3-IPv6迁移">6.3 IPv6迁移</h3><ul><li>双栈技术：在网络设备上同时运行 IPv4 和 IPv6 协议栈</li><li>隧道技术：将 IPv6 数据包封装在 IPv4 数据包中传输</li><li>协议转换技术：通过协议转换设备将 IPv6 数据包转换为 IPv4 数据包</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737061.png" alt=""></p><div class="note info flat"><p>改变网络层协议是极其困难的，因为网络层协议是互联网架构中的最核心部分，向上要调整运输层，向下要调整链路层，以及大部分应用服务都基于网络层协议来设计，<strong>牵一发而动全身</strong></p></div><h2 id="6-泛化转发">6. 泛化转发</h2><p>定义：能够根据多种条件（如流量类型、服务质量、安全策略等）动态决定数据包的转发路径，而不仅仅基于目标 IP 地址</p><p><strong>流表（flow table）</strong>：存储匹配+动作的映射关系</p><ul><li>匹配：数据包的特定字段，如源 IP 地址、目标 IP 地址、协议类型、端口号等</li><li>动作：匹配后的处理动作，如转发、丢弃、修改、复制等</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737060.png" alt=""></p><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737059.png" alt=""></p><h2 id="7-中间盒">7. 中间盒</h2><p><strong>中间盒（middlebox）</strong>：是位于网络路径中的设备或软件，不参与传统的数据包转发，而是对数据包进行深度处理</p><ul><li><strong>地址转换</strong>：网络地址转化（NAT）、协议转换器</li><li><strong>安全防护</strong>：访问控制列表（ACL）、防火墙（Firewall）、入侵检测系统（IDS）、入侵防御系统（IPS）</li><li><strong>网络监控</strong>：流量分析器、数据包捕获器</li><li><strong>性能优化</strong>：负载均衡器、缓存服务器、压缩设备</li></ul><h2 id="8-互联网架构原则">8. 互联网架构原则</h2><p>互联网架构原则：<strong>目标是连接，工具是因特网协议，智能是端到端而不是隐藏在网络中</strong></p><ul><li><strong>为什么工具是IP协议</strong>：因为在物理层、链路层、运输层和应用层可能具有许多协议，但是在网络层只有一个网际协议IP，因此又称为“跨越层”，即<strong>实现了隐藏底层物理技术的实现，并为上层抽象技术提供了统一的服务接口</strong></li><li><strong>为什么智能是端到端</strong>：因为网络的核心作用只是作为数据的“运输通道”，其职责是将数据从源端传输到目标端，而不涉及对数据内容的处理，降低网络的复杂性，将复杂的网络功能由应用层来处理</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter4/202409121737058.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Wireshark观察TCP三次握手</title>
      <link href="/posts/3828c331/"/>
      <url>/posts/3828c331/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><p><em><strong>运输层知识请看</strong></em></p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://dasi.net.cn/posts/bbea855c/">  <div class="tag-link-tips">✅来自本站，可以放心食用~</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">计网：运输层</div>          <div class="tag-link-sitename">Dasi's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h2 id="1-TCP的三次握手">1. TCP的三次握手</h2><h3 id="1-1-原理">1.1 原理</h3><p>三次握手流程</p><ol><li>客户端TCP向服务器端TCP发送<font color="orangered">SYN报文段</font><ul><li>首部中的SYN标志位被置为1，ACK标志位被置为0</li><li>客户会随机地选择一个初始序号（client_isn）</li><li>确认号字段被置为0</li></ul></li><li>服务器端TCP接收到SYN报文段，为TCP连接分配缓存和变量，并向客户端TCP发送<font color="orangered">SYNACK报文段</font><ul><li>首部中的SYN标志位被置为1，ACK标志位被置为1</li><li>服务器会随机选一个初始序号（server_isn）</li><li>确认号字段被置为client_isn+1</li></ul></li><li>客户端TCP接收到SYNACK报文段，为TCP连接分配缓存和变量，并向服务器端TCP发送<font color="orangered">ACK报文段</font><ul><li>首部中的SYN标志位被置为0，ACK标志位被置为1</li><li>序号字段被置为client_isn+1</li><li>确认号字段被置为server_isn+1</li></ul></li></ol><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter3/202409092139126.png" alt=""></p><div class="note info flat"><p>为什么需要三次握手？</p><ul><li>全双工通信<ul><li>第一次握手<strong>确认客户端请求建立连接</strong></li><li>第二次握手<strong>确认服务器同意建立连接</strong>，并且<strong>服务器可以接收到客户数据</strong></li><li>第三次握手<strong>确认客户可以接收到服务器的数据</strong></li></ul></li><li>可靠性：三次握手确保双方都能正确接收和处理对方的序列号和确认号，从而实现可靠数据传输</li></ul></div><h3 id="1-2-TCP报文段结构">1.2 TCP报文段结构</h3><table><thead><tr><th>字段</th><th>长度/比特</th><th>作用</th></tr></thead><tbody><tr><td>源端口号（Resource Port）</td><td>16</td><td>标识数据传输的起始端点</td></tr><tr><td>目的端口号（Destination Port）</td><td>16</td><td>标识数据传输的终止端点</td></tr><tr><td>序号（Sequence Number）</td><td>32</td><td>标识TCP数据流中的字节顺序</td></tr><tr><td>确认号（Acknowledgement Number）</td><td>32</td><td>标识下一个期望接收的字节序号</td></tr><tr><td>首部长度（Header Length）</td><td>4</td><td>指示TCP头部长度，以32位字为单位</td></tr><tr><td>保留区域（Reserved）</td><td>3</td><td>保留，可能会在未来的协议扩展中有新的用途</td></tr><tr><td>减少拥塞窗口（CWR）</td><td>1</td><td>发送方用于确认它已经响应了网络拥塞，调整了其拥塞窗口</td></tr><tr><td>显式拥塞通知（ECN-Echo）</td><td>1</td><td>接收方用于通知发送方网络发生了拥塞</td></tr><tr><td>标志（Flags）</td><td>6</td><td>控制位，标识特殊功能（具体在下面）</td></tr><tr><td>接收窗口（Window）</td><td>16</td><td>指定接收方的缓存区域大小</td></tr><tr><td>检验和（Checksum）</td><td>16</td><td>检验报文在传输过程中是否出错</td></tr><tr><td>紧急数据指针（Urgent Pointer）</td><td>16</td><td>指示紧急数据在数据流中的位置</td></tr><tr><td>选项（Options）</td><td>每项32位</td><td>用于传输协议的扩展功能</td></tr><tr><td>数据（Data）</td><td>可变</td><td>实际传输的应用数据部分</td></tr></tbody></table><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter3/202409092139115.png" alt=""></p><h3 id="1-3-标志（按顺序）">1.3 标志（按顺序）</h3><ul><li><strong>URG（Urgent）</strong>：紧急指示标志，表示有紧急数据需要优先处理</li><li><strong>ACK（Acknowledgement）</strong>：确认标志，用于确认收到的数据</li><li><strong>PSH（Push）</strong>：推送标志，表示接收方应尽快将数据推送到应用程序，而不是等待缓冲区满</li><li><strong>RST（Reset）</strong>：重置标志，用于重新初始化连接</li><li><strong>SYN（Synchronize）</strong>：同步标志，用于连接的建立阶段</li><li><strong>FIN（Finish）</strong>：结束标志，用于连接的终止阶段</li></ul><h2 id="2-实验">2. 实验</h2><h3 id="2-1-实验流程">2.1 实验流程</h3><ol><li>打开Wireshark，点击控制栏的“开始捕获分组”，即蓝色鲨鳍图标</li><li>打开Edge浏览器，输入要访问的网址，这里输入的是<code>www.baidu.com</code></li><li>打开Wireshark，点击控制栏的“停止捕获分组”，即红色方形图标</li><li>打开Terminal，输入命令<code>ping www.baidu.com -4</code>，获取主机的IPv4地址<code>183.240.98.198</code><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/Wireshark-TCP/202409100017031.png" alt=""></li><li>打开Wireshark，在控制栏底部的过滤器中输入<code>ip.addr == 183.240.98.198 and tcp</code><br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/Wireshark-TCP/202409100017032.png" alt=""></li><li>滚动滑到最上面栏目，不出意外的话前三个就是TCP的三次握手<br><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/Wireshark-TCP/202409101706736.png" alt=""></li></ol><div class="note warning flat"><p>需要说明的是，书本上都是以HTTP协议做例子，握手之后直接就可以传输数据<br>但现在的浏览器都<strong>强制使用HTTPS协议</strong>，在TCP连接建立之后，会进行<strong>TLS握手阶段</strong>（主要包括Client Hello、Server Hello、证书交换、密钥交换和握手完成），然后才传输数据<br>所以这里我们只看前三个TCP</p></div><h3 id="2-2-首部分析（以第一个TCP为例）">2.2 首部分析（以第一个TCP为例）</h3><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/Wireshark-TCP/202409101302627.png" alt=""></p><p><code>Frame 35: 66 bytes on wire (528 bits), 66 bytes captured (528 bits) on interface \Device\NPF_&#123;7EF505B7-CAD7-4835-BC20-6D8015ED071D&#125;, id 0</code>：<strong>捕获数据帧的元信息</strong></p><ul><li><code>Frame 35</code>：捕获的数据帧编号</li><li><code>66 bytes on wire (528 bits)</code>：数据帧在网络上实际传输的长度是66字节</li><li><code>66 bytes captured (528 bits)</code>：捕获的数据帧长度也是66字节，说明成功地捕捉到了全部内容</li><li><code>on interface \Device\NPF_&#123;7EF505B7-CAD7-4835-BC20-6D8015ED071D&#125;</code>：数据帧在指定的网络接口上捕获，这里由Wireshark使用</li></ul><p><code>Ethernet II, Src: Intel_c8:72:56 (8c:f8:c5:c8:72:56), Dst: NewH3CTechno_ba:6a:01 (28:e4:24:ba:6a:01)</code>：<strong>链路层协议</strong></p><ul><li><code>Ethernet II</code>：表示这是一个以太网II格式的数据帧</li><li><code>Src: Intel_c8:72:56 (8c:f8:c5:c8:72:56)</code>：表示数据帧的源MAC地址</li><li><code>Dst: NewH3CTechno_ba:6a:01</code>：表示数据帧的目的MAC地址</li></ul><p><code>Internet Protocol Version 4, Src: 172.19.59.243, Dst: 183.240.98.198</code>：<strong>网络层协议</strong></p><ul><li><code>Internet Protocol Version 4</code>：表示这是一个IPv4协议的数据帧</li><li><code>Src: 172.19.59.243</code>：表示数据帧的源IP地址</li><li><code>Dst: 183.240.98.198</code>：表示数据帧的目的IP地址</li></ul><p><code>Transmission Control Protocol, Src Port: 56996, Dst Port: 443, Seq: 0, Len: 0</code>：<strong>运输层协议</strong></p><ul><li><code>Transmission Control Protocol</code>：表示这是一个TCP协议的数据帧</li><li><code>Src Port: 56996</code>：表示数据帧的源端口</li><li><code>Dst Port</code>：表示数据帧的目的端口</li><li><code>Seq: 0</code>：表示数据帧的序列号</li><li><code>Len: 0</code>：表示数据帧的有效负载长度</li></ul><div class="note success flat"><p>接下来主要从运输层协议角度分析，并且只讲一些关键字段</p></div><h3 id="2-3-第一次握手：SYN">2.3 第一次握手：SYN</h3><div class="note success flat"><p>点击左边栏目的字段，右边栏目会将对应的字节高亮</p></div><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/Wireshark-TCP/202409100017033.png" alt=""></p><p><code>Sequence Number (raw): 3595153809</code>：绝对序号是3595153809，16进制下是<code>d6 49 b1 91</code></p><p><code>Acknowledgment number (raw): 0</code>：在三次握手过程中，第一个SYN包的确认号通常是0，表示还没有任何数据被确认</p><p><code>Flags: 0x002 (SYN)</code>：后六位是<code>000010</code>，SYN被置位，表示客户请求建立连接</p><p><code>Options: (12 bytes), Maximum segment size, No-Operation (NOP), Window scale, No-Operation (NOP), No-Operation (NOP), SACK permitted</code></p><ul><li>TCP Option - Maximum segment size: 1460 bytes：表示每个TCP数据段的最大有效负载（MSS）为1460字节</li><li>TCP Option - Window scale: 8 (multiply by 256)：表示TCP窗口的实际大小是窗口字段值乘以256</li><li>TCP Option - SACK permitted，表示允许接收方告知发送方哪些数据块已经成功接收，哪些需要重传</li><li>TCP Option - No-Operation (NOP)：这是一个填充或对齐选项，长度为1字节，用于确保其他选项的对齐</li></ul><div class="note warning flat"><p>每个选项字段长都是4字节（32位），而有些选项值只需要1/2/3字节，因此需要1字节的NOP对齐到4字节边界</p></div><h3 id="2-4-第二次握手：SYN-ACK">2.4 第二次握手：SYN-ACK</h3><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/Wireshark-TCP/202409100017034.png" alt=""></p><p><code>Sequence Number (raw): 2472347759</code>：绝对序号随机初始化为2472347759</p><p><code>Acknowledgment number (raw): 3595153810</code>：绝对序号是3595153810，可以发现是<strong>SYN报文段的序号（3595153809）+1</strong></p><p><code>Flags: 0x012 (SYN, ACK)</code>：后六位是<code>010010</code>，ACK和SYN被置位，表示服务器允许并确认建立连接</p><h3 id="2-5-第三次握手：ACK">2.5 第三次握手：ACK</h3><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/Wireshark-TCP/202409100017035.png" alt=""></p><p><code>Sequence Number (raw): 3595153810</code>：绝对序号是3595153810，可以发现是<strong>SYN报文段的序号（3595153809）+1</strong></p><p><code>Acknowledgment number (raw): 2472347760</code>：绝对序号是2472347760，可以发现是<strong>SYN-ACK报文段的序号（2472347759）+1</strong></p><p><code>Flags: 0x010 (ACK)</code>：后六位是<code>010000</code>，ACK被置位，表示客户端确认了服务器端的连接请求，并准备好了进行数据交换</p><div class="note warning flat"><p>可以发现，第三次握手的时候没有选项字段，这是因为在第一次和第二次握手中协商了部分选项（如最大段大小、窗口缩放等），这些选项已经被双方认可和接受，不需要再次声明</p></div><h3 id="2-5-相对序号">2.5 相对序号</h3><p>在Wireshark中使用相对序号而非绝对序号，主要是为了简化数据包分析过程，因为绝对序号在TCP流量中通常很长，且随着数据流量的增加而增加，这使得观察和比较变得复杂</p><p>利用相对序号概述一遍流程：</p><ol><li>客户端发送<code>Seq=0,ACK=0</code>的<strong>SYN</strong>报文来<strong>请求连接</strong></li><li>服务器发送<code>Seq=0,ACK=1</code>的<strong>SYN-ACK</strong>报文来<strong>允许连接</strong></li><li>客户端发送<code>Seq=1,ACK=1</code>的<strong>ACK</strong>报文来<strong>确认连接</strong></li></ol><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://cloud.tencent.com/developer/article/1538191">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Wireshark抓包分析 TCP三次握手</div>          <div class="tag-link-sitename">我的小碗汤</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：对象</title>
      <link href="/posts/b7ba4348/"/>
      <url>/posts/b7ba4348/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-引用值">1. 引用值</h2><p>引用值：又称对象，是某个特定引用类型的实例</p><p>引用类型：是把数据和功能组织到一起的结构</p><p>对象由特性（attribute）构成</p><ul><li>如果特性是函数，它将被看作对象的方法（method）</li><li>如果特性是值（原始和引用），它被看作对象的属性（property）</li></ul><p>ECMAScript是面向对象的</p><ul><li>封装：把相关的信息存储在对象中的能力</li><li>聚集：把一个对象存储在另一个对象内的能力</li><li>继承：由另一个类得来类的属性和方法的能力</li><li>多态：编写能以多种方法运行的函数的能力</li></ul><h2 id="2-Date">2. Date</h2><h3 id="2-1-日期格式">2.1 日期格式</h3><ul><li><p>短日期：<code>&quot;月/日/年&quot;</code>，如&quot;2/27/2004&quot;</p></li><li><p>长日期：<code>&quot;月名 日, 年&quot;</code>，如&quot;Feb 27, 2004&quot;</p></li><li><p>完整日期：<code>&quot;周几 月名 日 年 时:分:秒 时区&quot;</code>，如&quot;Fri Feb 27 2004 00:00:00 GMT+0800&quot;</p></li><li><p>ISO：<code>&quot;YYYY-MM-DDThh:mm:ss:sssZ&quot;</code>，如&quot;2004-02-27T00:00:00:000Z&quot;</p></li><li><p>日期和时间通过大写字母T来分隔</p></li><li><p>UTC时间通过大写字母Z来定义</p></li></ul><div class="note info flat"><p>UTC（Universal Time Coordinated）/GMT (Greenwich Mean Time)：具有相同的时间值，作为世界标准时间</p></div><h3 id="2-2-日期初始化方法">2.2 日期初始化方法</h3><ul><li><code>Date.parse(string)</code>：传递上述日期格式的字符串</li></ul><div class="note info flat"><ol><li>如果直接把string传给构造函数，后台实际上是通过调用Date.parse实现的</li><li>如果直接把数值传给构造函数，后台实际上是创建一个1970年1月1日加上传参毫秒的新日期对象</li><li>一天是86400000毫秒</li></ol></div><ul><li><code>Date.UTC(年, 月数, 日, 时, 分, 秒, 毫秒)</code>：依次传递数值<ul><li>只有年和月是必须的</li><li>不提供日则默认是1日，其他默认是0</li><li>月数是从零开始计数的，也就是1月是0，12月是11</li></ul></li></ul><h3 id="2-3-日期设置和获取方法">2.3 日期设置和获取方法</h3><ul><li><p><code>setFullYear(),setMonth(),setDate(),setHours(),setSeconds()</code>：设置日期的某个部分（月从0开始）</p></li><li><p><code>getFullYear(),getMonth(),getDate(),getHours(),getSeconds()</code>：获取日期的某个部分</p></li><li><p><code>setTime()</code>：传递数值，表示从1970年1月1日至今的毫秒数</p></li><li><p><code>now()</code>：获取从1970年1月1日至今的毫秒数</p></li></ul><h3 id="2-4-继承方法">2.4 继承方法</h3><ul><li><code>toString()</code>：将日期转换为当前时区的字符串</li><li><code>toUTCString()</code>：将日期转换为UTC下的字符串</li><li><code>valueOf()</code>：将日期自动转换为时间戳</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;Feb 27, 2004&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">toString</span>());    <span class="comment">// Fri Feb 27 2004 00:00:00 GMT+0800 (中国标准时间)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">toUTCString</span>()); <span class="comment">// Thu, 26 Feb 2004 16:00:00 GMT</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">valueOf</span>());     <span class="comment">// 1077811200000</span></span><br></pre></td></tr></table></figure><h2 id="3-RegExt">3. RegExt</h2><h3 id="3-1-正则表达式语法">3.1 正则表达式语法</h3><p><code>/pattern/flags</code></p><ul><li>模式串：字面量字符串<ul><li><code>.</code>：代替任何字符，如<code>/a.c/</code>是匹配 “aXc”、“a7c” 等</li><li><code>[]</code>：匹配括号内的任意一个字符，如<code>/[abc]/</code>是匹配 “a”、“b” 或 “c”</li><li><code>-</code>：匹配字符范围，如<code>/[a-z]/</code>是匹配小写字母</li><li><code>+</code>：匹配前一个字符一次或多次，如<code>/a+/</code>是匹配 “a”、“aa”、“aaa” 等</li><li><code>*</code>：匹配前一个字符零次或多次，如<code>/a*/</code>是匹配 “”、“a”、“aa” 等</li><li><code>?</code>：匹配前一个字符零次或一次，如<code>/a?/</code>是匹配 “” 或 “a”</li><li><code>&#123;n,m&#125;</code>: 匹配前一个字符n到m次，如<code>/a&#123;2,4&#125;/</code>是匹配 “aa”、“aaa” 或 “aaaa”</li><li><code>^</code>：匹配字符串的开始，如<code>/^abc/</code>是匹配以 “abc” 开头的字符串</li><li><code>$</code>：匹配字符串的结尾，如<code>/abc$/</code>是匹配以 “abc” 结尾的字符串</li><li><code>|</code>：匹配任意一个字符串，如<code>/abc|def/</code>是匹配 “abc” 或 “def”</li><li><code>(?=)</code>：匹配仅当后面跟着指定内容，如<code>/a(?=b)/</code>是匹配 “a” 仅当后面跟着 “b”</li><li><code>(?!)</code>：匹配仅当后面不跟着指定内容，如<code>/a(?!b)/</code>是匹配 “a” 仅当后面不跟着 “b”</li><li><code>\d</code>：匹配任何数字</li><li><code>\w</code>：匹配任何字母、数字或下划线</li></ul></li><li>标志位：控制搜索行为<ul><li><code>g</code>：全局，即查找全部内容而不是第一次匹配到就结束</li><li><code>i</code>：不区分大小写</li><li><code>m</code>：多行，即查找到一行末尾不会停止</li><li><code>y</code>：粘附，只查找lastIndex开始及之后的字符串</li><li><code>u</code>：启用Unicode匹配</li><li><code>s</code>：dotAll，表示元字符匹配任何字符</li></ul></li></ul><h3 id="3-2-属性">3.2 属性</h3><ul><li><code>global, ignoreCase, unicode, sticky, lastIndex, multiline, dotAll</code>：查找是否有标记</li><li><code>source</code>：字面量字符串</li><li><code>flags</code>：标记字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/\[Dasi\]net\.cn/gi</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pattern.<span class="property">global</span>);    <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pattern.<span class="property">unicode</span>);   <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pattern.<span class="property">source</span>);    <span class="comment">// \[Dasi\]net\.cn</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pattern.<span class="property">flags</span>);     <span class="comment">// gi</span></span><br></pre></td></tr></table></figure><h3 id="3-3-方法">3.3 方法</h3><p><code>exec()</code>：只接受文本串参数，若有匹配项则返回包含第一个匹配信息的数组，否则返回null</p><ul><li>index：起始位置</li><li>input：文本串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pattern = <span class="regexp">/.at/g</span>;</span><br><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;cat, bat, sat&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> result;</span><br><span class="line"><span class="keyword">while</span> ((result = pattern.<span class="title function_">exec</span>(str)) !== <span class="literal">null</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">index</span>); <span class="comment">// 依次输出0,5,10</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result[<span class="number">0</span>]);    <span class="comment">// 依次输出cat,bat,sat</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>test()</code>：只测试模式是否匹配，不考虑匹配的内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pattern = <span class="regexp">/\d&#123;3&#125;-\d&#123;2&#125;-\d&#123;1&#125;/</span>;</span><br><span class="line"><span class="keyword">const</span> str1 = <span class="string">&quot;000-00-0&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> str2 = <span class="string">&quot;00-000-0&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pattern.<span class="title function_">test</span>(str1)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pattern.<span class="title function_">test</span>(str2)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="3-4-构造函数属性">3.4 构造函数属性</h3><p>RegExt的属性</p><ul><li><code>input</code>：最后搜索的字符串</li><li><code>lastMatch</code>：最后匹配的文本</li><li><code>lastParen</code>：最后匹配的捕获组</li><li><code>leftContent</code>：input字符串出现在lastMatch前面的文本</li><li><code>rightContent</code>：input字符串出现在lastMatch后面的文本</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> text = <span class="string">&quot;Hello-i-am-dasi,welcome-to-my-blog&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> pattern = <span class="regexp">/(.)elcome/g</span>;</span><br><span class="line"><span class="keyword">if</span> (pattern.<span class="title function_">test</span>(text)) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">input</span>); <span class="comment">// Hello-i-am-dasi,welcome-to-my-blog</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">leftContext</span>);<span class="comment">// Hello-i-am-dasi,</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">rightContext</span>); <span class="comment">// -to-my-blog</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">lastParen</span>); <span class="comment">// w</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">RegExp</span>.<span class="property">lastMatch</span>); <span class="comment">// welcome</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-原始值包装类型">4. 原始值包装类型</h2><p>特性：在执行方法和属性时将Boolean，Number和String视为对象，它们具有各自原始类型对应的特殊行为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="string">&quot;dasi&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> s2 = s1.<span class="title function_">substring</span>(<span class="number">1</span>); <span class="comment">// asi</span></span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="keyword">let</span> s1 = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;dasi&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> s2 = s1.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line">s1 = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p>注意区分转型函数和构造函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;25&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> num = <span class="title class_">Number</span>(str);</span><br><span class="line"><span class="keyword">let</span> obj = <span class="keyword">new</span> <span class="title class_">Number</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> num); <span class="comment">// number</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> obj); <span class="comment">// object</span></span><br></pre></td></tr></table></figure><p>一般用的比较多的是String，使用方法可以在使用时候参考教程，与C++中有关string函数差不多</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>charAt()</code></td><td>返回指定位置处的字符。</td></tr><tr><td><code>charCodeAt()</code></td><td>返回指定位置处字符编码。</td></tr><tr><td><code>codePointAt()</code></td><td>返回字符串中索引（位置）处的 Unicode 值。</td></tr><tr><td><code>concat()</code></td><td>返回两个或多个连接的字符串。</td></tr><tr><td><code>constructor</code></td><td>返回字符串的构造函数。</td></tr><tr><td><code>endsWith()</code></td><td>返回字符串是否以指定值结尾。</td></tr><tr><td><code>fromCharCode()</code></td><td>将 Unicode 值作为字符返回。</td></tr><tr><td><code>includes()</code></td><td>返回字符串是否包含指定值。</td></tr><tr><td><code>indexOf()</code></td><td>返回值在字符串中第一次出现的位置。</td></tr><tr><td><code>lastIndexOf()</code></td><td>返回值在字符串中最后一次出现的位置。</td></tr><tr><td><code>length</code></td><td>返回字符串中的字符数。</td></tr><tr><td><code>localeCompare()</code></td><td>使用基于本地的顺序来比较字符串。</td></tr><tr><td><code>match()</code></td><td>在字符串中搜索值或正则表达式，并返回匹配项。</td></tr><tr><td><code>prototype</code></td><td>允许您向对象添加属性和方法。</td></tr><tr><td><code>repeat()</code></td><td>返回拥有多个字符串副本的新字符串。</td></tr><tr><td><code>replace()</code></td><td>在字符串中搜索值或正则表达式，并返回替换值的字符串。</td></tr><tr><td><code>search()</code></td><td>检索字符串中与正则表达式匹配的子串。</td></tr><tr><td><code>slice()</code></td><td>提取字符串的一部分并返回新字符串。</td></tr><tr><td><code>split()</code></td><td>将字符串拆分为子字符串数组。</td></tr><tr><td><code>startsWith()</code></td><td>检查字符串是否以指定字符开头。</td></tr><tr><td><code>substr()</code></td><td>从字符串中抽取子串，该方法是 <code>substring()</code> 的变种。</td></tr><tr><td><code>substring()</code></td><td>从字符串中抽取子串。</td></tr><tr><td><code>toLocaleLowerCase()</code></td><td>使用主机的语言环境返回转换为小写字母的字符串。</td></tr><tr><td><code>toLocaleUpperCase()</code></td><td>使用主机的语言环境返回转换为大写字母的字符串。</td></tr><tr><td><code>toLowerCase()</code></td><td>返回转换为小写字母的字符串。</td></tr><tr><td><code>toString()</code></td><td>将字符串或字符串对象作为字符串返回。</td></tr><tr><td><code>toUpperCase()</code></td><td>返回转换为大写字母的字符串。</td></tr><tr><td><code>trim()</code></td><td>返回删除了空格的字符串。</td></tr><tr><td><code>trimEnd()</code></td><td>返回从末尾删除空格的字符串。</td></tr><tr><td><code>trimStart()</code></td><td>返回从开头删除空格的字符串。</td></tr><tr><td><code>valueOf()</code></td><td>返回字符串或字符串对象的原始值。</td></tr></tbody></table><h2 id="5-内置对象">5. 内置对象</h2><h3 id="5-1-Global">5.1 Global</h3><p>事实上，JS中不存在全局变量或全局函数，它们实际上都是<strong>Global的属性和方法</strong></p><ul><li>URL编码：<code>encodeURIComponent()</code>和<code>decodeURIComponent()</code>，用于编码统一资源标识符，以便浏览器可以识别</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="string">&quot;https://达斯Blog.net.cn/&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">encodeURI</span>(url)); <span class="comment">// https://%E8%BE%BE%E6%96%AFBlog.net.cn/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">encodeURIComponent</span>(url)); <span class="comment">// https%3A%2F%2F%E8%BE%BE%E6%96%AFBlog.net.cn%2F</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><ul><li>encodeURI：不会编码URL组件的特殊字符，如冒号、斜杠、问号、井号</li><li>encodeURIComponent：编码一切非标准字符</li></ul></div><ul><li><code>eval()</code>：传递ECMAScript字符串，并执行</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;dasi&quot;</span>));</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;dasi&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>window对象：浏览器将window当做了Global对象的代理，所有全局作用域的变量和函数都是window的属性</li></ul><div class="note warning flat"><p>ECMAScript没有直接访问Global对象的方式！</p></div><h3 id="5-2-Math">5.2 Math</h3><ul><li>属性：一些数学中的特殊值<ul><li><code>Math.E</code>：自然对数</li><li><code>Math.PI</code>：圆周率</li></ul></li><li>方法<ul><li><code>Math.min</code>：求最小值</li><li><code>Math.max()</code>：求最大值</li><li><code>Math.ceil()</code>：向上舍入</li><li><code>Math.floor()</code>：向下舍入</li><li><code>Math.round()</code>：四舍五入</li><li><code>Math.random()</code>：得到一个0-1的随机数</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：变量、作用域和内存</title>
      <link href="/posts/a242eea0/"/>
      <url>/posts/a242eea0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-数据类型">1. 数据类型</h2><p>原始值（primitive）：Undefined、Null、Boolean、Number、String、Symbol</p><ul><li>大小固定，保存在<strong>栈</strong></li><li>复制值的副本</li></ul><p>引用值（reference）：Object</p><ul><li>大小可变，保存在<strong>堆</strong></li><li>复制指针，变量指向同一个对象</li></ul><p>操作符</p><ul><li><code>typeof</code>：确定值的原始数据类型</li><li><code>isinstanceof</code>：确定值是否是引用数据类型</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&quot;dasi&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a); <span class="comment">// string</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b); <span class="comment">// object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a <span class="keyword">instanceof</span> <span class="title class_">Object</span>); <span class="comment">// false </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b <span class="keyword">instanceof</span> <span class="title class_">Object</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="2-执行上下文">2. 执行上下文</h2><p>作用域：是一个变量和函数的可访问区域，分为全局作用域和局部作用域，其中局部作用域包含函数作用域和块级作用域</p><p>作用域链（scope chain）：作用域链的层级是由函数创建的作用域环境形成的，标识符解析是通过沿作用域链逐级搜索标识符名称完成的</p><p>不使用var、let、const定义的变量是全局作用域</p><div class="note success flat"><p>这部分内容学过C的都知道了，本质上就是通过上下文栈的堆叠和转换实现的，不再赘述</p></div><h2 id="3-垃圾回收">3. 垃圾回收</h2><h3 id="3-1-方法">3.1 方法</h3><p>标记清理（Mark-and-Sweep）：标记所有变量，然后将当前处于上下文的变量的标记清除，垃圾回收程序将销毁带标记变量并回收内存</p><ul><li>局限：清理过程消耗资源，导致程序暂停</li></ul><p>引用计数（Reference Counting）：每个对象都维护一个引用计数器，用于记录有多少个引用指向该对象，当对象的引用计数器变为零时，垃圾回收程序将销毁并回收内存</p><ul><li>局限：维护计数器消耗内存，且无法处理循环引用的问题</li></ul><h2 id="4-内存管理">4. 内存管理</h2><p>内存限制：分配给浏览器的内存很少</p><ul><li>原因：出于安全考虑，避免运行大量JS的网页消耗系统内存从而导致操作系统崩溃</li><li>影响：变量分配、调用栈、一个线程中执行的语句数量</li></ul><p>内存泄漏：未能释放不再使用的内存，导致这些内存无法被回收，从而造成程序的内存占用不断增加</p><ul><li>全局变量：不小心将变量声明为全局变量</li><li>闭包：外部函数的变量可能被内部函数保持引用</li><li>定时器和回调：设置的定时器没有被清除，一直被回调</li></ul><p>如何减少垃圾回收的频率</p><ul><li>减少对象创建：避免在高频率操作中频繁创建临时对象，尽量重用对象</li><li>使用适当的数据结构：选择Map和Set，可以提高内存管理效率</li><li>优化DOM操作：尽量合并操作，减少重排和重绘</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：ECMAScript</title>
      <link href="/posts/ac615d30/"/>
      <url>/posts/ac615d30/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-ECMA语法">1. ECMA语法</h2><h3 id="1-1-区分大小写">1.1 区分大小写</h3><p>变量、函数名、运算符以及其他一切东西都是区分大小写</p><div class="note warning flat"><p>test和Test是不同的</p></div><h3 id="1-2-标识符">1.2 标识符</h3><ul><li>第一个字符必须是一个字母、下划线或美元符号，其他字符可以是这些加上数字，如$jason、dasi0227,_github</li><li>使用驼峰命名，如getNumber、dasiNetChina</li><li>关键字，保留字、true、false和null不能作为标识符</li></ul><p>图片</p><h3 id="1-3-注释">1.3 注释</h3><p>与C一样，当行注释用<code>//</code>，多行注释用<code>/**/</code></p><h3 id="1-4-语句">1.4 语句</h3><p>要求每行代码以<code>;</code>结尾</p><p>在控制语句中使用代码块<code>&#123;&#125;</code>，哪怕只有一条语句！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (test) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(test);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-严格模式">1.5 严格模式</h3><p>使用：在全局开头或函数开头加上一行<code>&quot;use strict&quot;</code>，表示开启严格模式</p><p>意义：通过引入更严格的语法规则，可以帮助捕捉潜在的错误并防止一些不良的编程习惯，从而提高代码的安全性和性能</p><h2 id="2-变量">2. 变量</h2><h3 id="2-1-var">2.1 var</h3><p>var的使用规则：</p><ul><li>声明时，无需明确类型，也无需赋初值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> test;</span><br></pre></td></tr></table></figure><ul><li>声明后，可以改变保存的值，也可以改变值的类型</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> test = <span class="string">&quot;dasi&quot;</span>;</span><br><span class="line">test = <span class="string">&quot;jason&quot;</span>;</span><br><span class="line">test = <span class="number">10</span>; <span class="comment">// 合法，但是不推荐这样做</span></span><br></pre></td></tr></table></figure><ul><li>用同一个var语句定义的变量不必具有相同的类型</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> test1 = <span class="string">&quot;dasi&quot;</span>, test2 = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><ul><li>函数作用域：只在声明它的函数内部使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">example1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> x = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// ReferenceError</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">example2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 输出10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>声明提升（hoist）：var变量的声明会自动提升到函数作用域顶部，但不会赋初值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">example</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 声明被提升，但是值是undefined</span></span><br><span class="line">  <span class="keyword">var</span> x = <span class="number">5</span>;      <span class="comment">// 在这里才会被赋初值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 值是5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-let">2.2 let</h3><p>let的使用规则</p><ul><li>块作用域，不允许在一个块内重复声明</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">example</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 输出20</span></span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">30</span>; <span class="comment">// SyntaxError</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// ReferenceError</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>暂时性死区：let不会被提升，在声明之前的区域被称为暂时性死区，引用任何后面才声明的变量都会抛出<code>ReferenceError</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test1) <span class="comment">// undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test2) <span class="comment">// ReferenceError</span></span><br><span class="line"><span class="keyword">var</span> test1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> test2 = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>let和for循环</p><ul><li>仅限于循环块内部</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)&#123;</span><br><span class="line">  <span class="comment">// 循环逻辑</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// 输出5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; ++j)&#123;</span><br><span class="line">  <span class="comment">// 循环逻辑</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(j); <span class="comment">// ReferenceError</span></span><br></pre></td></tr></table></figure><ul><li>迭代变量独立性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// 输出: 3, 3, 3，因 var 的作用域是整个函数，所有回调函数访问的是同一个 i</span></span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(j); <span class="comment">// 输出: 0, 1, 2，因 let 的作用域是每次循环的块级作用域，回调函数访问的是各自的 j</span></span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-const">2.3 const</h3><p>使用规则</p><ul><li>声明变量的同时必须初始化，并且不能修改变量的值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="number">1</span>;</span><br><span class="line">test = <span class="number">2</span>; <span class="comment">// TypeError</span></span><br></pre></td></tr></table></figure><ul><li>不允许重复声明</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> test = <span class="number">2</span>; <span class="comment">// SyntaxError</span></span><br></pre></td></tr></table></figure><ul><li>块作用域</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> test = <span class="number">2</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(test); <span class="comment">// 2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><ul><li>const和对象：修改对象内部的属性不违反const规则</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span></span><br><span class="line">&#125;;</span><br><span class="line">person.<span class="property">age</span> = <span class="number">31</span>; <span class="comment">// 正确</span></span><br><span class="line">person = &#123; <span class="attr">age</span>: <span class="number">25</span> &#125;; <span class="comment">// TypeError</span></span><br></pre></td></tr></table></figure><div class="note success flat"><p>实践过程中，推荐多使用const，然后是let，最后是var：可以使得变量有明确的作用域、声明位置和不变的值</p></div><h2 id="3-数据类型">3. 数据类型</h2><h3 id="3-1-undefined">3.1 undefined</h3><p>情况：使用var或let声明一个变量但没有赋值，则变量的初始值就是undefined</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> message;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message == <span class="literal">undefined</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>不应该显式地给变量赋值为undefined，字面值undefined通常拿来与null作比较</p></div><h3 id="3-2-null">3.2 null</h3><p>情况：表示一个空对象指针，指示该变量尚未被分配实际的对象</p><ul><li>typeof：值是object而不是undefined</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> test); <span class="comment">// object</span></span><br></pre></td></tr></table></figure><ul><li>占位符</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> test = &#123;</span><br><span class="line">  <span class="attr">setting1</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">setting2</span>: <span class="literal">null</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>undefined和null都是一个假值，做条件判断时要明确是要检测字面值，还是检测假值</p></div><h3 id="3-3-boolean">3.3 boolean</h3><p>布尔值：有两个字面值true和false</p><div class="note warning flat"><p>区分大小写：True和False不是布尔值，而是有效的标识符<br>不同于数值：true不是1，false不是0</p></div><p><code>Boolean()</code>转型函数：控制语句中会执行自动转换，将其他值转换为布尔值进行判断</p><table><thead><tr><th>数据类型</th><th>转换为true</th><th>转换为false</th></tr></thead><tbody><tr><td>String</td><td>非空字符串</td><td>空字符串&quot;&quot;</td></tr><tr><td>Number</td><td>非零数值（包括无穷值）</td><td>0和NaN</td></tr><tr><td>Object</td><td>任意对象</td><td>null</td></tr><tr><td>Undefined</td><td>不存在</td><td>undefined</td></tr></tbody></table><h3 id="3-4-number">3.4 number</h3><h4 id="3-4-1-数值类型">3.4.1 数值类型</h4><p>表示形式</p><ul><li>十进制：直接写出来即可</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> intNum = <span class="number">55</span>;</span><br></pre></td></tr></table></figure><ul><li>八进制：第一个数字必须是0，然后接着是0-7</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> octalNum1 = <span class="number">070</span>; <span class="comment">// 表示十进制数56</span></span><br><span class="line"><span class="keyword">let</span> octalNum2 = <span class="number">079</span>; <span class="comment">// 不是八进制，而是被当做十进制79</span></span><br></pre></td></tr></table></figure><ul><li>十六进制：前缀必须是0x，然后是0-9以及a-f（大小写均可）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> hexNum1 = <span class="number">0xA</span>;  <span class="comment">// 表示十进制的10</span></span><br><span class="line"><span class="keyword">let</span> hexNum2 = <span class="number">0x1f</span>; <span class="comment">// 表示十进制的31</span></span><br></pre></td></tr></table></figure><ul><li>浮点值：小数点后必须有一个数字</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> floatNum1 = <span class="number">1.1</span>;</span><br><span class="line"><span class="keyword">let</span> floatNum2 = <span class="number">0.1</span>;</span><br><span class="line"><span class="keyword">let</span> floatNum3 = <span class="number">.1</span>;  <span class="comment">// 合法但不规范</span></span><br><span class="line"><span class="keyword">let</span> floatNum4 = <span class="number">1.0</span>; <span class="comment">// 被当成1处理 </span></span><br></pre></td></tr></table></figure><ul><li>科学计数法：一个数值后跟字母e，再加上一个10的幂</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> floatNum = <span class="number">3.125e7</span>;  <span class="comment">// 相当于31250000</span></span><br><span class="line"><span class="keyword">let</span> floatNum = <span class="number">1e2</span>;      <span class="comment">// 相当于100</span></span><br></pre></td></tr></table></figure><div class="note danger flat"><p>严格模式下，八进制的前缀0会判错，应该使用<code>0o</code><br>永远不要测试某个特定的浮点值，这是计算机基于二进制计算产生的舍入误差导致的天生缺陷！</p></div><p>无穷值</p><ul><li>最值：被保存在<code>Number.MIN_VALUE</code>和<code>Number.MAX_VALUE</code></li><li>无穷值：如果某个计算的数值超过了最值，会被自动转换为正无穷值<code>Infinity</code>或负无穷值<code>-Infinity</code></li><li><code>isFinite()</code>：用于判断一个值是否有限大</li></ul><div class="note info flat"><p>使用<code>Number.NEGATIVE_INFINITY</code>和<code>Number.POSITIVE_INFINITY</code>可以获得正负无穷值</p></div><p>NaN：不是数值（Not a Number），可以使用<code>isNaN()</code>判断参数是否不是数值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0</span>/<span class="number">0</span>);   <span class="comment">// NaN</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0</span>/<span class="number">1</span>);   <span class="comment">// Infinity</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">NaN</span>+<span class="number">1</span>); <span class="comment">// NaN</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="string">&quot;string&quot;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><div class="note info flat"><p>在JavaScript中，出现错误计算不会中断代码执行，而是返回NaN值</p></div><h4 id="3-4-2-数值转换">3.4.2 数值转换</h4><ul><li><code>Number()</code><ul><li>true：1</li><li>false：0</li><li>null：0</li><li>undefined：NaN</li><li>字符串：如下</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num0 = <span class="title class_">Number</span>(<span class="string">&quot;JS&quot;</span>);  <span class="comment">// NaN</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="title class_">Number</span>(<span class="string">&quot;&quot;</span>);    <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="title class_">Number</span>(<span class="string">&quot;01&quot;</span>);  <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="title class_">Number</span>(<span class="string">&quot;12&quot;</span>);  <span class="comment">// 12</span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="title class_">Number</span>(<span class="string">&quot;1.1&quot;</span>); <span class="comment">// 1.1</span></span><br><span class="line"><span class="keyword">let</span> num5 = <span class="title class_">Number</span>(<span class="string">&quot;0xf&quot;</span>); <span class="comment">// 16 </span></span><br></pre></td></tr></table></figure><ul><li><code>parseInt()</code>：依次检测每个字符，直到字符串末尾，或碰到非数值字符</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="built_in">parseInt</span>(<span class="string">&quot;123abc&quot;</span>); <span class="comment">// 123</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="built_in">parseInt</span>(<span class="string">&quot;&quot;</span>);       <span class="comment">// NaN</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="built_in">parseInt</span>(<span class="string">&quot;0xA&quot;</span>);    <span class="comment">// 10</span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="built_in">parseInt</span>(<span class="string">&quot;22.5&quot;</span>);   <span class="comment">// 22</span></span><br></pre></td></tr></table></figure><ul><li><code>parseFloat()</code>：第一次出现小数点是有效的</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="built_in">parseFloat</span>(<span class="string">&quot;123abc&quot;</span>); <span class="comment">// 123</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="built_in">parseFloat</span>(<span class="string">&quot;0xA&quot;</span>);    <span class="comment">// 0，只能解析十进制</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="built_in">parseFloat</span>(<span class="string">&quot;1.2.3&quot;</span>);  <span class="comment">// 1.2</span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="built_in">parseFloat</span>(<span class="string">&quot;22.5&quot;</span>);   <span class="comment">// 22.5</span></span><br><span class="line"><span class="keyword">let</span> num5 = <span class="built_in">parseFloat</span>(<span class="string">&quot;1.2e3&quot;</span>);  <span class="comment">// 1200</span></span><br></pre></td></tr></table></figure><h3 id="3-5-String">3.5 String</h3><h4 id="3-5-1-字符串">3.5.1 字符串</h4><p>格式：使用双引号、单引号和反引号框起来的16位Unicode字符序列</p><div class="note info flat"><p>如果要在字符串中使用特殊字符，如换行符、制表符、反斜杠、双引号等，需要在前面加上反斜杠符<code>\</code></p></div><p>特点</p><ul><li>不可变的（immutable）：要修改字符串变量的值，必须销毁原始字符串，然后将包含新值的另一个字符串保存到变量</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;JAVA&quot;</span>;</span><br><span class="line">str = str + <span class="string">&quot;Script&quot;</span>; <span class="comment">// 销毁和重新赋值都是自动发生在后台</span></span><br></pre></td></tr></table></figure><ul><li><code>length</code>属性：返回字符串中16位字符的个数</li></ul><div class="note warning flat"><p>如果字符是双字节字符，则length返回的不是准确的字符数</p></div><ul><li><code>toString()</code>和<code>String()</code>函数：将一个值转换为字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> str1 = num.<span class="title function_">toString</span>(); <span class="comment">// &quot;1&quot;</span></span><br><span class="line"><span class="keyword">let</span> bool = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = bool.<span class="title function_">toString</span>(); <span class="comment">// &quot;true&quot;</span></span><br><span class="line"><span class="keyword">let</span> value1 = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> value2;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>(value1)); <span class="comment">// &quot;null&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>(value2)); <span class="comment">// &quot;undefined&quot;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>不能对null和undefined使用toString()，但是可以使用String()</p></div><h4 id="3-5-2-模版字面量">3.5.2 模版字面量</h4><p>模版：必须使用反引号```，保留换行字符，可以跨行定义字符串，适用于编写HTML模版</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pageHTML = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">  &lt;a href=&#x27;#&#x27;&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;JavaScript&lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>模版字面量会保存反引号内的一切字符，因此使用缩进和空格是不一样的，要格外注意格式！</p></div><p>原始：可以使用<code>String.raw</code>函数，获取模版字面量的原始内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`\n`</span>);            <span class="comment">// 换行</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>.<span class="property">raw</span><span class="string">`\n`</span>);  <span class="comment">// \n</span></span><br></pre></td></tr></table></figure><h4 id="3-5-3-字符串插值">3.5.3 字符串插值</h4><p>方法：在模版字面量中可以使用<code>$&#123;&#125;</code>插值，所有值会自动使用<code>toString()</code>转换为字符串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> value1 = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">let</span> value2 = <span class="string">&#x27;second&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">`<span class="subst">$&#123;value&#125;</span> to the <span class="subst">$&#123;value2&#125;</span> = <span class="subst">$&#123;value1*value1&#125;</span>`</span> <span class="comment">// 5 to the second = 25 </span></span><br></pre></td></tr></table></figure><h4 id="3-5-4-标签函数">3.5.4 标签函数</h4><p>tag function：自动将模版字面量拆分为模版数组和字符串数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">simpleTag</span>(<span class="params">strings,...expressions</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(strings);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(expressions);</span><br><span class="line">  <span class="keyword">let</span> result = strings[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; expressions.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    result += expressions[i];</span><br><span class="line">    result += strings[i+<span class="number">1</span>]; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> result = simpleTag<span class="string">`<span class="subst">$&#123;a&#125;</span>+<span class="subst">$&#123;b&#125;</span>=<span class="subst">$&#123;a+b&#125;</span>`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">[ &#x27;&#x27;, &#x27;+&#x27;, &#x27;=&#x27;, &#x27;&#x27; ]</span></span><br><span class="line"><span class="comment">[ 1, 2, 3 ]</span></span><br><span class="line"><span class="comment">1+2=3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><ol><li>注意参数前要加三个<code>.</code></li><li>对于n个插值的模版字面量，传给标签函数的参数个数始终是n，字符串个数始终是n+1</li><li>如果模板字面量的开头或结尾是模板，那么strings数组的开头或结尾会是空字符串</li></ol></div><h3 id="3-6-Symbol">3.6 Symbol</h3><h4 id="3-6-1-基本用法">3.6.1 基本用法</h4><p>Symbol：用于创建唯一的标识符，且每个符号实例都是不可变的，传递字符串参数作为符号描述</p><div class="note info flat"><p>Symbol数据类型提供了一种创建唯一标识符的机制，非常适合用于避免属性名冲突和定义对象的特殊行为</p></div><p><code>Symbol()</code>：创建符号</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sym0 = <span class="title class_">Symbol</span>();</span><br><span class="line"><span class="keyword">let</span> sym1 = <span class="title class_">Symbol</span>(<span class="string">&quot;description&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> sym2 = <span class="title class_">Symbol</span>(<span class="string">&quot;description&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sym0);          <span class="comment">// Symbol()</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sym1);          <span class="comment">// Symbol(description)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sym1 == sym2);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p><code>Symbol.for()</code>：创建全局符号注册表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> globalSymbol1 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;globalKey&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> globalSymbol2 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;globalKey&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalSymbol1 === globalSymbol2); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p><code>Symbol.keyFor()</code>：查询全局注册表</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sym1 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&quot;global&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> sym2 = <span class="title class_">Symbol</span>(<span class="string">&quot;not global&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Symbol</span>.<span class="title function_">keyFor</span>(sym1)); <span class="comment">// global</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Symbol</span>.<span class="title function_">keyFor</span>(sym2)); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h4 id="3-6-2-内置符号">3.6.2 内置符号</h4><p>用于暴露语言内部行为，开发者可以<strong>访问、模拟或重写</strong>这些行为</p><ul><li><code>Symbol.iterator</code>：定义对象默认迭代器，使对象可以使用<code>for...of</code>循环</li><li><code>Symbol.aysnIterator</code>：定义对象异步迭代器，使对象可以使用异步<code>for-await-of</code>循环</li><li><code>Symbol.hasInstance</code>：定义操作符<code>instanceof</code>，确定一个对象实例是否有原型</li><li><code>Symbol.match</code>：定义<code>String.prototype.match()</code>的行为，允许对象定义自己的匹配逻辑</li><li><code>Symbol.search</code>：定义<code>String.prototype.search()</code>的行为，允许对象定义如何搜索字符串</li><li><code>Symbol.split</code>：定义<code>String.prototype.split()</code>的行为，允许对象定义如何分割字符串</li><li><code>Symbol.replace</code>：定义<code>String.prototype.replace()</code>的行为，允许对象定义如何替换字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 以Symbol.match为例子 */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">myMatch</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">pattern</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pattern</span> = pattern;</span><br><span class="line">  &#125;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">match</span>]() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 默认</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;JavaScript&#x27;</span>.<span class="title function_">match</span>(<span class="string">&#x27;dasi&#x27;</span>));  <span class="comment">// null</span></span><br><span class="line"><span class="comment">// 自定义</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;JavaScript&#x27;</span>.<span class="title function_">match</span>(<span class="keyword">new</span> <span class="title function_">myMatch</span>(<span class="string">&#x27;dasi&#x27;</span>))); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="3-7-Object">3.7 Object</h3><p>对象：存储一组键值对，包含属性和方法，通过new操作符后跟对象类型的名称来创建，可以在创建后随时添加、修改或删除属性和方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象字面量</span></span><br><span class="line"><span class="keyword">const</span> person1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;dasi&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 利用new Object()</span></span><br><span class="line"><span class="keyword">const</span> person2 = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">person2.<span class="property">name</span> = <span class="string">&#x27;dasi&#x27;</span>;</span><br><span class="line">person2.<span class="property">age</span> = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>属性</p><ul><li><code>constructor</code>：指向对象的构造函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> john = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;John&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(john.<span class="property">constructor</span>); <span class="comment">// [Function: Person]</span></span><br></pre></td></tr></table></figure><ul><li><code>Prototype</code>：用于定义所有由该构造函数创建的对象共享的属性和方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHello</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`Hello, <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>!`</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> jason = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;jason&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> dasi = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;dasi&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jason.<span class="title function_">sayHello</span>()); <span class="comment">// Hello, jason!</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dasi.<span class="title function_">sayHello</span>()); <span class="comment">// Hello, dasi!</span></span><br></pre></td></tr></table></figure><p>方法</p><ul><li><code>hasOwnProperty(property)</code>：检查对象是否具有指定的自有属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;b&#x27;</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li><code>isPropertyOf(object)</code>：检查当前对象是否在指定对象的原型链上</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> john = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;John&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> dasi = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">isPrototypeOf</span>(john)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">isPrototypeOf</span>(dasi)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li><code>PropertyIsEnumerable(property)</code>：检查对象的指定属性是否可枚举</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="title function_">propertyIsEnumerable</span>(<span class="string">&#x27;a&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj, <span class="string">&#x27;b&#x27;</span>, &#123; <span class="attr">value</span>: <span class="number">2</span>, <span class="attr">enumerable</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="title function_">propertyIsEnumerable</span>(<span class="string">&#x27;b&#x27;</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li><code>toString()</code>：返回对象的字符串表示形式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="title function_">toString</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`Name: <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>; <span class="comment">// 重写</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> obj2 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;dasi&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1.<span class="title function_">toString</span>()); <span class="comment">// Name: John</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2.<span class="title function_">toString</span>()); <span class="comment">// [object Object]</span></span><br></pre></td></tr></table></figure><ul><li><code>valueOf()</code>：返回对象的原始值</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;dasi&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="title function_">valueOf</span>()); <span class="comment">// &#123; name: &#x27;dasi&#x27;, age: 18 &#125;</span></span><br></pre></td></tr></table></figure><h2 id="4-操作符">4. 操作符</h2><div class="note success flat"><p>与其他语言相似，不做过多解释和例子</p></div><h3 id="4-1-一元操作符">4.1 一元操作符</h3><ul><li>递增<code>++</code>和递减<code>--</code>：分为前缀和后缀</li><li>一元加<code>+</code>和一元减<code>-</code>：表示数值的符号</li></ul><h3 id="4-2-位操作符">4.2 位操作符</h3><ul><li>按位非<code>~</code>（实际上是对数值取反并减1）</li><li>按位与<code>&amp;</code></li><li>按位或<code>|</code></li><li>按位异或<code>^</code></li><li>左移<code>&lt;&lt;</code>：按位补0，保留符号位</li><li>有符号右移<code>&gt;&gt;</code></li><li>无符号右移<code>&gt;&gt;&gt;</code></li></ul><h3 id="4-3-布尔操作符">4.3 布尔操作符</h3><ul><li>逻辑非<code>!</code></li><li>逻辑与<code>&amp;&amp;</code></li><li>逻辑或<code>||</code></li></ul><h3 id="4-4-乘性操作符">4.4 乘性操作符</h3><ul><li>乘法<code>*</code></li><li>除法<code>/</code></li><li>取模<code>%</code></li><li>指数<code>**</code></li></ul><div class="note warning flat"><p>注意Infinity和NaN的情况，但一般情况下用不到，不做过多解释</p></div><h3 id="4-5-加性操作符">4.5 加性操作符</h3><ul><li>加法<code>+</code></li><li>减法<code>-</code></li></ul><h3 id="4-6-关系操作符">4.6 关系操作符</h3><ul><li>小于<code>&lt;</code></li><li>大于<code>&gt;</code></li><li>小于等于<code>&lt;=</code></li><li>大于等于<code>&gt;=</code></li></ul><h3 id="4-7-相等操作符">4.7 相等操作符</h3><ul><li>等于<code>==</code>和不等于<code>!=</code>：自动转换操作数</li><li>全等<code>===</code>和不全等<code>!==</code>：不转换操作数</li></ul><p>图片</p><h3 id="4-8-条件操作符">4.8 条件操作符</h3><ul><li><code>?:</code>：如果…就…否则…</li></ul><h3 id="4-9-赋值操作符">4.9 赋值操作符</h3><ul><li>普通赋值<code>=</code></li><li>复合赋值<code>*=</code>,<code>+=</code>,<code>-=</code>,<code>/=</code>,<code>&lt;&lt;=</code>,<code>&gt;&gt;=</code></li></ul><h3 id="4-10-逗号操作符">4.10 逗号操作符</h3><ul><li>在一条语句中执行多个操作：<code>let num1 = 1, num2 = 2;</code></li><li>返回表达式最后一个值：<code>let num = (1,2,3,4,5)</code></li></ul><h2 id="5-语句">5. 语句</h2><h3 id="5-1-简单语句">5.1 简单语句</h3><div class="note success flat"><p>这些语句是其他语言中都有的，简单描述</p></div><ul><li><code>if (condition) &#123;statement1&#125; else &#123;statement2&#125;</code>：如果就，否则就</li><li><code>do &#123;statement&#125; while (expression)</code>：先执行一次，再测试循环条件</li><li><code>while(expression) &#123;statement&#125;</code>：先测试循环条件，再执行</li><li><code>for (initialization; expression; post-loop-expression) &#123;statement&#125;</code>：先初始化，然后检测循环条件，以及循环一次要执行的操作</li></ul><h3 id="5-2-for的拓展">5.2 for的拓展</h3><ul><li><code>for (property in expression) &#123;statement&#125;</code>：用于遍历对象的可枚举属性</li><li><code>for (preperty of expression) &#123;statement&#125;</code>：用于遍历可迭代对象的元素（如数组、字符串、集合、映射等）</li></ul><h3 id="5-3-循环语句">5.3 循环语句</h3><ul><li><code>break</code>：立即退出循环</li><li><code>continue</code>：立即回到循环顶部执行</li><li><code>label: &#123;statement&#125;</code>：标签语句，通过在break和continue后面引用，使得嵌套循环更加清晰</li></ul><h3 id="5-4-with">5.4 with</h3><p><code>with (expression) &#123;statement&#125;</code>：将代码的作用域设置为特定的对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = object.<span class="property">name</span>;</span><br><span class="line"><span class="keyword">let</span> num2 = object.<span class="property">age</span>;</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="title function_">with</span> (object) &#123;</span><br><span class="line">  <span class="keyword">let</span> num1 = name;</span><br><span class="line">  <span class="keyword">let</span> num2 = age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>with语句影响性能且难于调试，不建议使用</p></div><h3 id="5-5-switch">5.5 switch</h3><p>每个case相当于如果<code>expression === value</code>，则会执行后面的语句，否则执行默认语句</p><div class="note warning flat"><p>注意，是全等，不执行自动类型转换</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (expression) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="attr">value1</span>: &#123;</span><br><span class="line">    statement</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> <span class="attr">value2</span>: &#123;</span><br><span class="line">    statement</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attr">default</span>: &#123;</span><br><span class="line">    statement</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-函数">6. 函数</h2><p><code>function Name(arg0, arg1) &#123;statement&#125;</code>：JS的函数不需要指定返回值</p><div class="note info flat"><p>函数相关将在后面讨论</p></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：简介</title>
      <link href="/posts/627fa4e0/"/>
      <url>/posts/627fa4e0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-什么是JavaScript">1. 什么是JavaScript</h2><p>JavaScript：是一门用来与网页交互的脚本语言，简称JS</p><p>组成</p><ul><li>ECMAScript：定义了JavaScript的语言规范和核心功能</li><li>DOM：文档对象模型（Document Object Model），提供与网页内容交互的方法和接口，用于在HTML中使用扩展的XML<ul><li>修改网页内容</li><li>修改网页结构</li><li>创建和添加新元素</li></ul></li><li>BOM：浏览器对象模型（Browser Object Model），提供与浏览器交互的方法和接口，用于支持访问和操作浏览器的窗口<ul><li>显示浏览器警告框</li><li>打开新窗口</li><li>提供关于浏览器的详尽信息</li></ul></li></ul><div class="note info flat"><p>知名的Web浏览器：IE、FireFox、Chrome、Safari、Opera、Edge</p></div><h2 id="2-如何使用JavaScript">2. 如何使用JavaScript</h2><p>实现：通过<code>&lt;script&gt;</code>元素，将JavaScript的代码嵌入到HTML页面中，或者通过src属性引入保存在外部文件中的JavaScript文件</p><p><code>&lt;script&gt;</code>的属性</p><ul><li>src：指定外部脚本文件的URL</li><li>charset：指定脚本文件的字符编码</li><li>type：指定脚本的MIME类型，通常设置为<code>&quot;text/javascript&quot;</code></li><li>async：指定外部脚本是否异步加载</li><li>defer：指定脚本是否延迟执行</li></ul><p>标签位置</p><ul><li>放在head：脚本最先执行，页面渲染会被阻塞，直到脚本加载和执行完成</li><li>放在body：脚本执行时间取决于其位置</li><li>放在bottom：脚本会在页面的所有内容都加载完毕后执行，提高页面加载速度</li></ul><div class="note success flat"><p>推荐放在bottom，会加速用户视角下的页面加载</p></div><p>加载顺序</p><ul><li>默认：浏览器会按照标签在页面出现的顺序依次解释</li><li>推迟：使用defer属性，脚本会被延迟到整个页面都解析完毕后再运行</li><li>异步：使用async属性，脚本会在后台并行加载，同时不会阻塞页面的渲染</li></ul><div class="note warning flat"><p>推迟和异步都只适用于外部JS</p></div><p>外部文件的好处</p><ul><li>可维护性：用一个目录存储所有要用到的JS文件，更容易统一管理和维护</li><li>灵活度高：不需要在对应页面的html文件中修改js代码，只需要找到js文件修改即可</li><li>缓存：如果多个页面使用相同的JS文件，浏览器会缓存第一次使用过的JS文件，之后只用从缓存中加载，而无需重新下载</li></ul><div class="note danger flat"><p>外部JS文件最好是下载到本地之后使用相对地址引用，而不是直接使用网页链接，这样可以避免由于外部服务器发生故障或链接失效而导致的脚本加载问题，以及不法人员对JS文件的恶意攻击</p></div><h2 id="3-参考教程">3. 参考教程</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://www.w3school.com.cn/js/pro_js_implement.asp">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">JavaScript实现</div>          <div class="tag-link-sitename">w3school</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：右键菜单</title>
      <link href="/posts/1e3bf641/"/>
      <url>/posts/1e3bf641/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p>在本页面点击右键即可</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409042135193.png" alt=""></p><h2 id="2-教程">2. 教程</h2><p>第一步：在路径<code>BlogRoot\themes\butterfly\layout\includes</code>下新建一个<code>rightmenu.pug</code>文件，填入以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#rightMenu</span><br><span class="line">  .rightMenu-group.rightMenu-small</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:window.history.back();&quot;)</span><br><span class="line">      i.fa-solid.fa-arrow-left</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:window.location.reload();&quot;)</span><br><span class="line">      i.fa-solid.fa-arrow-rotate-right</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:window.history.forward();&quot;)</span><br><span class="line">      i.fa-solid.fa-arrow-right</span><br><span class="line">    a.rightMenu-item#menu-radompage(href=&quot;javascript:window.location.href = window.location.origin;&quot;)</span><br><span class="line">      i.fa-solid.fa-house</span><br><span class="line">  .rightMenu-group.rightMenu-line.hide#menu-text</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:rmf.copySelect();&quot;)</span><br><span class="line">      i.fa-solid.fa-copy</span><br><span class="line">      span=&#x27;复制&#x27;</span><br><span class="line">  .rightMenu-group.rightMenu-line</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:rmf.switchDarkMode();&quot;)</span><br><span class="line">      i.fa-solid.fa-circle-half-stroke</span><br><span class="line">      span=&#x27;昼夜切换&#x27;</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:rmf.switchReadMode();&quot;)</span><br><span class="line">      i.fa-solid.fa-book</span><br><span class="line">      span=&#x27;阅读模式&#x27;</span><br><span class="line">  .rightMenu-group.rightMenu-line</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:rmf.scrollToTop();&quot;)</span><br><span class="line">      i.fa-solid.fa-arrow-up</span><br><span class="line">      span=&#x27;置顶&#x27;</span><br><span class="line">    a.rightMenu-item(href=&quot;javascript:rmf.copyPageUrl();&quot;)</span><br><span class="line">      i.fa-solid.fa-link</span><br><span class="line">      span=&#x27;复制链接&#x27;</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>pug文件对缩进非常敏感，所有子元素必须与父元素的缩进保持一致，用tab和用空格是不一样的！</p></div><p>第二步：在路径<code>BlogRoot\themes\butterfly\layout\includes</code>下的<code>layout.pug</code>文件，在最下方的位置添加一行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">include ./rightside.pug</span><br><span class="line">!=partial(&#x27;includes/third-party/search/index&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">!=partial(&#x27;includes/rightmenu&#x27;, &#123;&#125;, &#123;cache: true&#125;) // 这行是新增的</span><br><span class="line">include ./additional-js.pug</span><br></pre></td></tr></table></figure><p>第三步：在路径<code>BlogRoot\source\css</code>下新建<code>rightmenu.css</code>文件，填入以下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* rightMenu 右键菜单 */</span></span><br><span class="line"><span class="selector-id">#rightMenu</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line"><span class="attribute">position</span>: fixed;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">160px</span>;</span><br><span class="line"><span class="attribute">height</span>: fit-content;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">10%</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">10%</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="built_in">var</span>(--card-bg);</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--font-color);</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line"><span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span>&#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">7px</span> <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:nth-last-child</span>(<span class="number">1</span>))&#123;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#4259ef23</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span><span class="selector-class">.rightMenu-small</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span> <span class="selector-class">.rightMenu-item</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line"><span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="built_in">var</span>(--font-color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span><span class="selector-class">.rightMenu-line</span> <span class="selector-class">.rightMenu-item</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span> <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span> <span class="selector-class">.rightMenu-item</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="built_in">var</span>(--text-bg-hover);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span> <span class="selector-class">.rightMenu-item</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span> <span class="selector-class">.rightMenu-item</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#rightMenu</span> <span class="selector-class">.rightMenu-group</span><span class="selector-class">.rightMenu-line</span> <span class="selector-class">.rightMenu-item</span> *&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.rightMenu-group</span><span class="selector-class">.hide</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四步：在路径<code>BlogRoot\source\js</code>下新建<code>rightmenu.js</code>文件，填入以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// RightMenu 鼠标右键菜单</span></span><br><span class="line"><span class="keyword">let</span> rmf = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示右键菜单</span></span><br><span class="line">rmf.<span class="property">showRightMenu</span> = <span class="keyword">function</span>(<span class="params">isTrue, x=<span class="number">0</span>, y=<span class="number">0</span></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> $rightMenu = $(<span class="string">&#x27;#rightMenu&#x27;</span>);</span><br><span class="line">    $rightMenu.<span class="title function_">css</span>(<span class="string">&#x27;top&#x27;</span>,x+<span class="string">&#x27;px&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;left&#x27;</span>,y+<span class="string">&#x27;px&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(isTrue)&#123;</span><br><span class="line">        $rightMenu.<span class="title function_">show</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $rightMenu.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 昼夜切换</span></span><br><span class="line">rmf.<span class="property">switchDarkMode</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> nowMode = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-theme&#x27;</span>) === <span class="string">&#x27;dark&#x27;</span> ? <span class="string">&#x27;dark&#x27;</span> : <span class="string">&#x27;light&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (nowMode === <span class="string">&#x27;light&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_">activateDarkMode</span>()</span><br><span class="line">        saveToLocal.<span class="title function_">set</span>(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;dark&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">        <span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span> !== <span class="literal">undefined</span> &amp;&amp; btf.<span class="title function_">snackbarShow</span>(<span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span>.<span class="property">day_to_night</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">activateLightMode</span>()</span><br><span class="line">        saveToLocal.<span class="title function_">set</span>(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;light&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">        <span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span> !== <span class="literal">undefined</span> &amp;&amp; btf.<span class="title function_">snackbarShow</span>(<span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span>.<span class="property">night_to_day</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// handle some cases</span></span><br><span class="line">    <span class="keyword">typeof</span> utterancesTheme === <span class="string">&#x27;function&#x27;</span> &amp;&amp; <span class="title function_">utterancesTheme</span>()</span><br><span class="line">    <span class="keyword">typeof</span> <span class="variable constant_">FB</span> === <span class="string">&#x27;object&#x27;</span> &amp;&amp; <span class="variable language_">window</span>.<span class="title function_">loadFBComment</span>()</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">DISQUS</span> &amp;&amp; <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;disqus_thread&#x27;</span>).<span class="property">children</span>.<span class="property">length</span> &amp;&amp; <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">disqusReset</span>(), <span class="number">200</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 阅读模式</span></span><br><span class="line">rmf.<span class="property">switchReadMode</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> $body = <span class="variable language_">document</span>.<span class="property">body</span></span><br><span class="line">    $body.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;read-mode&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> newEle = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">    newEle.<span class="property">type</span> = <span class="string">&#x27;button&#x27;</span></span><br><span class="line">    newEle.<span class="property">className</span> = <span class="string">&#x27;fas fa-sign-out-alt exit-readmode&#x27;</span></span><br><span class="line">    $body.<span class="title function_">appendChild</span>(newEle)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">clickFn</span> (<span class="params"></span>) &#123;</span><br><span class="line">        $body.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;read-mode&#x27;</span>)</span><br><span class="line">        newEle.<span class="title function_">remove</span>()</span><br><span class="line">        newEle.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;click&#x27;</span>, clickFn)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    newEle.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, clickFn)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复制文本</span></span><br><span class="line">rmf.<span class="property">copySelect</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> selection = <span class="variable language_">window</span>.<span class="title function_">getSelection</span>();</span><br><span class="line">  <span class="keyword">const</span> selectedText = selection.<span class="title function_">toString</span>();</span><br><span class="line">  <span class="keyword">if</span> (selectedText) &#123;</span><br><span class="line">      navigator.<span class="property">clipboard</span>.<span class="title function_">writeText</span>(selectedText).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;文本已复制到剪贴板&#x27;</span>);</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;复制失败:&#x27;</span>, err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没有选中的文本&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回到顶部</span></span><br><span class="line">rmf.<span class="property">scrollToTop</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    btf.<span class="title function_">scrollToDest</span>(<span class="number">0</span>, <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//复制url</span></span><br><span class="line">rmf.<span class="property">copyPageUrl</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>;</span><br><span class="line">  navigator.<span class="property">clipboard</span>.<span class="title function_">writeText</span>(url).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;页面链接已复制到剪贴板&#x27;</span>);</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;复制失败:&#x27;</span>, err);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 右键菜单事件</span></span><br><span class="line"><span class="keyword">if</span>(! (navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i</span>)))&#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">oncontextmenu</span> = <span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">        $(<span class="string">&#x27;.rightMenu-group.hide&#x27;</span>).<span class="title function_">hide</span>();</span><br><span class="line">        <span class="comment">//如果有文字选中，则显示 文字选中相关的菜单项</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getSelection</span>().<span class="title function_">toString</span>())&#123;</span><br><span class="line">            $(<span class="string">&#x27;#menu-text&#x27;</span>).<span class="title function_">show</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// console.log(event.target);</span></span><br><span class="line">        <span class="keyword">let</span> pageX = event.<span class="property">clientX</span> + <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">let</span> pageY = event.<span class="property">clientY</span>;</span><br><span class="line">        <span class="keyword">let</span> rmWidth = $(<span class="string">&#x27;#rightMenu&#x27;</span>).<span class="title function_">width</span>();</span><br><span class="line">        <span class="keyword">let</span> rmHeight = $(<span class="string">&#x27;#rightMenu&#x27;</span>).<span class="title function_">height</span>();</span><br><span class="line">        <span class="keyword">if</span>(pageX + rmWidth &gt; <span class="variable language_">window</span>.<span class="property">innerWidth</span>)&#123;</span><br><span class="line">            pageX -= rmWidth+<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(pageY + rmHeight &gt; <span class="variable language_">window</span>.<span class="property">innerHeight</span>)&#123;</span><br><span class="line">            pageY -= pageY + rmHeight - <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        rmf.<span class="title function_">showRightMenu</span>(<span class="literal">true</span>, pageY, pageX);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;rmf.<span class="title function_">showRightMenu</span>(<span class="literal">false</span>);&#125;);</span><br><span class="line">    <span class="comment">// window.addEventListener(&#x27;load&#x27;,function()&#123;rmf.switchTheme(true);&#125;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.meta-code.top/2022/06/12/2022-68/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">【Hexo博客】魔改美化 Butterfly 主题右键菜单</div>          <div class="tag-link-sitename">百里飞洋</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode：一键添加标签</title>
      <link href="/posts/cbb2ed1a/"/>
      <url>/posts/cbb2ed1a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-缘由">1. 缘由</h2><p>在用markdown写文章时，如果需要添加html/css标签，或者使用标签外挂的时候，需要多敲很多东西，这很不程序员（<s>不是因为我懒</s>），因此利用VSCode编辑器的自定义快捷键就可以实现一键添加标签</p><h2 id="2-教程">2. 教程</h2><ol><li>根据图片提示，或者按下<code>ctrl k + ctrl s</code>，或者直接搜索文件<code>keybindings.json</code></li></ol><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409042141449.png" alt=""></p><ol start="2"><li>添加以下内容</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将键绑定放在此文件中以覆盖默认值auto[]</span></span><br><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+n&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-workbench.action.files.newUntitledFile&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;f9 f9&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;python.execInTerminal-icon&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;editor.action.insertSnippet&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;when&quot;</span><span class="punctuation">:</span> <span class="string">&quot;editorTextFocus&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;snippet&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;% note  flat %&#125;$TM_SELECTED_TEXT&#123;% endnote %&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;editor.action.insertSnippet&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;when&quot;</span><span class="punctuation">:</span> <span class="string">&quot;editorTextFocus&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;snippet&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;% link ,,$TM_SELECTED_TEXT %&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><ol start="3"><li>自定义配置参数</li></ol><ul><li>key：快捷键组合，可以自己选择</li><li>command：<code>editor.action.insertSnippet</code>，用于插入代码片段</li><li>when: <code>editorTextFocus</code>，编辑器文本框有焦点时快捷键才生效</li><li>args：包含命令参数的对象，这里用来传递要插入<code>snippet</code>（一小段预定义的代码或文本）</li><li><code>$TM_SELECTED_TEXT</code>，是一个占位符，会被当前选中的文本替换`</li></ul><div class="note warning flat"><p>注意每一项之间有个英文逗号</p></div><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://cloud.tencent.com/developer/article/1580595">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">在 Visual Studio Code 中为代码片段（Code Snippets）添加快捷键</div>          <div class="tag-link-sitename">吕毅的博客</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：首页近期文章美化（动态缩放）</title>
      <link href="/posts/290c75b9/"/>
      <url>/posts/290c75b9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p>进入首页查看即可：<a href="https://dasi.net.cn/">https://dasi.net.cn/</a></p><h2 id="2-教程">2. 教程</h2><div class="note info flat"><p><a href="https://dasi.net.cn/posts/ecc80865/">自定义CSS教程</a></p></div><p>在路径<code>BlogRoot\source\css</code>下添加文件<code>homeArticle.css</code>，并增加以下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 默认 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&gt;<span class="selector-class">.recent-post-info</span>&gt;<span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 鼠标悬停 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.recent-post-info</span> <span class="selector-class">.content</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>; <span class="comment">/* 透明度改变 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2</span>; <span class="comment">/* 行高改变 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">120%</span>; <span class="comment">/* 字体大小改变 */</span></span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 标题大小 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>&gt;<span class="selector-class">.recent-post-info</span>&gt;<span class="selector-class">.article-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：归档页美化</title>
      <link href="/posts/2b7328c4/"/>
      <url>/posts/2b7328c4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041937490.png" alt=""></p><h2 id="2-教程">2. 教程</h2><div class="note info flat"><p><a href="https://dasi.net.cn/posts/ecc80865/">自定义CSS教程</a></p></div><p>第一步：在路径<code>BlogRoot\source\css</code>下添加文件<code>layout.css</code>，并添加一些内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 归档页 */</span></span><br><span class="line"><span class="selector-class">.layout</span><span class="selector-class">.hide-aside</span>&#123;</span><br><span class="line">    <span class="attribute">max-width</span>:<span class="number">1400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#archive</span>,<span class="selector-id">#tag</span>,<span class="selector-id">#category</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--june-card-bg);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-title</span>&#123;</span><br><span class="line">    <span class="attribute">margin-top</span>:<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">::before</span>, <span class="selector-class">.article-sort-title</span><span class="selector-pseudo">::before</span>, <span class="selector-class">.article-sort-title</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort</span> <span class="selector-class">.year</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>:dashed <span class="number">5px</span> <span class="built_in">var</span>(--june-theme);</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:none;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:wrap;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>)&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">8px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">0.8rem</span>);</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0.4rem</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">2px</span> solid <span class="built_in">var</span>(--june-theme);</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">var</span>(--card-bg);</span><br><span class="line">    <span class="attribute">transition</span>:<span class="number">0.5s</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">120px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item-a</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item-img</span>&#123;</span><br><span class="line">    <span class="attribute">transition</span>:<span class="number">0.5s</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">140px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span> &gt; <span class="selector-tag">a</span> &gt;<span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item-title</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-meta</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>:max-content;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-meta</span> &gt; <span class="selector-class">.article-meta-wrap</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-meta</span> &gt; <span class="selector-class">.article-sort-item-time</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:right</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item-categories</span>,<span class="selector-class">.article-sort-item-tags</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">5px</span> <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="built_in">var</span>(--dark-grey);</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">transition</span>:<span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item-info</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.article-sort-meta</span>)&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-description</span>,<span class="selector-class">.article-sort-item</span> &gt; <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">opacity</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">    <span class="attribute">transition</span>:<span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-description</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">59px</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>)&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">var</span>(--june-theme);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">var</span>(--june-theme);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>)&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">var</span>(--june-theme);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">var</span>(--june-theme);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-description</span>,<span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) &gt; <span class="selector-tag">i</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:auto;</span><br><span class="line">    <span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-description</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-item-img</span>&#123;</span><br><span class="line">    <span class="attribute">transition</span>:<span class="number">0.5s</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-item-title</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">var</span>(--june-white)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-meta-wrap</span> <span class="selector-tag">a</span>,<span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-description</span>,<span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-item-time</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">var</span>(--june-light-grey)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-item-categories</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1.5px</span> solid <span class="number">#212F3C</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-item-tags</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1.5px</span> solid <span class="built_in">var</span>(--june-blue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-item-categories</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#212F3C</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#212F3C</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) <span class="selector-class">.article-sort-item-tags</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--june-blue);</span><br><span class="line">    <span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">var</span>(--june-blue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.article-sort-item</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.year</span>) &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.article-sort-meta</span> &gt; <span class="selector-class">.article-meta-wrap</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.article-sort-item-title</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.article-sort-item-img</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">90px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：修改地址<code>BlogRoot\themes\butterfly\layout\includes\mixins</code>下的文件<code>\article-sort.pug</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">mixin articleSort(posts)</span><br><span class="line">  .article-sort</span><br><span class="line">    - var year</span><br><span class="line">    - posts.each(function (article) &#123;</span><br><span class="line">    - let tempYear = date(article.date, &#x27;YYYY&#x27;)</span><br><span class="line">    - let no_cover = article.cover === false || !theme.cover.archives_enable ? &#x27;no-article-cover&#x27; : &#x27;&#x27;</span><br><span class="line">    - let title = article.title || _p(&#x27;no_title&#x27;)</span><br><span class="line">    if tempYear !== year</span><br><span class="line">      - year = tempYear</span><br><span class="line">      .article-sort-item.year= year</span><br><span class="line">    .article-sort-item(class=no_cover)</span><br><span class="line">      a.article-sort-item-a(href=url_for(article.path) title=title)</span><br><span class="line">      if article.cover &amp;&amp; theme.cover.archives_enable</span><br><span class="line">        a.article-sort-item-img(href=url_for(article.path) title=title)</span><br><span class="line">          img(src=url_for(article.cover) alt=title onerror=`this.onerror=null;this.src=&#x27;$&#123;url_for(theme.error_img.post_page)&#125;&#x27;`)</span><br><span class="line">      .article-sort-item-info</span><br><span class="line">        div</span><br><span class="line">          a.article-sort-item-title(href=url_for(article.path) title=title)= title</span><br><span class="line">          .article-sort-description= article.description</span><br><span class="line">        .article-sort-meta</span><br><span class="line">          .article-meta-wrap</span><br><span class="line">            if (theme.post_meta.page.categories &amp;&amp; article.categories.data.length &gt; 0)</span><br><span class="line">              span.article-sort-item-categories</span><br><span class="line">                each item, index in article.categories.data</span><br><span class="line">                  a(href=url_for(item.path)).article-meta__categories #[=item.name]</span><br><span class="line">                  if (index &lt; article.categories.data.length - 1)</span><br><span class="line">                    i.fas.fa-angle-right</span><br><span class="line">            if (theme.post_meta.page.tags &amp;&amp; article.tags.data.length &gt; 0)</span><br><span class="line">              each item, index in article.tags.data</span><br><span class="line">                span.article-sort-item-tags</span><br><span class="line">                  a(href=url_for(item.path)).article-meta__tags #[=item.name]</span><br><span class="line">                  if (index &lt; article.tags.data.length - 1)</span><br><span class="line">                    span.article-meta__link</span><br><span class="line">          .article-sort-item-time</span><br><span class="line">            i.far.fa-calendar-alt</span><br><span class="line">            time.post-meta-date-created(datetime=date_xml(article.date) title=_p(&#x27;post.created&#x27;) + &#x27; &#x27; + full_date(article.date))= date(article.date, config.date_format)</span><br><span class="line">      i.fas.fa-chevron-right</span><br><span class="line">    - &#125;)</span><br></pre></td></tr></table></figure><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.june-pj.cn/posts/136bc46a/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Butterfly归档、分类、标签美化</div>          <div class="tag-link-sitename">June's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：首页轮播组件</title>
      <link href="/posts/5f3e08e1/"/>
      <url>/posts/5f3e08e1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041923547.png" alt=""></p><h2 id="2-教程">2. 教程</h2><p>第一步：在博客根目录下打开终端，运行以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure><p>第二步：在站点配置文件<code>_config.yml</code>添加配置信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章轮播</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> </span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> </span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> </span><br><span class="line">  <span class="attr">layout:</span> </span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span>  </span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">想一个默认描述好难的！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span> <span class="comment">#swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br></pre></td></tr></table></figure><p>第三步：自定义配置参数</p><ul><li>【选填】priority：过滤器优先级，数值越小，执行越早，默认为10，</li><li>【必填】enable：是否开启</li><li>【选填】enable_page：应用地址，主页就填<code>/</code>，分类页面就填<code>/categories/</code>，所有页面就填<code>all</code>，默认为all</li><li>【选填】timemode：<code>date</code>为显示创建日期，<code>updated</code>为显示更新日期，默认为date</li><li>【选填】layout.type：挂载容器类型<code>id/class</code>，不填则默认为id</li><li>【必填】<a href="http://layout.name">layout.name</a>：挂载容器名称</li><li>【选填】layout.index：当layout.type为class，此项用来确认究竟排在第几位</li><li>【选填】default_descrtext：默认文章描述</li></ul><p>第四步：在文章的<code>front-matter</code>中使用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line">swiper<span class="emphasis">_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span></span><br></pre></td></tr></table></figure><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://akilar.top/posts/8e1264d1/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Swiper Bar</div>          <div class="tag-link-sitename">Akilar</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：文章页美化</title>
      <link href="/posts/8347bba9/"/>
      <url>/posts/8347bba9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-自定义CSS">1. 自定义CSS</h2><div class="note info flat"><p><a href="https://dasi.net.cn/posts/ecc80865/">自定义CSS教程</a></p></div><p>在路径<code>BlogRoot\source\css</code>下添加文件<code>post.css</code></p><h2 id="2-教程">2. 教程</h2><h3 id="2-1-标题居中">2.1 标题居中</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 标题居中 */</span></span><br><span class="line"><span class="selector-id">#post-info</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考链接</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://moonruyan.github.io/post/84dc2e1a.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">【butterfly教程】更改文章页的文章相关信息布局</div>          <div class="tag-link-sitename">梦如烟的博客</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h3 id="2-2-字体大小">2.2 字体大小</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 各级标题大小 */</span></span><br><span class="line"><span class="selector-id">#article-container</span> &gt; <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#article-container</span> &gt; <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#article-container</span> &gt; <span class="selector-tag">h4</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#article-container</span> &gt; <span class="selector-tag">h5</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 目录字体 */</span></span><br><span class="line"><span class="selector-id">#card-toc</span>&gt;<span class="selector-class">.toc-content</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-顶部图模糊">2.3 顶部图模糊</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 顶部图模糊 */</span></span><br><span class="line"><span class="selector-id">#page-header</span><span class="selector-class">.post-bg</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">10px</span>);</span><br><span class="line">  -webkit-backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">10px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-持续更新…">3. 持续更新…</h2>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：版权美化</title>
      <link href="/posts/f32f8bf8/"/>
      <url>/posts/f32f8bf8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041555121.png" alt=""></p><h2 id="2-教程">2. 教程</h2><p>第一步：在路径<code>BlogRoot\themes\butterfly\layout\includes\post</code>下重写文件<code>post-copyright.pug</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">if theme.post_copyright.enable &amp;&amp; page.copyright !== false</span><br><span class="line">  - let author = page.copyright_author ? page.copyright_author : config.author</span><br><span class="line">  - let url = page.copyright_url ? page.copyright_url : page.permalink</span><br><span class="line">  .post-copyright</span><br><span class="line">    .post-copyright__title</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        h #[=page.title]</span><br><span class="line">    .post-copyright__type</span><br><span class="line">      span.post-copyright-info</span><br><span class="line">        a(href=url_for(url))= theme.post_copyright.decode ? decodeURI(url) : url</span><br><span class="line">    .post-copyright-m</span><br><span class="line">      .post-copyright-m-info</span><br><span class="line">        .post-copyright-a(style=&quot;display: inline-block;width: 120px&quot;)</span><br><span class="line">            h 作者</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=author</span><br><span class="line">        .post-copyright-c(style=&quot;display: inline-block;width: 120px&quot;)</span><br><span class="line">            h 发布于</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=date(page.date, config.date_format)</span><br><span class="line">        .post-copyright-u(style=&quot;display: inline-block;width: 120px&quot;)</span><br><span class="line">            h 更新于</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                h=date(page.updated, config.date_format)</span><br><span class="line">        .post-copyright-c(style=&quot;display: inline-block;width: 120px&quot;)</span><br><span class="line">            h 许可协议</span><br><span class="line">            .post-copyright-cc-info</span><br><span class="line">                a.icon(rel=&#x27;noopener&#x27; target=&#x27;_blank&#x27; title=&#x27;Creative Commons&#x27; href=&#x27;https://creativecommons.org/&#x27;)</span><br><span class="line">                  i.fab.fa-creative-commons</span><br><span class="line">                a(rel=&#x27;noopener&#x27; target=&#x27;_blank&#x27; title=&#x27;CC BY 4.0&#x27; href=&#x27;https://creativecommons.org/licenses/by/4.0/deed.zh&#x27;) CC BY 4.0</span><br></pre></td></tr></table></figure><p>第二步：在路径<code>BlogRoot\themes\butterfly\source\css_layout</code>下，修改<code>post.styl</code>文件</p><div class="note warning flat"><p>修改范围：<code>.post-copyright</code> 至 <code>.post-outdate-notice</code></p></div><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-copyright</span></span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2rem</span> <span class="number">0</span> .<span class="number">5rem</span></span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5rem</span> .<span class="number">8rem</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--light-grey)</span><br><span class="line">    <span class="attribute">transition</span>: box-shadow .<span class="number">3s</span> ease-in-out</span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span><span class="meta">!important</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">239</span> <span class="number">241</span> <span class="number">243</span>)</span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">      <span class="attribute">background</span> <span class="built_in">var</span>(--heo-post-blockquote-bg)</span><br><span class="line">      <span class="attribute">position</span> absolute</span><br><span class="line">      <span class="attribute">right</span> -<span class="number">26px</span></span><br><span class="line">      <span class="attribute">top</span> -<span class="number">120px</span></span><br><span class="line">      <span class="attribute">content</span> <span class="string">&#x27;\f25e&#x27;</span></span><br><span class="line">      <span class="attribute">font-size</span> <span class="number">200px</span></span><br><span class="line">      <span class="attribute">font-family</span> <span class="string">&#x27;Font Awesome 5 Brands&#x27;</span></span><br><span class="line">      <span class="attribute">opacity</span> .<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">237</span>, <span class="number">250</span>, .<span class="number">6</span>), <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">237</span>, <span class="number">250</span>, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.post-copyright</span></span><br><span class="line">      &amp;-meta</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line"></span><br><span class="line">      &amp;-info</span><br><span class="line">        <span class="attribute">padding-left</span>: .<span class="number">3rem</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span></span><br><span class="line">          <span class="attribute">text-decoration</span>: none</span><br><span class="line">          <span class="attribute">word-break</span>: break-word</span><br><span class="line"></span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">text-decoration</span>: none</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-copyright-cc-info</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$theme</span>-color;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-outdate-notice</span></span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span></span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1.2em</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$noticeOutdate</span>-bg</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$noticeOutdate</span>-color</span><br></pre></td></tr></table></figure><p>第三步：在路径<code>BlogRoot\source\css</code>下添加文件<code>copyright.css</code>，输入以下内容</p><div class="note info flat"><p><a href="https://dasi.net.cn/posts/ecc80865/">自定义CSS教程</a></p></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#post</span> <span class="selector-class">.post-copyright</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">7</span> <span class="number">8</span> <span class="number">10</span>);</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">#bfbeb8</span> <span class="number">1px</span> <span class="number">0</span> <span class="number">4px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-id">#post</span> <span class="selector-class">.post-copyright</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">19</span> <span class="number">18</span> <span class="number">18</span> / <span class="number">35%</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="selector-class">.post-copyright-info</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e0e0e4</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-id">#post</span> <span class="selector-class">.post-copyright__title</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">22px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#post</span> <span class="selector-class">.post-copyright__notice</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://www.imcharon.com/117/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">butterfly版权美化教程</div>          <div class="tag-link-sitename">小N同学</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：侧栏分类目录美化（从大到小排序）</title>
      <link href="/posts/5e7a5e9b/"/>
      <url>/posts/5e7a5e9b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041535117.png" alt=""></p><h2 id="2-教程">2. 教程</h2><p>找到路径<code>BlogRoot\themes\butterfly\scripts\helpers</code>下的<code>aside_categories.js</code>文件，修改源代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// name按照名称排序，length按照文章数排序</span></span><br><span class="line"><span class="keyword">const</span> orderby = options.<span class="property">orderby</span> || <span class="string">&#x27;length&#x27;</span></span><br><span class="line"><span class="comment">// 1是升序，-1是降序</span></span><br><span class="line"><span class="keyword">const</span> order = options.<span class="property">order</span> || -<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://luoyuy.top/posts/8cb0fd83894c/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">hexo-theme-butterfly 修改侧边栏分类排序规则</div>          <div class="tag-link-sitename">洛语 の Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：标签美化（排序+文章数+外框）</title>
      <link href="/posts/67f74a9a/"/>
      <url>/posts/67f74a9a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041458633.png" alt=""></p><h2 id="2-教程">2. 教程</h2><p>如何自定义CSS请看</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://dasi.net.cn/posts/ecc80865/">  <div class="tag-link-tips">✅来自本站，可以放心食用~</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">hexo 魔改：js 和 css 文件的添加</div>          <div class="tag-link-sitename">Dasi's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><p>第一步：在路径<code>BlogRoot\themes\butterfly\scripts\helpers</code>下找到<code>page.js</code>文件，在文件中找到函数<code>cloudTags</code>进行修改：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">helper</span>.<span class="title function_">register</span>(<span class="string">&#x27;cloudTags&#x27;</span>, <span class="keyword">function</span>(<span class="params">options = &#123;&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> env = <span class="variable language_">this</span></span><br><span class="line">  <span class="comment">// 设置标签排序：根据文章数目&#x27;length&#x27;从小到大排序，然后再翻转实现从大到小排序</span></span><br><span class="line">  <span class="keyword">let</span> source = options.<span class="property">source</span></span><br><span class="line">  source = source.<span class="title function_">sort</span>(<span class="string">&#x27;length&#x27;</span>).<span class="title function_">reverse</span>()</span><br><span class="line">  <span class="comment">// 设置标签上限：显示全部标签</span></span><br><span class="line">  <span class="keyword">const</span> limit = options.<span class="property">limit</span></span><br><span class="line">  <span class="keyword">if</span> (limit &gt; <span class="number">0</span>) source = source.<span class="title function_">limit</span>(limit)</span><br><span class="line">  <span class="comment">// 设置标签格式</span></span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  source.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 随机取(100,100,100)~(255,255,255)的鲜艳颜色，为了更好地显示</span></span><br><span class="line">    <span class="keyword">const</span> color = <span class="string">&#x27;rgb(&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">156</span>+<span class="number">100</span>) + <span class="string">&#x27;, &#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">156</span>+<span class="number">100</span>) + <span class="string">&#x27;, &#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">156</span>+<span class="number">100</span>) + <span class="string">&#x27;)&#x27;</span></span><br><span class="line">    <span class="comment">// 增加 ($&#123;tag.length&#125;)内容，显示文章数目</span></span><br><span class="line">    result += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;env.url_for(tag.path)&#125;</span>&quot; style=&quot;color: <span class="subst">$&#123;color&#125;</span>&quot;&gt;<span class="subst">$&#123;tag.name&#125;</span> (<span class="subst">$&#123;tag.length&#125;</span>)&lt;/a&gt;`</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>第二步：在路径<code>BlogRoot\source\css</code>下新建文件<code>tag.css</code>，添加内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 侧栏标签 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 标签页 */</span></span><br><span class="line"><span class="selector-class">.tag-cloud-list</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-补充">3. 补充</h2><h3 id="3-1-自定义文章数目格式">3.1 自定义文章数目格式</h3><p>修改函数<code>cloudTags</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 括号 */</span></span><br><span class="line">result += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;env.url_for(tag.path)&#125;</span>&quot; style=&quot;color: <span class="subst">$&#123;color&#125;</span>&quot;&gt;<span class="subst">$&#123;tag.name&#125;</span> (<span class="subst">$&#123;tag.length&#125;</span>)&lt;/a&gt;`</span></span><br><span class="line"><span class="comment">/* 上标 */</span></span><br><span class="line">result += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;env.url_for(tag.path)&#125;</span>&quot; style=&quot;color: <span class="subst">$&#123;color&#125;</span>&quot;&gt;<span class="subst">$&#123;tag.name&#125;</span> &lt;sup&gt;<span class="subst">$&#123;tag.length&#125;</span>&lt;/sup&gt;&lt;/a&gt;`</span></span><br><span class="line"><span class="comment">/* 下标 */</span></span><br><span class="line">result += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;env.url_for(tag.path)&#125;</span>&quot; style=&quot;color: <span class="subst">$&#123;color&#125;</span>&quot;&gt;<span class="subst">$&#123;tag.name&#125;</span> &lt;sub&gt;<span class="subst">$&#123;tag.length&#125;</span>&lt;/sub&gt;&lt;/a&gt;`</span></span><br></pre></td></tr></table></figure><h3 id="3-2-自定义标签颜色">3.2 自定义标签颜色</h3><p>修改函数<code>cloudTags</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 预定义的颜色列表</span></span><br><span class="line"><span class="keyword">const</span> colors = [</span><br><span class="line">    <span class="string">&#x27;rgb(255, 0, 0)&#x27;</span>,   <span class="comment">// 红色</span></span><br><span class="line">    <span class="string">&#x27;rgb(0, 255, 0)&#x27;</span>,   <span class="comment">// 绿色</span></span><br><span class="line">    <span class="string">&#x27;rgb(255, 165, 0)&#x27;</span>  <span class="comment">// 橙色</span></span><br><span class="line">    <span class="comment">/* more */</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">// 设置标签格式</span></span><br><span class="line"><span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">source.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 从预定义的颜色列表中随机选择一种颜色</span></span><br><span class="line">    <span class="keyword">const</span> color = colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * colors.<span class="property">length</span>)];</span><br><span class="line">    result += <span class="string">`&lt;a href=&quot;<span class="subst">$&#123;env.url_for(tag.path)&#125;</span>&quot; style=&quot;color: <span class="subst">$&#123;color&#125;</span>&quot;&gt;<span class="subst">$&#123;tag.name&#125;</span> (<span class="subst">$&#123;tag.length&#125;</span>)&lt;/a&gt;`</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="4-参考链接">4. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.leonus.cn/2022/tags.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Hexo博客标签的魔改</div>          <div class="tag-link-sitename">Leonus</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：导航美化（居中+横向+常驻）</title>
      <link href="/posts/ae54bd6f/"/>
      <url>/posts/ae54bd6f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041402758.png" alt=""></p><h2 id="2-教程">2. 教程</h2><p>如何自定义CSS请看</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://dasi.net.cn/posts/ecc80865/">  <div class="tag-link-tips">✅来自本站，可以放心食用~</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">hexo 魔改：js 和 css 文件的添加</div>          <div class="tag-link-sitename">Dasi's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><p>在路径<code>BlogRoot\source\css</code>下添加文件<code>nav.css</code>，输入以下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 导航居中 */</span></span><br><span class="line"><span class="selector-id">#nav</span> <span class="selector-class">.menus_items</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 子菜单横向 */</span></span><br><span class="line"><span class="selector-class">.menus_item_child</span> <span class="selector-tag">li</span><span class="selector-pseudo">:not</span>(<span class="selector-id">#sidebar-menus</span> <span class="selector-tag">li</span>)&#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span><span class="meta">!important</span>;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="number">6px</span><span class="meta">!important</span>;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: <span class="number">6px</span><span class="meta">!important</span>;</span><br><span class="line">  -ms-<span class="attribute">border-radius</span>: <span class="number">6px</span><span class="meta">!important</span>;</span><br><span class="line">  -o-<span class="attribute">border-radius</span>: <span class="number">6px</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.menus_item_child</span><span class="selector-pseudo">:not</span>(<span class="selector-id">#sidebar-menus</span> <span class="selector-tag">ul</span>)&#123;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">translate</span>:-<span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 导航常驻 */</span></span><br><span class="line"><span class="selector-class">.nav-fixed</span> <span class="selector-id">#nav</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">  -moz-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">  -ms-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">  -o-<span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">58px</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#nav</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">  -webkit-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">  -moz-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">  -ms-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">  -o-<span class="attribute">transition</span>: none<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-分析">3. 分析</h2><p>居中：将<code>.menus_items</code>元素的定位设置为绝对定位，并使用<code>left: 50%</code>和<code>transform: translateX(-50%)</code>来水平居中</p><p>横向：将<code>.menus_item_child</code>下的所有<code>li</code>元素横向排列，并设置圆角<code>border-radius</code>；将子菜单的左边距设置为50%并使用<code>translate</code>来居中</p><p>常驻：将<code>#nav</code>元素向下移动58px，通常用于固定位置的导航栏；禁用所有过渡效果<code>transition</code>，确保导航栏的变化不带动画。</p><h2 id="4-参考链接">4. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.leonus.cn/2022/hexoCenter.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">buterfly博客导航栏居中</div>          <div class="tag-link-sitename">Leonus</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：背景美化（透明效果）</title>
      <link href="/posts/87f3e4/"/>
      <url>/posts/87f3e4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041213770.png" alt=""></p><h2 id="2-教程">2. 教程</h2><p>如何自定义CSS请看</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://dasi.net.cn/posts/ecc80865/">  <div class="tag-link-tips">✅来自本站，可以放心食用~</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">hexo 魔改：js 和 css 文件的添加</div>          <div class="tag-link-sitename">Dasi's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><p>在路径<code>BlogRoot/source/css</code>下添加文件<code>background.css</code>，输入以下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 背景颜色 */</span></span><br><span class="line"><span class="selector-id">#body-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line">    <span class="number">90deg</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    <span class="number">90deg</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 背景透明 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span>, <span class="comment">/* 侧栏作者介绍组件 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-announcement</span>, <span class="comment">/* 侧栏公告组件 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.sticky_layout</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-categories</span>, <span class="comment">/* 侧栏分类组件 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.sticky_layout</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-tags</span>, <span class="comment">/* 侧栏标签组件 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.sticky_layout</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-webinfo</span>, <span class="comment">/* 侧栏统计组件 */</span></span><br><span class="line"><span class="selector-id">#card-toc</span><span class="selector-class">.card-widget</span>, <span class="comment">/* 文章页侧栏目录 */</span></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>, <span class="comment">/* 首页近期文章组件 */</span></span><br><span class="line"><span class="selector-id">#archive</span>&gt;<span class="selector-class">.article-sort</span>&gt;<span class="selector-class">.article-sort-item</span>, <span class="comment">/* 归档页 */</span></span><br><span class="line"><span class="selector-id">#post</span>, <span class="comment">/* 文章 */</span></span><br><span class="line"><span class="selector-id">#page</span> <span class="comment">/* 自创页 */</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--light_bg_color);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">10px</span>); <span class="comment">/* 应用高斯模糊效果，可以根据需要调整模糊程度 */</span></span><br><span class="line">  -webkit-backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">10px</span>); <span class="comment">/* 兼容性前缀，适用于一些旧版本的浏览器 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 黑夜模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-announcement</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.sticky_layout</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-categories</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.sticky_layout</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-tags</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#aside-content</span>&gt;<span class="selector-class">.sticky_layout</span>&gt;<span class="selector-class">.card-widget</span><span class="selector-class">.card-webinfo</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#card-toc</span><span class="selector-class">.card-widget</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#archive</span>&gt;<span class="selector-class">.article-sort</span>&gt;<span class="selector-class">.article-sort-item</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span> <span class="selector-id">#page</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--dark_bg_color);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">10px</span>); </span><br><span class="line">  -webkit-backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">10px</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 页脚透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">20px</span>;</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">saturate</span>(<span class="number">100%</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-id">#footer-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--font-color)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-id">#footer-wrap</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--font-color)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考链接</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.imzjw.cn/posts/b74f504f/index.html#%E5%85%A8%E5%B1%80%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E6%B8%90%E5%8F%98">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">关于我 Butterfly 主题的所有美化</div>          <div class="tag-link-sitename">小嘉的部落格</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h2 id="3-分析">3. 分析</h2><h3 id="3-1-如何找组件">3.1 如何找组件</h3><ol><li><code>hexo s</code>打开本地预览</li><li>进入元素所在的网页</li><li><code>F12</code>打开开发者工具</li><li><code>ctrl+shift+c</code>开启设备仿真与元素检查，或者点击左上角按钮<br><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409041246462.png" alt=""></li><li>将鼠标移动到对应元素点击，就可以跳转到对应的代码，然后就可以看到当前元素所属的class和id</li><li>进行自定义，语法可以参考以下链接</li></ol><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://www.w3school.com.cn/index.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">CSS 教程</div>          <div class="tag-link-sitename">W3School</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><p>参考链接</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://www.cnblogs.com/glory-yl/p/15399411.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Butterfly透明背景设置</div>          <div class="tag-link-sitename">云雨归海</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h3 id="3-2-慎用backdrop-filter！">3.2 慎用backdrop-filter！</h3><p>如果要在透明的基础上实现毛玻璃效果，是基于backdrop-filter的高斯模糊算法实现的。如果当它应用于整个页面或者多个元素时，会<font color="orangered">极大程度增加计算负担，从而可能导致网页卡帧</font></p><div class="note info flat"><p>你可以试试将blur值设置为较大值如100px，然后打开浏览器看看滚动效果，或者打开任务管理器看看浏览器使用CPU情况，<s>或者听听你笔记本风扇的声音</s></p></div><p>既然这个效果要用到算法，GPU的计算能力比CPU要强，因此可以加上属性：<code>transform: translateZ(0);</code></p><div class="note warning flat"><p>虽然卡顿的问题有所缓解，但肯定还是没有自然的丝滑，一定要酌情使用！</p></div><p>参考链接</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://www.ruanyifeng.com/blog/2012/11/gaussian_blur.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">高斯模糊的算法</div>          <div class="tag-link-sitename">阮一峰的网络日志</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="http://www.ichenhua.cn/read/226">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">毛玻璃效果backdrop-filter:blur卡顿性能优化方案</div>          <div class="tag-link-sitename">陈华编程</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：自定义脚本文件</title>
      <link href="/posts/307cfcf5/"/>
      <url>/posts/307cfcf5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-一键预览">1. 一键预览</h2><p>创建一个文本文件（任意地址均可），然后输入一下内容，最后修改后缀名为<code>.bat</code></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> /d &quot;BlogRoot&quot;</span><br><span class="line"><span class="keyword">call</span> hexo clean</span><br><span class="line"><span class="keyword">call</span> hexo g</span><br><span class="line"><span class="built_in">start</span> <span class="built_in">cmd</span> /k &quot;hexo s &amp;&amp; <span class="keyword">exit</span>&quot;</span><br><span class="line">timeout /t <span class="number">5</span> /nobreak &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="built_in">start</span> http://localhost:<span class="number">4000</span></span><br></pre></td></tr></table></figure><p><code>@echo off</code>：关闭命令回显，即执行命令的时候不显示命令，只显示结果</p><p><code>cd /d &quot;BlogRoot&quot;</code>：切换到博客根目录，<font color="orangered">修改为你自己的地址</font>，<code>/d</code>选项允许更改驱动器及其目录</p><p><code>call hexo clean</code>和<code>call hexo g</code>：执行相应命令</p><p><code>start cmd /k &quot;hexo s &amp;&amp; exit&quot;</code>：启动一个新的命令提示符窗口，运行hexo s命令，并命令执行完成后自动关闭窗口</p><blockquote><p><font color="deepskyblue">为什么要开启一个新的窗口：因为hexo s执行需要手动键入<code>ctrl + c</code>才能终止，导致下一个命令不会执行，实现不了自动打开浏览器的效果</font></p></blockquote><p><code>timeout /t 5 /nobreak &gt;nul</code>：暂停，<code>\t 5</code>表示暂停5秒钟，<code>/nobreak</code>防止用户按任意键中断，<code>&gt;nul</code>将输出重定向到空设备，屏蔽显示</p><blockquote><p><font color="deepskyblue">为什么要暂停：本地服务器部署需要一定时间，如果立刻打开浏览器，会显示还没加载好或者还没加载完的页面，暂停可以确保打开浏览器直接预览</font></p></blockquote><p><code>start http://localhost:4000</code>：启动默认浏览器并打开Hexo本地服务器的地址（默认端口是4000）</p><h2 id="2-一键部署">2. 一键部署</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> /d &quot;BlogRoot&quot;</span><br><span class="line"><span class="keyword">call</span> hexo clean</span><br><span class="line"><span class="keyword">call</span> hexo g</span><br><span class="line"><span class="keyword">call</span> hexo d</span><br></pre></td></tr></table></figure><p>原理同上，但是建议这里<font color="orangered">不要加入exit</font>，因为部署的时候可能会出错，需要查看error信息来debug，因此不能直接关闭窗口</p><blockquote><p><font color="deepskyblue">如果有使用glup压缩，在<code>call hexo g</code>和<code>call hexo d</code>之间加入<code>call glup</code></font></p></blockquote><h2 id="3-效果">3. 效果</h2><p>双击批处理文件 (.bat)即可</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409031706161.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：js和css文件的添加</title>
      <link href="/posts/ecc80865/"/>
      <url>/posts/ecc80865/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-建立文件夹">1. 建立文件夹</h2><p>为了统一管理，建议按照文件类型来建立文件夹，路径在<code>BlogRoot/source</code>下</p><p>一般来说，我们需要3个文件夹</p><ul><li>js：存放 JavaScript 文件，用于实现网站的动态功能和交互效果（如导航菜单的展开、图像轮播、表单验证等）</li><li>css：存放 CSS 文件，用于定义网站的样式（包括颜色、字体和布局等）</li><li>image：存放图片文件，用于网站的视觉元素（如图标、背景图、封面图等）</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409030123448.png" alt=""></p><h2 id="2-创建文件">2. 创建文件</h2><p>鼠标右键<font color="orangered">新建文本文件</font>，然后修改后缀名为<code>.js</code>或<code>.css</code>，最后用VSCode等编辑器打开添加内容即可</p><h2 id="3-引用">3. 引用</h2><p>要在<code>_config_butterfly.yml</code>中倒数第二个配置项，即<code>inject</code>配置项中引用</p><blockquote><p>可以直接拉到最后，或者添加书签，因为这个配置项经常会用到</p></blockquote><ol><li>css文件要在<code>head</code>下</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">head:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/filename1.css?1&quot;&gt;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/filename2.css?1&quot;&gt;</span>  </span><br></pre></td></tr></table></figure><ol start="2"><li>js文件要在<code>bottom</code>下</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bottom:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/filename1.js?1&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/filename2.js?1&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-补充">4. 补充</h2><p>建议</p><ul><li>每次只需要复制粘贴前一行，然后修改一下文件名即可</li><li>在静态文件后面添加<code>?1</code>，浏览器会识别这是一个新的URL，从而强制重新下载文件而不是使用缓存的旧版本，有助于确保用户总是能看到最新的内容</li></ul><p>注意</p><ul><li>可以通过外链来引用文件，但是外链如果失效会导致样式丢失，因此<font color="orangered">慎用</font></li><li>路径开头直接是<code>/</code>，而不是<code>./</code></li><li><font color="orangered">缩进，列表符和空格</font>不能遗漏</li><li>特殊情况下，两个相关联的文件的引用顺序有强制要求</li></ul><h2 id="5-参考文章">5. 参考文章</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.leonus.cn/2022/custom.html">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">Hexo博客添加自定义css和js文件</div>          <div class="tag-link-sitename">Leonus</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：站点标题美化（动态改变）</title>
      <link href="/posts/2dbb3dd3/"/>
      <url>/posts/2dbb3dd3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-自定义css和js">1. 自定义css和js</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://dasi.net.cn/posts/ecc80865/">  <div class="tag-link-tips">✅来自本站，可以放心食用~</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">hexo魔改：js和css文件的添加</div>          <div class="tag-link-sitename">Dasi's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h2 id="2-教程">2. 教程</h2><p>第一步：在路径<code>BlogRoot\source\js</code>下添加<code>sitetitle.js</code>，写入以下内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态标题</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitile</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;visibilitychange&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">    <span class="comment">//离开当前页面时标签显示内容</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;......&quot;</span>;  <span class="comment">// 修改这里</span></span><br><span class="line">    <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//返回当前页面时标签显示内容</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&quot;......&quot;</span>; <span class="comment">// 修改这里</span></span><br><span class="line">    <span class="comment">//变回正常标题</span></span><br><span class="line">    titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitile</span>;</span><br><span class="line">    &#125;, <span class="number">2000</span>); <span class="comment">// 修改这里，单位是毫秒，2000就是两秒</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>第二步：在<code>_config.butterfly.yml</code>中引入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/sitetitle.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-参考链接">3. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.anheyu.com/posts/sdxhu.html#%E7%AB%99%E7%82%B9%E5%8A%A8%E6%80%81-title">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">butterfly 重装日记</div>          <div class="tag-link-sitename">安知鱼</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：外链美化（标签外挂）</title>
      <link href="/posts/2fa7a371/"/>
      <url>/posts/2fa7a371/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-效果预览">1. 效果预览</h2><p>参考链接</p><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.liushen.fun/posts/a64defb4/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">魔改笔记七：分类条及外链卡片</div>          <div class="tag-link-sitename">LiuShen's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://dasi.net.cn/posts/2fa7a371/">  <div class="tag-link-tips">✅来自本站，可以放心食用~</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">hexo魔改：外链卡片</div>          <div class="tag-link-sitename">Dasi's Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div><h2 id="2-教程">2. 教程</h2><p>第一步：在路径<code>BlogRoot\themes\butterfly\scripts\tag</code>下新建文件<code>link.js</code>，写入以下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">link</span>(<span class="params">args</span>) &#123;</span><br><span class="line">  args = args.<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>).<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> title = args[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">let</span> sitename = args[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">let</span> link = args[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义不同域名对应的头像URL</span></span><br><span class="line">  <span class="keyword">const</span> avatarUrls = &#123;</span><br><span class="line">    <span class="string">&#x27;github.com&#x27;</span>: <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a461a3098aa.webp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;csdn.net&#x27;</span>: <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a461b627dc2.webp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;gitee.com&#x27;</span>: <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a461c3dea80.webp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;zhihu.com&#x27;</span>: <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a461cc20eb4.webp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;stackoverflow.com&#x27;</span>: <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a461d3be02e.webp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;wikipedia.org&#x27;</span>: <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a461db48579.webp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;baidu.com&#x27;</span>: <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a461e1ae5b5.webp&#x27;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 白名单域名</span></span><br><span class="line">  <span class="keyword">const</span> whitelistDomains = [</span><br><span class="line">    <span class="string">&#x27;baidu.com&#x27;</span>   <span class="comment">// 修改此处，设置为自己的域名（也可以添加友联，&#x27;,&#x27;分隔）</span></span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取URL的根域名</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getRootDomain</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> hostname = <span class="keyword">new</span> <span class="title function_">URL</span>(url).<span class="property">hostname</span>;</span><br><span class="line">    <span class="keyword">const</span> domainParts = hostname.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>).<span class="title function_">reverse</span>();</span><br><span class="line">    <span class="keyword">if</span> (domainParts.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> domainParts[<span class="number">1</span>] + <span class="string">&#x27;.&#x27;</span> + domainParts[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hostname;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据URL获取对应的头像URL</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getAvatarUrl</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> rootDomain = <span class="title function_">getRootDomain</span>(url);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> domain <span class="keyword">in</span> avatarUrls) &#123;</span><br><span class="line">      <span class="keyword">if</span> (domain.<span class="title function_">endsWith</span>(rootDomain)) &#123;</span><br><span class="line">        <span class="keyword">return</span> avatarUrls[domain];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp&#x27;</span>;  <span class="comment">// 默认头像URL</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 检查是否在白名单中</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">isWhitelisted</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> rootDomain = <span class="title function_">getRootDomain</span>(url);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> domain <span class="keyword">of</span> whitelistDomains) &#123;</span><br><span class="line">      <span class="keyword">if</span> (rootDomain.<span class="title function_">endsWith</span>(domain)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取对应的头像URL</span></span><br><span class="line">  <span class="keyword">let</span> imgUrl = <span class="title function_">getAvatarUrl</span>(link);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判断并生成提示信息</span></span><br><span class="line">  <span class="keyword">let</span> tipMessage = <span class="title function_">isWhitelisted</span>(link)</span><br><span class="line">    ? <span class="string">&quot;✅来自本站，可以放心食用~&quot;</span></span><br><span class="line">    : <span class="string">&quot;🪧引用站外地址，不保证站点的可用性和安全性！&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;div class=&#x27;liushen-tag-link&#x27;&gt;&lt;a class=&quot;tag-Link&quot; target=&quot;_blank&quot; href=&quot;<span class="subst">$&#123;link&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;div class=&quot;tag-link-tips&quot;&gt;<span class="subst">$&#123;tipMessage&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;div class=&quot;tag-link-bottom&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;tag-link-left&quot; style=&quot;background-image: url(<span class="subst">$&#123;imgUrl&#125;</span>);&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;tag-link-right&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;tag-link-title&quot;&gt;<span class="subst">$&#123;title&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;tag-link-sitename&quot;&gt;<span class="subst">$&#123;sitename&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;i class=&quot;fa-solid fa-angle-right&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/a&gt;&lt;/div&gt;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">tag</span>.<span class="title function_">register</span>(<span class="string">&#x27;link&#x27;</span>, link, &#123; <span class="attr">ends</span>: <span class="literal">false</span> &#125;);</span><br></pre></td></tr></table></figure><p>需要注意，上述函数只适用于二级根域名的判断，像博主是 <a href="http://dasi.net.cn">dasi.net.cn</a>，就无法判断。因此我是直接利用hostname判断，比较粗暴</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否在白名单中</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isWhitelisted</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> hostname = <span class="keyword">new</span> <span class="title function_">URL</span>(url).<span class="property">hostname</span>;</span><br><span class="line">  <span class="keyword">return</span> hostname === <span class="string">&#x27;dasi.net.cn&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：在路径<code>BlogRoot\themes\butterfly\source\css\_tags</code>下新建文件<code>link.styl</code>，写入以下内容</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span></span><br><span class="line">  <span class="attr">--tag-link-bg-color</span> white</span><br><span class="line">  <span class="attr">--tag-link-text-color</span> black</span><br><span class="line">  <span class="attr">--tag-link-border-color</span> white</span><br><span class="line">  <span class="attr">--tag-link-hover-bg-color</span> <span class="built_in">rgb</span>(<span class="number">141</span>, <span class="number">216</span>, <span class="number">233</span>)</span><br><span class="line">  <span class="attr">--tag-link-hover-border-color</span> black</span><br><span class="line">  <span class="attr">--tag-link-tips-border-color</span> black</span><br><span class="line">  <span class="attr">--tag-link-sitename-color</span> <span class="built_in">rgb</span>(<span class="number">144</span>, <span class="number">144</span>, <span class="number">144</span>)</span><br><span class="line">  <span class="attr">--tag-link-hover-sitename-color</span> black</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span></span><br><span class="line">  <span class="attr">--tag-link-bg-color</span> <span class="number">#2d2d2d</span></span><br><span class="line">  <span class="attr">--tag-link-text-color</span> white</span><br><span class="line">  <span class="attr">--tag-link-border-color</span> black</span><br><span class="line">  <span class="attr">--tag-link-hover-bg-color</span> <span class="number">#339297</span></span><br><span class="line">  <span class="attr">--tag-link-hover-border-color</span> white</span><br><span class="line">  <span class="attr">--tag-link-tips-border-color</span> white</span><br><span class="line">  <span class="attr">--tag-link-sitename-color</span> <span class="built_in">rgb</span>(<span class="number">144</span>, <span class="number">144</span>, <span class="number">144</span>)</span><br><span class="line">  <span class="attr">--tag-link-hover-sitename-color</span> white</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#article-container</span></span><br><span class="line">  <span class="selector-class">.tag-Link</span></span><br><span class="line">    <span class="attribute">background</span> <span class="built_in">var</span>(--tag-link-bg-color)</span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">12px</span> <span class="meta">!important</span></span><br><span class="line">    <span class="attribute">display</span> flex</span><br><span class="line">    <span class="attribute">border</span> <span class="number">1px</span> solid <span class="built_in">var</span>(--tag-link-border-color)</span><br><span class="line">    <span class="attribute">flex-direction</span> column</span><br><span class="line">    <span class="attribute">padding</span> <span class="number">0.5rem</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">margin-top</span> <span class="number">1rem</span></span><br><span class="line">    <span class="attribute">text-decoration</span> none <span class="meta">!important</span></span><br><span class="line">    <span class="attribute">color</span> <span class="built_in">var</span>(--tag-link-text-color)</span><br><span class="line">    <span class="attribute">margin-bottom</span> <span class="number">10px</span></span><br><span class="line">    <span class="attribute">transition</span> background-color <span class="number">0.3s</span>, border-color <span class="number">0.3s</span>, box-shadow <span class="number">0.3s</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">border-color</span> <span class="built_in">var</span>(--tag-link-hover-border-color)</span><br><span class="line">      <span class="attribute">background-color</span> <span class="built_in">var</span>(--tag-link-hover-bg-color)</span><br><span class="line">      <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tag-link-tips</span></span><br><span class="line">      <span class="attribute">color</span> <span class="built_in">var</span>(--tag-link-text-color)</span><br><span class="line">      <span class="attribute">border-bottom</span> <span class="number">1px</span> solid <span class="built_in">var</span>(--tag-link-tips-border-color)</span><br><span class="line">      <span class="attribute">padding-bottom</span> <span class="number">4px</span></span><br><span class="line">      <span class="attribute">font-size</span> <span class="number">0.6rem</span></span><br><span class="line">      <span class="attribute">font-weight</span> normal</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.tag-link-bottom</span></span><br><span class="line">      <span class="attribute">display</span> flex</span><br><span class="line">      <span class="attribute">margin-top</span> <span class="number">0.5rem</span></span><br><span class="line">      <span class="attribute">align-items</span> center</span><br><span class="line">      <span class="attribute">justify-content</span> space-around</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.tag-link-left</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">60px</span></span><br><span class="line">        <span class="attribute">min-width</span> <span class="number">60px</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">60px</span></span><br><span class="line">        <span class="attribute">background-size</span> cover</span><br><span class="line">        <span class="attribute">border-radius</span> <span class="number">25%</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.tag-link-right</span></span><br><span class="line">        <span class="attribute">margin-left</span> <span class="number">1rem</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.tag-link-title</span></span><br><span class="line">          <span class="attribute">font-size</span> <span class="number">1rem</span></span><br><span class="line">          <span class="attribute">line-height</span> <span class="number">1.2</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.tag-link-sitename</span></span><br><span class="line">          <span class="attribute">font-size</span> <span class="number">0.7rem</span></span><br><span class="line">          <span class="attribute">color</span> <span class="built_in">var</span>(--tag-link-sitename-color)</span><br><span class="line">          <span class="attribute">font-weight</span> normal</span><br><span class="line">          <span class="attribute">margin-top</span> <span class="number">4px</span></span><br><span class="line">          <span class="attribute">transition</span> color <span class="number">0.3s</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span> <span class="selector-class">.tag-link-sitename</span></span><br><span class="line">          <span class="attribute">color</span> <span class="built_in">var</span>(--tag-link-hover-sitename-color)</span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">i</span></span><br><span class="line">        <span class="attribute">margin-left</span> auto</span><br></pre></td></tr></table></figure><p>第三步：在markdown输入文本利用标签即可</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link your<span class="emphasis">_title,website_</span>title,website<span class="emphasis">_url&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p><font color="deepskyblue">建议your_title写引用文章的题目，website_title写引用博主的网站名</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改：URL持久化</title>
      <link href="/posts/2dff033d/"/>
      <url>/posts/2dff033d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-初始设置介绍">1. 初始设置介绍</h2><p>在_config.yml中找到<code>URL</code>配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://dasi.net.cn</span> <span class="comment"># 主页的域名，可以是github的page页如https://username.github.io，也可以是自定义的域名如https://dasi.net.cn</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span><span class="comment"># 预设永久链接格式</span></span><br><span class="line"><span class="attr">permalink_defaults:</span> <span class="comment"># 默认永久链接格式（设置了预设值此处可以不用填写）</span></span><br><span class="line"><span class="attr">pretty_urls:</span> <span class="comment"># 美化url</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span><span class="string">/false</span> <span class="comment"># 是否在末尾添加`index.html`</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span><span class="string">/false</span> <span class="comment"># 是否在末尾添加`.html`</span></span><br></pre></td></tr></table></figure><h2 id="2-必要性">2. 必要性</h2><p>永久链接（permalink）：是一个用来引用或链接到特定网页、博客文章或其他网络内容的固定URL</p><p>搜索引擎优化（search engine optimization,SEO）：提高网站在搜索引擎结果页中排名的过程</p><p>为什么要使用<strong>持久化url</strong>：确保链接的稳定性和一致性，<font color="orangered">一切都是为了SEO</font></p><blockquote><p>如果使用了:year/:month/:day或者:category/，一旦在文章的front-matter中修改了日期或分类，那么相应的url也会修改</p></blockquote><p>permalink要求</p><ul><li>建立一致的结构：提高用户体验和搜索引擎抓取效率</li><li>使用关键词：如使用post，music等，使URL更具描述性，有助于SEO</li><li>避免在URL中使用特殊字符：使URL更难以解析和记忆，甚至使URL失效</li><li>避免在URL中使用日期：过早日期会让搜索引擎误认为内容已经过时，从而降低SEO</li><li>避免URL过长：有助于SEO</li><li>避免使用中文：URL会对中文进行转码，这将会是一场灾难，不信你试试</li></ul><h2 id="3-手动修改">3. 手动修改</h2><p>第一步：修改<code>_config.yml</code>的URL配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:permalink</span> <span class="comment"># 冒号表示利用文章front-matter中，键permalink对应的值</span></span><br></pre></td></tr></table></figure><p>第二步：修改<code>HexoRoot/scaffolds/post.md</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">description:</span><br><span class="line">cover:</span><br><span class="line"><span class="section">permalink: # 添加该行，键是permalink，值是你自定义的永久链接内容，可以使用关键词/posts/，/article/，/music/等</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="4-插件修改">4. 插件修改</h2><p>手动修改的局限性</p><ul><li>每一次都需要在新建的文章中添加permalink值</li><li><font color="orangered">起名是一件很难很难很难很难的事！</font>，如果利用序号区分很容易重复</li></ul><blockquote><p>利用插件可以实现实现自动化命名</p></blockquote><p>第一步：在Hexo根目录下打开终端安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>第二步：修改<code>_config.yml</code>的URL配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br></pre></td></tr></table></figure><blockquote><p>同上，可以看出这里使用了文章front-matter中，键abbrlink对应的值</p></blockquote><p>第三步：在<code>_config.yml</code>中添加<code>hexo-abbrlink</code>配置项</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 持久化URL</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span> <span class="comment"># algorithm算法：支持16位校验算法crc16(default)和32位校验算法crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span> <span class="comment"># representation哈希值表示形式：支持十进制dec(default)和十六进制hex</span></span><br></pre></td></tr></table></figure><blockquote><p>不同设置对应的url</p><ul><li>crc16 &amp; hex：posts/66c8.html</li><li>crc16 &amp; dec：posts/65535.html</li><li>crc32 &amp; hex：posts/8ddf18fb.html</li><li>crc32 &amp; dec：posts/1690090958.html</li></ul><p><font color="deepskyblue">使用crc32和hex：crc32的哈希冲突较低，hex的url较短</font></p></blockquote><h2 id="5-踩坑">5. 踩坑</h2><p>如果你部署之后发现，点击页面不是跳转，而是下载了一个abbrlink名称且存储html代码的文件</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Hexo/202409021510611.png" alt=""></p><p>说明你在<code>_config.yml</code>的URL配置项中，permalink最后漏了一个<code>/</code>，补上即可</p><h2 id="6-参考链接">6. 参考链接</h2><div class='liushen-tag-link'><a class="tag-Link" target="_blank" href="https://blog.dejavu.moe/posts/hexo-permalinks/">  <div class="tag-link-tips">🪧引用站外地址，不保证站点的可用性和安全性！</div>  <div class="tag-link-bottom">      <div class="tag-link-left" style="background-image: url(https://cdn.qyliu.top/i/2024/07/27/66a4632bbf06e.webp);"></div>      <div class="tag-link-right">          <div class="tag-link-title">优化 Hexo 网站的永久链接格式</div>          <div class="tag-link-sitename">Dejavu’s Blog</div>      </div>      <i class="fa-solid fa-angle-right"></i>  </div>  </a></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地狱梗上不了台面</title>
      <link href="/posts/8ab2dce2/"/>
      <url>/posts/8ab2dce2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/>]]></content>
      
      
      <categories>
          
          <category> 锐评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 锐评 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中缀表达式计算</title>
      <link href="/posts/508b8581/"/>
      <url>/posts/508b8581/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-基础概念">1. 基础概念</h2><p>栈：<strong>先进后出</strong>的数据结构</p><p>中缀表达式：运算符位于数字之间的表达式，如22+33、1+2*(3+6/2-2)+6</p><p>前提：输入保证除数不为0，且各运算结果都为整数，除了第一个数之外不存在负数</p><h2 id="2-方法">2. 方法</h2><p>需要两个栈：<strong>符号栈symbol</strong>和<strong>数值栈number</strong>，顾名思义用来存运算符和运算数</p><p>输入：表达式的长度n和表达式的字符序列</p><p>输出：运算结果</p><p>过程：根据各个符号进行操作，然而<font color="orangered">每个符号对应的操作内容都是相同</font>的，因此可以自定义一个符号函数，再用<font color="orangered">if语句设置每个符号的执行条件</font>即可</p><ol><li><p>用string类型记录表达式中的字符</p></li><li><p>循环遍历字符串，分析各个字符的情况</p></li><li><p>若是数字字符（ASCII码在48到57之间）</p><ol><li>如果是一位数，直接入数值栈，用字符-48即可</li><li>如果是多位数，用temp记录数值，不断乘10再与下一位相加，直到遇到非数字字符</li></ol></li><li><p>若是符号字符</p><ol><li>如果是’ ( '，则直压入符号栈</li><li>如果是’ ) ‘，调用”符号函数”，直到遇到’ ( ‘，并最后弹出’ ( ’</li><li>如果是加减号，调用“符号函数”，直到符号栈为空或遇到’ ( ’</li><li>如果是乘除号，调用“符号函数”，直到符号栈为空或符号栈顶非乘除号</li></ol></li><li><p>遍历完字符串后，将符号栈剩余的元素依次调用“符号函数”，直到符号栈为空</p></li><li><p>最后数值栈的栈顶元素即为中缀表达式的运算结果</p></li></ol><h2 id="3-符号函数">3. 符号函数</h2><ol><li>无返回值，传参为两个栈symbol和number</li><li>首先得到数值栈头部两个元素num1，num2</li><li>其次用switch-case结构分支符号栈顶元素对应的不同运算操作，即基本的加减乘除，得到运算结果</li><li>最后弹出符号栈的栈顶元素和数值栈的两个栈顶元素，同时压入计算结果到数值栈中</li></ol><h2 id="4-注意事项">4. 注意事项</h2><ul><li>注意符号栈为空的判断条件要置于首位，防止发生下溢情况</li><li>传参也必须声明stack的数据类型<int>或<char></li><li>由于要对传参内容进行修改，需要设置为引用</li></ul><h2 id="5-代码">5. 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//中缀表达式的运算，保证除数不为0且商为整数，除了第一个数不存在负数 </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//符号判断，将一个符号栈顶和两个数值栈顶弹出，得到运算结果压入数值栈 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fuhao</span><span class="params">(stack&lt;<span class="type">char</span>&gt; &amp;sym,stack&lt;<span class="type">int</span>&gt; &amp;num)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> num1 = num.<span class="built_in">top</span>();</span><br><span class="line">num.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">int</span> num2 = num.<span class="built_in">top</span>();</span><br><span class="line">num.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">int</span> temp;</span><br><span class="line">    <span class="keyword">switch</span> (sym.<span class="built_in">top</span>())&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span> : temp = num2 + num1; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span> : temp = num2 - num1; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span> : temp = num2 * num1; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span> : temp = num2 / num1; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> : <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sym.<span class="built_in">pop</span>();</span><br><span class="line">    num.<span class="built_in">push</span>(temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    stack&lt;<span class="type">char</span>&gt; symbol;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; number;</span><br><span class="line">number.<span class="built_in">push</span>(<span class="number">0</span>);<span class="comment">// 用来应对第一个数是负数的情况 </span></span><br><span class="line">    <span class="type">int</span> len = s.<span class="built_in">length</span>();</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; len)&#123;</span><br><span class="line">    <span class="comment">// 如果是数值，压入数值栈，注意多位数该如何表示 </span></span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt; <span class="number">47</span> &amp;&amp; s[i] &lt; <span class="number">58</span>)&#123;</span><br><span class="line">            <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (s[i] &gt; <span class="number">47</span> &amp;&amp; s[i] &lt; <span class="number">58</span>)&#123;</span><br><span class="line">                temp = temp*<span class="number">10</span> + s[i] - <span class="number">48</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            number.<span class="built_in">push</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// 左括号直接压入符号栈 </span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">            symbol.<span class="built_in">push</span>(s[i]);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// 右括号判断符号，直到遇到左括号 </span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">fuhao</span>(symbol,number);</span><br><span class="line">                <span class="keyword">if</span> (symbol.<span class="built_in">top</span>() == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            symbol.<span class="built_in">pop</span>();</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// +-判断符号，直到遇到栈为空或者左括号 </span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;+&#x27;</span> || s[i] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (symbol.<span class="built_in">empty</span>() || symbol.<span class="built_in">top</span>() == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">fuhao</span>(symbol,number);</span><br><span class="line">&#125;</span><br><span class="line">symbol.<span class="built_in">push</span>(s[i]);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// */判断符号，直到遇到栈为空或者非*/号 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;*&#x27;</span> || s[i] == <span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (symbol.<span class="built_in">empty</span>() || (symbol.<span class="built_in">top</span>() != <span class="string">&#x27;*&#x27;</span> &amp;&amp; symbol.<span class="built_in">top</span>() != <span class="string">&#x27;/&#x27;</span>) )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">fuhao</span>(symbol,number);</span><br><span class="line">&#125;</span><br><span class="line">symbol.<span class="built_in">push</span>(s[i]);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将符号栈剩余的符号判断 </span></span><br><span class="line">    <span class="keyword">while</span> (!symbol.<span class="built_in">empty</span>())</span><br><span class="line">    <span class="built_in">fuhao</span>(symbol,number);</span><br><span class="line">    <span class="comment">//最后数值栈顶为中缀表达式运算结果 </span></span><br><span class="line">    cout &lt;&lt; number.<span class="built_in">top</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-参考文献">6.参考文献</h2><p><a href="https://blog.csdn.net/waldeinNJU/article/details/108446855">https://blog.csdn.net/waldeinNJU/article/details/108446855</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Engilsh：美剧《良医》中的惯用语</title>
      <link href="/posts/525027f6/"/>
      <url>/posts/525027f6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><ul><li>defy the odds战胜困难</li><li>immature and unreasonable不成熟的且不合理的</li><li>real horse’s ass真是个畜生</li><li>vibrant充满活力的</li><li>a reckless disregard for life对生命的鲁莽忽视</li><li>a product of youth年轻的后果</li><li>but either way但无论如何</li><li>have to err on the side of不得不在…方面犯错</li><li>you want nothing to do with me你不会想和我扯上任何关系</li><li>gonna let you off放你一马</li><li>a real piece of work 混蛋一个</li><li>it will have to be enough这就够了</li><li>like you did once upon a time像你曾经做的那样</li><li>take the easy way out走捷径</li><li>frail虚弱的</li><li>ASAP尽快</li><li>keep it between us别让别人知道</li><li>should back off for a while应该离开一会儿</li><li>it’s all moot都是徒劳</li><li>save me the troubles of announcing省去了通知的麻烦</li><li>a narrow win险胜</li><li>no wonder you both failed at it难怪你们都失败了</li><li>is reluctant to feel vulnerable不愿意感到软弱的</li><li>that is my take这是我的看法</li><li>condescending,insulting,annoying优越的，无礼的，讨厌的</li><li>both drop the ball掉链子，错失良机</li><li>carrot诱人的承诺</li><li>asshats混蛋</li><li>take it under advisement仔细考虑一下</li><li>cloud your judgement干扰你的判断</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运输层</title>
      <link href="/posts/bbea855c/"/>
      <url>/posts/bbea855c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-运输层功能">1. 运输层功能</h2><ul><li>进程间的逻辑通信：屏蔽了底层细节，使得应用进程可以像直接通信一样交换数据</li><li>多路复用：通过端口号，将多个应用进程的数据通过同一个运输层协议传输到网络层</li><li>多路分用：通过端口号，将从网络层接收到的数据分发到正确的应用进程</li><li>差错检测：检测数据在传输过程中是否发生错误，从而确保传输的可靠性</li><li>流量控制：确保发送方的发送速率与接收方的处理能力相匹配，从而避免数据丢失和网络拥塞</li></ul><div class="note success flat"><p>类比</p><ul><li>应用层报文 = 信件</li><li>进程 = 家庭成员</li><li>主机 = 家庭</li><li>运输层协议 = 家庭代表</li><li>网络层协议 = 邮政服务</li></ul><p>理解</p><ul><li>有两个家庭A和B，家庭成员之间需要通过信件互相通信，家庭A指派成员a作为家庭代表，家庭B指派成员b作为家庭代表，负责收集全部家庭成员的信去发送，同时将接收到的信分发给各个家庭成员，信件则通过邮政服务实现家庭到家庭之间的传递</li><li>a和b都是在各自的家庭进行工作的，并没有参与邮政服务的工作，因此运输层协议只是工作在端系统中</li><li>邮政服务提供的是家庭到家庭之间的信件传递，对应于主机间的逻辑通信；a和b提供的是A家庭成员和B家庭成员之间的信件传递，对应于进程间的逻辑通信</li></ul></div> <p><strong>端到端原则</strong>：是计算机网络设计中的一种设计哲学，强调将网络的功能应该尽可能放在网络端点（发送端和接收端），而不是放在网络核心（路由器、交换机）</p><ul><li><strong>简化网络设计</strong>：降低了网络设备的复杂性，提高了网络的可靠性和可维护性</li><li><strong>提高灵活性</strong>：应用程序可以根据自身需求在端点实现特定的功能</li><li><strong>增强可扩展性</strong>：新的应用和服务可以在不修改网络核心的情况下部署</li></ul><div class="note info flat"><p>实际上，发送端和接收端代表的就是应用层协议和运输层协议，路由器和交换机代表的就是网络层协议和链路层协议</p></div><h2 id="2-运输层寻址">2. 运输层寻址</h2><p>端口号（port）：用于标识主机上的特定应用进程，使得数据能够正确地分发到目标进程，是一个16位的整数，范围是0到65535</p><ul><li>知名端口：0到1023，分配给系统或知名服务使用，如http使用80</li><li>注册端口：1024到49151，分配给用户或应用程序使用，如mysql使用3306</li><li>动态端口：49152到65535，分配给客户端进程使用，通常用于短暂的通信</li></ul><div class="note warning flat"><p>TCP 和 UDP 的端口号空间是分开的，同一个端口号可以同时用于 TCP 和 UDP，而不会冲突</p></div><p>套接字（socket）：由IP地址和端口号组成，用于唯一标识网络中的一个通信端点，是用户层与运输层之间的接口，是从网络向进程传递数据和从进程向网络传递数据的通道</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856574.png" alt=""></p><h2 id="3-UDP">3. UDP</h2><h3 id="3-1-UDP-性质">3.1 UDP 性质</h3><ul><li><strong>无连接的</strong>：发送方和接收方之间无须建立连接，发送方将数据报传递给网络层之后就不再关心</li><li><strong>不可靠的</strong>：不保证数据是否到达接收方，也不在乎数据是否出现差错</li><li><strong>最简单的</strong>：不提供拥塞控制和差错修复，不会拆分报文，只是给报文添加一个UDP首部就作为数据报提交给网络层</li><li><strong>无长度限制</strong>：UDP数据报的长度完全由发送方应用进程决定，UDP协议不会限制分组大小</li></ul><div class="note warning flat"><p>数据报特指无连接的报文段<br>虽然UDP协议不会限制数据包大小，但是网络层中的IP协议会限制数据包大小</p></div><p>UDP 优势：适用于快速一次性传输少量数据，如 DNS</p><ul><li><strong>低延迟</strong>：不会引入建立连接的时延，也不会消耗额外资源来维护连接</li><li><strong>轻量级</strong>：UDP仅有8字节首部</li></ul><p>UDP劣势：<strong>缺乏拥塞机制</strong>，UDP 不会因为网络拥堵而减缓发送速率，因此会进一步造成网络拥堵，甚至<strong>挤垮TCP会话</strong></p><div class="note success flat"><p>如果 DNS 使用 TCP，那么每秒成万上亿个 DNS 请求都需要建立连接，会严重占用宽带<br>虽然 UDP 不可靠，但是可以依赖于应用层的可靠协议，如 DNS 请求一旦发现失败，则会反复尝试</p></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856575.png" alt=""></p><h3 id="3-2-UDP-首部">3.2 UDP 首部</h3><p>4个字段：每个字段2字节</p><ul><li>源端口号：标识发送进程</li><li>目的端口号：标识接收进程</li><li>长度：整个数据报长度，即首部+数据的字节数</li><li>检验和：验证数据在传输过程中是否发生了错误</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856576.png" alt=""></p><p>检验和流程</p><ol><li>构造伪头部：将源 IP 地址、目标 IP 地址、协议字段和 UDP 长度组合成伪头部</li><li>拼接数据：将伪头部、UDP 头部和数据部分拼接在一起</li><li>计算检验和<ol><li>将拼接后的数据按 16 位（2 字节）分组</li><li>对所有 16 位分组进行二进制回卷求和</li><li>将求和结果的二进制反码作为检验和</li></ol></li><li>存储检验和：发送方将计算得到的检验和存储到 UDP 头部的检验和字段中</li><li>检查检验和：接收方在收到 UDP 数据报后，按照相同的步骤计算检验和，如果得到的检验和为 0，说明数据在传输过程中没有发生错误，否则发生错误直接丢弃该数据报</li></ol><div class="note warning flat"><p>伪首部只是拿来计算检验和，并不会用于实际传输<br>只能检测出奇数个比特差错，而且无法进行差错定位和差错修复</p></div><h2 id="4-可靠数据传输原理">4. 可靠数据传输原理</h2><h3 id="4-1-可靠数据传输协议">4.1 可靠数据传输协议</h3><h4 id="4-1-1-基本概念">4.1.1 基本概念</h4><p>可靠：没有<strong>数据损坏和数据丢失</strong>，并且数据<strong>按发送顺序</strong>进行交付</p><div class="note warning flat"><p>可靠信道是运输层给应用层提供的抽象服务，实际上是通过较低层的不可靠信道传输，经过运输层的处理后才变得可靠</p></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856577.png" alt=""></p><p>基本函数</p><table><thead><tr><th>函数名</th><th>调用者</th><th>作用</th></tr></thead><tbody><tr><td><code>rdt_send(data)</code></td><td>应用层</td><td>指示运输层发送方从应用层中获取数据</td></tr><tr><td><code>rdt_rcv(packet)</code></td><td>网络层</td><td>指示运输层接收方从网络层获取分组</td></tr><tr><td><code>make_pkt(data)</code></td><td>运输层发送方</td><td>将数据加上首部封装成分组</td></tr><tr><td><code>extract(packet, data)</code></td><td>运输层接收方</td><td>从分组中取出数据</td></tr><tr><td><code>udt_send(packet)</code></td><td>运输层发送方</td><td>将分组发送到网络层</td></tr><tr><td><code>deliver_data(data)</code></td><td>运输层接收方</td><td>将数据交付给应用层</td></tr></tbody></table><p>有限状态机（Finite-State Machine,FSM）：由<strong>状态、状态转移、事件和操作</strong>组成</p><ul><li>圆：状态</li><li>箭头：状态转移，取决于事件和操作</li><li>横线上方：引起状态转移的事件</li><li>横线下方：实现状态转移的操作</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Λ</mi></mrow><annotation encoding="application/x-tex">\Lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Λ</span></span></span></span>：空，表示没有事件或没有操作</li></ul><h4 id="4-1-2-rdt1-0">4.1.2 rdt1.0</h4><p>rdt1.0：<strong>底层信道是完全可靠，不需要进行差错检测和修复</strong></p><table><thead><tr><th>状态</th><th>事件</th><th>操作</th><th>状态转移</th></tr></thead><tbody><tr><td>发送端等待调用</td><td>应用层调用</td><td>封装分组并发送</td><td>转移到自身</td></tr><tr><td>接收端等待调用</td><td>网络层调用</td><td>提取数据，交付应用层</td><td>转移到自身</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856578.png" alt=""></p><h4 id="4-1-3-rdt2-x">4.1.3 rdt2.x</h4><h4 id="4-1-4-rdt-2-0">4.1.4 rdt.2.0</h4><p><strong>自动重传协议（Automatic Repeat reQuest,ARQ）</strong></p><ul><li>检测：发送方会将检测字段封装进分组中，接收方会根据检测字段进行差错检测</li><li>反馈：<strong>肯定确认（positive acknowledgement,ACK）</strong>，<strong>否定确认（negative acknowledgement,NCK）</strong>，接收方需要向发送方发送ACK分组或NCK分组</li><li>重传：接收方接收到NCK分组后，需要重传该分组</li></ul><p><strong>停等协议（stop-and-wait）</strong>：发送方不会发送新分组，直到发送方收到来自接收方的肯定确认</p><p>rdt2.0：实现了差错检测，接收方通过ACK和NAK告知发送方分组情况</p><table><thead><tr><th>函数名</th><th>调用者</th><th>作用</th></tr></thead><tbody><tr><td><code>isNAK(rcvpkt)和isACK(rcvpkt)</code></td><td>运输层发送方</td><td>判断发送的分组是否被正确接收</td></tr><tr><td><code>notcorrupt(rcvpkt)和corrupt(rcvpkt)</code></td><td>运输层接收方</td><td>判断接收的分组是否有差错</td></tr></tbody></table><p>发送端</p><table><thead><tr><th>状态</th><th>事件</th><th>操作</th><th>状态转移</th></tr></thead><tbody><tr><td>等待调用</td><td>应用层调用</td><td>封装分组并发送</td><td>转移到“等待确认”</td></tr><tr><td>等待确认</td><td>接收ACK</td><td>不执行任何操作</td><td>转移到“等待调用”</td></tr><tr><td>等待确认</td><td>接收NAK</td><td>重传分组</td><td>转移到自身</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856579.png" alt=""></p><p>接收端</p><table><thead><tr><th>状态</th><th>事件</th><th>操作</th><th>状态转移</th></tr></thead><tbody><tr><td>等待调用</td><td>分组没有差错</td><td>提取数据，交付应用层，发送ACK</td><td>转移到自身</td></tr><tr><td>等待调用</td><td>分组出现差错</td><td>发送NAK</td><td>转移到自身</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856580.png" alt=""></p><h4 id="4-1-5-rdt-2-1">4.1.5 rdt.2.1</h4><p>rdt2.0的局限性：没有考虑到ACK或NAK分组受损的可能性</p><p>不合适的处理方案</p><table><thead><tr><th>方案</th><th>情况</th><th>结果</th></tr></thead><tbody><tr><td>发送方利用新分组询问接收方</td><td>新分组也有可能差错</td><td><strong>无限循环确认</strong></td></tr><tr><td>发送方可以修复差错</td><td>需要增加足够的检验和比特</td><td><strong>首部过大</strong></td></tr><tr><td>发送方重传分组</td><td>可能在ACK的情况下依旧重传</td><td><strong>冗余分组</strong></td></tr></tbody></table><p>rdt2.1：让发送方对分组进行编号，将序号封装在首部字段，接收方仅需要根据序号就可以判断当前分组是否是冗余分组</p><table><thead><tr><th>函数名</th><th>调用者</th><th>作用</th></tr></thead><tbody><tr><td><code>has_seq1(rcvpkt)和has_seq0(rcvpkt)</code></td><td>运输层接收方</td><td>确认当前分组的序号</td></tr><tr><td><code>notcorrupt(rcvpkt)和corrupt(rcvpkt)</code></td><td>运输层接收方和运输层发送方</td><td>判断接收的分组是否有差错</td></tr></tbody></table><p>发送端</p><table><thead><tr><th>状态</th><th>事件</th><th>操作</th><th>状态转移</th></tr></thead><tbody><tr><td>0号等待调用</td><td>应用层调用</td><td>封装0号分组并发送</td><td>转移到“0号等待确认”</td></tr><tr><td>0号等待确认</td><td>接收NAK或者分组出现出错</td><td>重传0号分组</td><td>转移到自身</td></tr><tr><td>0号等待确认</td><td>接收ACK并且分组没有出错</td><td>不执行任何操作</td><td>转移到“1号等待调用”</td></tr><tr><td>1号等待调用</td><td>应用层调用</td><td>封装1号分组并发送</td><td>转移到“1号等待确认”</td></tr><tr><td>1号等待确认</td><td>接收NAK或者分组出现出错</td><td>重传1号分组</td><td>转移到自身</td></tr><tr><td>1号等待确认</td><td>接收ACK并且分组没有出错</td><td>不执行任何操作</td><td>转移到“0号等待调用”</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856581.png" alt=""></p><p>接收端</p><table><thead><tr><th>状态</th><th>事件</th><th>操作</th><th>状态转移</th></tr></thead><tbody><tr><td>0号等待调用</td><td>分组出现差错</td><td>发送NAK</td><td>转移到自身</td></tr><tr><td>0号等待调用</td><td>分组没有差错但是收到1号分组</td><td>发送ACK</td><td>转移到自身</td></tr><tr><td>0号等待调用</td><td>分组没有差错并且收到0号分组</td><td>提取数据，交付应用层，发送ACK</td><td>转移到“1号等待调用”</td></tr><tr><td>1号等待调用</td><td>分组出现差错</td><td>发送NAK</td><td>转移到自身</td></tr><tr><td>1号等待调用</td><td>分组没有差错但是收到0号分组</td><td>发送ACK</td><td>转移到自身</td></tr><tr><td>1号等待调用</td><td>分组没有差错并且收到1号分组</td><td>提取数据，交付应用层，发送ACK</td><td>转移到“0号等待调用”</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856582.png" alt=""></p><h4 id="4-1-6-rdt2-2">4.1.6 rdt2.2</h4><p>rdt2.2：与rdt2.1的唯一差别在于ACK和NAK也封装了序号</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856583.png" alt=""></p><h4 id="4-1-7-rdt3-0">4.1.7 rdt3.0</h4><p>rdt2.x的局部性：如果分组丢失，那么发送方和接收方都无法做出响应来处理</p><p>rdt3.0：采用基于时间的重传机制</p><ul><li>重传：从发送方的观点来看，只要能处理好冗余分组，<strong>重传是一种万能的方案</strong></li><li>基于时间：依靠<strong>倒计时定时器（countdown timer）</strong><ul><li><strong>启动</strong>：每次发送一个分组都需要启动倒计时定时器</li><li><strong>中断</strong>：如果在指定时间量内没有得到肯定确认中断倒计时定时器，并重传分组</li><li><strong>重置</strong>：如果在指定时间量内得到肯定确认，重置倒计时定时器</li></ul></li></ul><p>发送端</p><table><thead><tr><th>状态</th><th>事件</th><th>操作</th><th>状态转移</th></tr></thead><tbody><tr><td>0号等待调用</td><td>应用层调用</td><td>封装0号分组并发送，启动定时器</td><td>转移到“0号等待确认”</td></tr><tr><td>0号等待确认</td><td>接收1号ACK或者分组出现出错</td><td>不执行任何操作</td><td>转移到自身</td></tr><tr><td>0号等待确认</td><td>超时</td><td>重传0号分组，启动定时器</td><td>转移到自身</td></tr><tr><td>0号等待确认</td><td>接收0号ACK并且分组没有出错</td><td>中断计时器</td><td>转移到“1号等待调用”</td></tr><tr><td>1号等待调用</td><td>应用层调用</td><td>封装1号分组并发送，启动定时器</td><td>转移到“1号等待确认”</td></tr><tr><td>1号等待确认</td><td>接收0号ACK或者分组出现出错</td><td>不执行任何操作</td><td>转移到自身</td></tr><tr><td>1号等待确认</td><td>超时</td><td>重传1号分组，启动定时器</td><td>转移到自身</td></tr><tr><td>1号等待确认</td><td>接收1号ACK并且分组没有出错</td><td>中断计时器</td><td>转移到“0号等待调用”</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856584.png" alt=""></p><p><strong>比特交替协议（alternating-bit）</strong>：分组序号在0和1之间交替</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856585.png" alt=""></p><div class="note warning flat"><p><strong>rdt3.0/一对一确认/停等协议的局限性：吞吐量非常低！</strong><br>假设可用吞吐量R=1Gbps，RTT=30ms，分组长L=8000bits，忽略ACK的发送时延<br>发送方相邻两个分组的发送间隔是RTT+L/R=30.008ms<br>实际吞吐量为8000bits/30.008ms≈267kbps<br>宽带利用率只有可怜的267kbps/1Gbps=0.0267%（这还是在分组没有任何差错，不考虑协议处理时间，路由器的排队时延的情况下）</p></div><h3 id="4-2-流水线传输协议">4.2 流水线传输协议</h3><h4 id="4-2-1-流水线技术">4.2.1 流水线技术</h4><p>流水线技术：<strong>允许发送方在一定限度内发送多个分组而无需等待每个分组来自接收方的ACK</strong></p><ul><li>增加序号范围：跟踪多个分组，<strong>每个分组具有唯一序号</strong></li><li>滑动窗口机制：<strong>发送方需要缓存尚未确认的分组以便重传，接收方也需要缓存尚未排序分组以便按顺序交付</strong></li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856535.png" alt=""></p><h4 id="4-2-2-回退N步">4.2.2 回退N步</h4><p><strong>回退N步协议（Go-Back-N, GBN）</strong>：假设发送方有缓存，而接收方没有缓存</p><ul><li>窗口大小（N）：发送方窗口所能容纳的最大分组数</li><li>初始序号（startSeq）：传输的第一个分组的序号</li><li>发送方基序号（base）：最小未确认分组的序号</li><li>下一个序号（nextS e q）：最小未发送分组的序号</li><li>窗口长度（window size）：发送缓冲区大小</li><li>接收方期望序号（expectSeq）：接收方期望收到分组的序号</li></ul><div class="note warning flat"><p>注意如果超过了最大序号，需要进行取模运算</p></div><p>序号范围</p><ul><li>[0,base-1]：已经发送且已经被确认的分组</li><li>[base,nextSeq-1]：已经发送但还没有被确认的分组</li><li>[nextSeq,base+N-1]：还没有发送但即将发送的分组</li><li>[base+N,…]：从未进入过发送方缓冲区的分组</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856536.png" alt=""></p><p>GBN实现手段</p><ul><li><strong>窗口判断</strong>：如果<code>nextSeq == base + N</code>，则窗口已满</li><li><strong>累积确认</strong>：接收方不会发送NAK只会发送ACK，表示已经成功接收到 [startSeq:expectSeq] 的所有分组</li><li><strong>超时记录</strong>：发送方使用一个定时器，用来记录 base 的等待时间</li><li><strong>失序丢弃</strong>：接收方会丢弃一个正确接收但失序的分组，而不会缓存它</li></ul><div class="note success flat"><p>失序丢弃的可解释性：接收方在期望接收到n的时候接收到了n+1，哪怕接收方缓存了n+1，但是发送方也不知情，因此发送方依旧会在传送n之后再次传送n+1。因此接收方缓存n+1就没有任何意义了</p></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856537.png" alt=""></p><p><strong>GBN流程</strong></p><ul><li>发送方<ul><li>接收到错误ACK：丢弃</li><li>接收到base的ACK：递增 base，重启定时器</li><li>窗口未满：递增nextSeq并发送</li><li>定时器超时：重启定时器，发送 base</li></ul></li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856539.png" alt=""></p><ul><li>接收方<ul><li>接收到错误数据：丢弃</li><li>接收到正确数据，且 seq != expectSeq + 1：发送 expectSeq 的 ACK</li><li>接收到正确数据，且 seq == expectSeq + 1：递增 expectSeq 并发送 expectSeq 的 ACK</li></ul></li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856540.png" alt=""></p><p>GBN协议的局限性：发送方必须<strong>从出错的分组开始重新发送所有后续分组</strong>，这可能导致大量无用数据的重传，特别是在高丢包率的网络中，带宽利用率会降低</p><h4 id="4-2-3-选择重传">4.2.3 选择重传</h4><p><strong>选择重传协议（Selective Repeat, SR）</strong>：假设发送方和接收方都有缓存</p><ul><li>发送方需要标记发送窗口中哪些分组已经被确认</li><li>接收方需要标记接收窗口中哪些分组已经被接受</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856541.png" alt=""></p><p>发送方</p><ul><li>接收到 send_base 的 ACK，且窗口内存在分组还未被确认，send_base 更新为窗口中最近未被确认的分组序号，并重启计数器</li><li>接收到 send_base 的 ACK，且窗口内全部分组都被确认，send_base = send_base + N，并重启计数器</li><li>接收到 seq &gt; send_base 的 ACK，如果 seq 在发送窗口内，标记窗口中该分组为已确认</li><li>计数器超时，重传 send_base 分组，重启计数器</li></ul><p>接收方</p><ul><li>接收到 recv_base 分组，且窗口内存在分组还未收到，recv_base 更新为窗口中最近未收到的分组序号</li><li>接收到 recv_base 分组，且窗口内全部分组都收到，recv_base = recv_base + N</li><li>接收到 seq &gt; recv_base 分组，如果 seq 在接收窗口内，缓存该分组</li><li>接收到 seq &lt; recv_base 之前的分组，忽略该分组，并发送该分组的 ACK</li></ul><p>窗口尺寸问题</p><ul><li>过小：可发送/可接收的分组太少了，导致<strong>带宽利用率低</strong></li><li>过大：缓存大量乱序分组或未确认分组，需要<strong>消耗更多内存</strong></li><li>序号重叠：窗口尺寸接近或超过序号空间的一半，可能会导致序号重复使用，从而导致接收方无法区分新旧分组，造成协议错乱</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856542.png" alt=""></p><h2 id="5-TCP">5. TCP</h2><h3 id="5-1-TCP-性质">5.1 TCP 性质</h3><ul><li><strong>面向连接的</strong>：在发送数据之前，通信的两端需要建立一个逻辑连接</li><li><strong>面向字节的</strong>：TCP将数据看成字节流的形式</li><li><strong>全双工的</strong>：通信两端都可以接收和发送数据，且两个方向的数据传输可以同时进行，互不干扰</li><li><strong>点对点的</strong>：每一条连接只能连接两个端点，不存在第三方</li><li><strong>可靠的</strong>：保证传送的数据<strong>无差错、不丢失、不重复、有序</strong></li><li><strong>有长度限制</strong>：根据接收方的缓存情况和网络拥塞情况来决定TCP报文段长度</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856545.png" alt=""></p><h3 id="5-2-TCP-首部">5.2 TCP 首部</h3><table><thead><tr><th>字段</th><th>长度/bit</th><th>作用</th></tr></thead><tbody><tr><td>源端口号（Resource Port）</td><td>16</td><td>标识数据传输的起始端点</td></tr><tr><td>目的端口号（Destination Port）</td><td>16</td><td>标识数据传输的终止端点</td></tr><tr><td>序号（Sequence Number）</td><td>32</td><td>标识TCP数据流中的字节顺序</td></tr><tr><td>确认号（Acknowledgement Number）</td><td>32</td><td>标识下一个期望接收的字节序号</td></tr><tr><td>首部长度（Header Length）</td><td>4</td><td>指示TCP头部长度，以32位字为单位</td></tr><tr><td>保留区域（Reserved）</td><td>4</td><td>保留，可能会在未来的协议扩展中有新的用途</td></tr><tr><td>减少拥塞窗口（CWR）</td><td>1</td><td>发送方用于确认它已经响应了网络拥塞，调整了其拥塞窗口</td></tr><tr><td>显式拥塞通知（ECE）</td><td>1</td><td>接收方用于通知发送方网络发生了拥塞</td></tr><tr><td>标志（Flags）</td><td>6</td><td>控制位，标识特殊功能</td></tr><tr><td>接收窗口（Window）</td><td>16</td><td>指定接收方的缓存区域大小</td></tr><tr><td>检验和（Checksum）</td><td>16</td><td>检验报文段在传输过程中是否出错</td></tr><tr><td>紧急指针（Urgent Pointer）</td><td>16</td><td>指示紧急数据在数据流中的位置</td></tr><tr><td>选项（Options）</td><td>可变</td><td>用于传输协议的扩展功能</td></tr><tr><td>填充（Pad）</td><td>可变</td><td>因为选项可变，因此需要填充来确保首部长度是4B的整数倍</td></tr><tr><td>有效载荷（Payload）</td><td>可变</td><td>实际传输的数据</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856544.png" alt=""></p><p>标志（按顺序）</p><ul><li><strong>URG（Urgent）</strong>：指示报文段中包含紧急数据，接收方应优先处理</li><li><strong>ACK（Acknowledgement）</strong>：指示已成功接收数据</li><li><strong>PSH（Push）</strong>：指示接收方应尽快将数据交付到应用程序，而不是等待缓冲区满</li><li><strong>RST（Reset）</strong>：指示发送方强行终止TCP连接</li><li><strong>SYN（Synchronize）</strong>：指示发送方请求建立TCP连接</li><li><strong>FIN（Finish）</strong>：指示发送方请求断开TCP连接</li></ul><p>序号和确认号</p><ul><li>序号：是当前主机发送报文段的首字节编号</li><li>确认号：是当前主机期望接收到来自另一方的字节编号</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856546.png" alt=""></p><h3 id="5-3-连接控制">5.3 连接控制</h3><h4 id="5-3-1-三次握手">5.3.1 三次握手</h4><p>三次握手流程</p><ol><li>客户端向服务器发送SYN报文段，seq=client_isn，ack=0</li><li>服务器向客户端发送SYN-ACK报文段，seq=server_isn，ack=client_isn+1，为TCP连接分配缓存和变量</li><li>客户端向服务器发送ACK报文段，seq=client_isn+1，ack=server_isn+1，为TCP连接分配缓存和变量</li></ol><div class="note warning flat"><p>SYN报文段和SYN-ACK报文段即使不带任何数据，也会消耗一个序号<br>client_isn和server_isn都是随机选择的</p></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856556.png" alt=""></p><p>为什么需要三次握手？</p><ul><li>第一次握手表示<strong>客户端请求建立连接</strong></li><li>第二次握手表示<strong>服务器同意建立连接</strong></li><li>第三次握手表示<strong>连接已经成功建立</strong></li></ul><div class="note info flat"><p>SYN洪泛攻击：攻击者只进行第一次握手，但不完成第三次握手，让服务器维持半开连接状态，从而耗尽服务器的资源，使其无法处理合法请求</p></div><h4 id="5-3-2-四次挥手">5.3.2 四次挥手</h4><p>四次握手流程</p><ol><li>客户端向服务器发送FIN报文段，seq=x，ack=y</li><li>服务器向客户端发送ACK报文段，seq=y+1，ack=x+1</li><li>服务器继续发送还未发送的报文段（可能没有）</li><li>服务器向客户端发送FIN报文段，seq=z，ack=x+1</li><li>客户端向服务器发送ACK报文段，seq=x+1，ack=z+1</li></ol><div class="note warning flat"><ul><li>FIN报文段即使不带任何数据，也会消耗一个序号</li><li>x、y、z是先前传输的最后一个字节编号+1</li></ul></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856557.png" alt=""></p><p>TCP 客户的两个特殊阶段</p><ul><li>FIN_WAIT_2阶段：客户端继续接收服务器可能还未传输完的数据，并等待来自服务器的 FIN 报文段</li><li>TIME_WAIT阶段：如果客户端返回的最后一个 ACK 丢失，服务器会重传 FIN 报文段，因此实际上客户端还需要等待 2个最长报文段存活时间（Maximum Segment Lifetime, MSL），才能确保 TCP 连接完全关闭</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856558.png" alt=""></p><h4 id="5-3-3-终止连接">5.3.3 终止连接</h4><p>终止连接流程</p><ol><li>当一方检测到连接异常时，会发送一个 RST 报文段</li><li>接收方收到 RST 报文段后，会立即终止连接，不再进行任何数据传输</li></ol><p>适用情况</p><ul><li><strong>异常连接</strong>：服务器接收到一个无效的或不期望的报文段，例如客户端试图访问一个没有在服务器上监听的端口，或者在连接过程中发送了错误格式的报文段</li><li><strong>拒绝连接</strong>：服务器收到非法的连接请求，例如客户的连接请求未被授权，该端口不允许被访问，或需要额外的安全检查</li><li><strong>重置连接</strong>：一个已经建立的连接变得无效或异常，例如由于网络故障或应用程序错误，连接需要被强制关闭</li></ul><h3 id="5-4-差错控制">5.4 差错控制</h3><h4 id="5-4-1-累计确认">5.4.1 累计确认</h4><ol><li>发送方发送seq=92的分组</li><li>接收方成功接收到了seq=92的分组，由于分组长为8，因此返回ack=100</li><li>发送方发送seq=100的分组</li><li>接收方成功接收到了seq=100的分组，由于分组长为20，因此返回ack=120</li><li>发送方虽然没有收到ack=100，但是在seq=92的超时间隔内，收到了ack=120，因此发送方可以确定接收方已经接收到了120之前的所有数据，否则ack不可能是120</li></ol><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856552.png" alt=""></p><div class="note success flat"><p><strong>实际上，传统TCP没有使用选择重传机制，而是在GBN协议上进行拓展</strong></p></div><h4 id="5-4-2-动态调整超时间隔">5.4.2 动态调整超时间隔</h4><p><strong>采样往返时间（SampleRTT）</strong>：从发送一个 TCP 报文段到收到其 ACK 所花费的实际时间</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>=</mo><msub><mi>t</mi><mrow><mi>a</mi><mi>c</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>t</mi><mrow><mi>s</mi><mi>e</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">SampleRTT=t_{ack} − t_{send}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">am</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">se</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><strong>均值往返时间（EstimatedRTT）</strong>：对采样 RTT 进行平滑处理后的估计值，用于反映网络的长期 RTT 趋势，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>是平滑因子，通常取 0.125</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><mi>α</mi><mo>⋅</mo><mi>S</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>R</mi><mi>T</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">EstimatedRTT = (1-\alpha) \cdot EstimatedRTT + \alpha \cdot SampleRTT</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ima</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ima</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">am</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span></span></span></span></span></p><p><strong>偏差往返时间（DevRTT）</strong>：是采样 RTT 与均值 RTT 的偏差，用于衡量 RTT 的波动情况，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span>是平滑因子，通常取 0.25</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>e</mi><mi>v</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>D</mi><mi>e</mi><mi>v</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><mi>β</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi>S</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>−</mo><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">DevRTT = (1-\beta) \cdot DevRTT + \beta \cdot |SampleRTT-EstimatedRTT|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">am</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ima</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mord">∣</span></span></span></span></span></p><p><strong>超时重传时间（Retransmission Time-Out, RTO）</strong>：指示了发送方在未收到确认时理应等待重传的时间长度，如果太小致不必要的重传，如果太大导致时延变大</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>T</mi><mi>O</mi><mo>=</mo><mi>E</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><mn>4</mn><mo>⋅</mo><mi>D</mi><mi>e</mi><mi>v</mi><mi>R</mi><mi>T</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">RTO = EstimatedRTT + 4 \cdot DevRTT</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">RTO</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ima</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.13889em;">RTT</span></span></span></span></span></p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856547.png" alt=""></p><h4 id="5-4-3-快速重传">5.4.3 快速重传</h4><p>TCP接收方的行为</p><ul><li>接收到顺序报文段：发送累计ACK</li><li>接收到出错报文段：发送冗余ACK</li><li>接收到乱序报文段：发送冗余ACK</li><li>接收到重复报文段：发送冗余ACK</li><li>短时间内接收到大量顺序报文段：延迟发送累积ACK</li></ul><p>快速重传：可以发现，上述三种异常情况都是发送冗余ACK，因此如果TCP发送方接收到<strong>3个冗余ACK</strong>，则可以认为该ACK所期望的报文段已经丢失，发送方就会立即重传该报文段，而不会等待超时</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856554.png" alt=""></p><h3 id="5-5-流量控制">5.5 流量控制</h3><p>意义：防止发送方发送数据过快，导致<strong>接收方缓冲区溢出</strong></p><p>发送方维护一个接收窗口（rwnd）</p><ul><li>接收方：通过 TCP 头部的<strong>窗口字段</strong>来通告其当前可用的缓冲区大小</li><li>发送方：根据接收方的窗口大小<strong>动态调整发送的数据量</strong></li></ul><p>零窗口</p><ol><li>如果接收方的缓冲区已满，接收方会发送一个窗口字段为 0 的 ACK 报文段，通知发送方暂停发送数据</li><li>当发送方收到零窗口通知后，会定期发送<strong>窗口探测报文段</strong>，询问接收方的窗口状态，从而重启发送</li></ol><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856555.png" alt=""></p><h3 id="5-6-拥塞控制">5.6 拥塞控制</h3><h4 id="5-6-1-拥塞">5.6.1 拥塞</h4><p>意义：防止网络中的流量超过了其处理能力，导致<strong>网络性能下降</strong></p><ul><li>带宽不足：发送方发送的数据量超过了链路的带宽容量</li><li>缓冲区溢出：路由器或交换机的缓冲区容量有限，如果数据包到达的速度超过了处理速度，缓冲区会被填满</li><li>流量突发：突发流量可能导致短时间内网络资源被耗尽</li><li>瓶颈链路：流量分布不均匀，可能使用带宽较低的瓶颈链路</li></ul><p><strong>拥塞窗口（cwnd）</strong>：发送方根据网络拥塞状况动态调整的一个窗口，表示在当前网络条件下可以发送的数据量</p><div class="note info flat"><p>发送窗口=min(cwnd,rwnd)，通常情况下，接收窗口远大于拥塞窗口，因此通过调整 cwnd 就可以有效地控制发送速率</p></div><p>指导性原则</p><ul><li><strong>何时减速</strong>：定时器超时、收到三个冗余ACK</li><li><strong>何时加速</strong>：收到正确ACK</li><li><strong>如何变速</strong>：发送方不断执行<strong>带宽探测</strong></li><li><strong>加性增、乘性减（AIMD）</strong>：加速是逐渐增加1个MSS，减小是直接对半砍或重置为1</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856565.png" alt=""></p><p><strong>最大报文段长度（Maximum Segment Size, MSS）</strong>：单个TCP报文段的最大有效载荷大小，不包括TCP头部</p><h4 id="5-6-2-机制">5.6.2 机制</h4><ol><li><strong>慢启动</strong>：设置 cwnd 的初始值是 1 个 MSS，每收到一个 ACK，cwnd 就乘 2</li><li><strong>慢启动阈值</strong>：当慢启动增长到阈值的时候，进入拥塞避免阶段</li><li><strong>拥塞避免</strong>：每收到一个 ACK，cwnd 就加 1</li><li><strong>慢速恢复</strong>：如果发生超时事件，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>s</mi><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi><mo>=</mo><mi>c</mi><mi>w</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi>c</mi><mi>w</mi><mi>n</mi><mi>d</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">ssthresh = cwnd / 2, cwnd = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ss</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">res</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord">/2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，进入慢启动</li><li><strong>快速恢复</strong>：如果收到3个冗余ACK，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>s</mi><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi><mo>=</mo><mi>c</mi><mi>w</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi>c</mi><mi>w</mi><mi>n</mi><mi>d</mi><mo>=</mo><mi>s</mi><mi>s</mi><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi><mo>+</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">ssthresh = cwnd / 2, cwnd = ssthresh + 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ss</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">res</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord">/2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ss</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">res</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>，进入拥塞避免</li></ol><div class="note success flat"><p>既然能够收到冗余ACK，说明不是因为网络拥塞，而是因为某个分组丢失，说明此时路由器<strong>理应具备多传输3个负载数据的报文段的能力，但是却拿来传输冗余ACK了</strong>，所以应该加上3个MSS</p></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301914132.png" alt=""></p><h4 id="5-6-3-算法">5.6.3 算法</h4><p>CUBIC算法：依据当前时间t与预计拥塞时间T的间隔</p><ul><li>t＜T：<strong>当t远离T的时候想要快速恢复，cwnd增长较快；当t接近T的时候变得谨慎，cwnd增长较慢</strong></li><li>t＞T：<strong>当t接近T的时候需要谨慎，cwnd增长较慢；当t远离T的时候想要快速找到新的平衡点，cwnd增长较快</strong></li></ul><table><thead><tr><th>特性</th><th>Tahoe</th><th>Reno</th><th>CUBIC</th></tr></thead><tbody><tr><td>慢启动</td><td>指数增长</td><td>指数增长</td><td>立方型增长</td></tr><tr><td>拥塞避免</td><td>线性增长</td><td>线性增长</td><td>立方型增长</td></tr><tr><td>错误恢复</td><td>慢启动</td><td>超时则慢启动；冗余ACK则快速恢复</td><td>立方型减缓恢复</td></tr><tr><td>适用场景</td><td>一般网络</td><td>一般网络</td><td>高带宽、长延迟网络</td></tr><tr><td>恢复速度</td><td>慢</td><td>较快</td><td>平滑且高效</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856567.png" alt=""></p><h4 id="5-6-4-其他方法">5.6.4 其他方法</h4><p><strong>明确拥塞通告（Explicit Congestion Notification,ECN）</strong>：允许路由器在检测到拥塞时，通过标记数据包头部中的 ECN 标志位，显式地通知发送方和接收方当前网络存在拥塞</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856569.png" alt=""></p><p>基于时延的拥塞控制：通过监测和响应网络延迟来调整数据传输比例，主要<strong>关注时延的变化</strong>而不是关注丢包，目的是为了<strong>保持网络管道的最佳负载状态</strong>，从而避免拥塞和丢包</p><h4 id="5-6-5-公平性">5.6.5 公平性</h4><p>两条共享同一条传输速率为R的瓶颈链路的情况</p><ul><li><strong>全带宽</strong>：两条连接的吞吐量之和为R</li><li><strong>平等带宽</strong>：两条连接的吞吐量相同</li></ul><p>演变过程：在共享同一链路的多条 TCP 连接中，每条连接的发送速率会趋向于全带宽和平等带宽</p><ol><li>在A点时，由于共同消耗的链路带宽小于R，两条连接都以相同的速率线性增长到B点</li><li>在B点时，由于共同消耗的链路带宽大于R，两条连接的吞吐量同时减半到C点</li><li>在C点时，由于共同消耗的链路带宽小于R，两条连接都以相同的速率线性增长到D点</li><li>以此类推，两条连接的带宽最终会收敛到平等带宽共享曲线和全带宽利用曲线的交叉点附近</li></ol><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856571.png" alt=""></p><h2 id="6-QUIC">6. QUIC</h2><p><strong>快速UDP互联网连接（Quick UDP Internet Connections,QUIC）</strong>：是一种基于 UDP 的传输协议，但结合了 TCP、TLS 和 HTTP/2 的优点，旨在提供更快速、更安全的互联网连接</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856572.png" alt=""></p><p>特征</p><ul><li><strong>面向连接</strong>：使用连接ID来标识连接，通过一次握手建立QUIC连接状态</li><li><strong>安全</strong>：在应用层集成了加密机制，减少了传统TLS和TCP握手中的延迟</li><li><strong>流</strong>：允许在一个QUIC连接中管理多个独立的数据流，每个流可以独立进行数据传输和流量控制</li><li><strong>可靠</strong>：提供了类似于TCP的可靠数据传输机制，包括重传丢失的数据包和确保数据的顺序</li><li><strong>拥塞控制</strong>：实现了先进的拥塞控制算法，用于动态调整数据传输速率，以应对网络拥塞情况</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter3/202408301856573.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是数据库</title>
      <link href="/posts/6c5bbf5f/"/>
      <url>/posts/6c5bbf5f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-数据库系统">1. 数据库系统</h2><p>数据（data）：描述事物状态或者属性的符号记录，在特定的语义下成为信息</p><p>数据库(database)：存储数据的仓库</p><ul><li>数据是有组织的</li><li>数据的冗余度小</li><li>数据是需要长期存储的</li><li>数据的独立性较高</li></ul><p>数据库管理系统（Database Management System,DBMS）：由一个互相关联的数据的集合和一组用以访问这些数据的程序组成，是位于用户应用程序与操作系统之间的一层系统软件</p><ul><li>定义：提供数据定义语言，定义数据库结构</li><li>操纵：提供数据操纵语言，实现查询、插入、删除和修改等基本操作</li><li>运行管理：确保数据的安全性、完整性和同步性等性质</li><li>建立与维护：实现数据库的创建  、备份、恢复、监视、分析和优化等功能</li></ul><p>数据库系统（Database System,DBS）：引入数据库技术后的整个计算机系统</p><h2 id="2-数据库面临问题">2. 数据库面临问题</h2><ul><li><p>冗余（redundancy）：相同的数据可能在不同位置的位置重复存储，浪费存储空间</p></li><li><p>不一致性问题（inconsistentcy）：由于数据冗余，在某些位置对数据的修改并未同步到其他位置</p></li><li><p>数据孤立（data isolation）：数据通常分散在多个文件和应用程序中，导致数据之间难以整合</p></li><li><p>完整性问题（integrity）：缺乏机制来强制执行数据的一致性约束</p></li><li><p>原子性问题（atomicity）：操作中途中断会导致不一样的结果</p></li><li><p>安全性问题（security）：数据可能容易受到未经授权的访问或篡改</p></li><li><p>访问困难（difficulty in accessing）：访问数据需要依赖于应用程序的定制代码，不支持以一种方便而高效的方式去获得数据</p></li><li><p>并发访问异常（concurrent-access anomaly）：当多个用户或程序同时访问和修改文件时，可能会产生冲突</p></li></ul><h2 id="3-数据库视图">3. 数据库视图</h2><h3 id="3-1-数据模型">3.1 数据模型</h3><ul><li><p>关系模型（relational）：以表格形式存储，每个表由行（记录）和列（字段）组成</p></li><li><p>实体-联系模型（entity-relationship）：使用E-R图直观地表示实体和属性之间的联系</p></li><li><p>半结构化数据模型（semi-structured data）：允许某些类型的数据含有不同属性集，如标记（XML标签）或键值对（JSON对象）</p></li><li><p>基于对象的数据模型（object-based data）：数据以类的形式存在，包含属性和方法</p></li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/DataBase/chapter1/202408221553101.png" alt=""></p><h3 id="3-2-数据抽象">3.2 数据抽象</h3><ul><li><p>物理层（physical）：描述数据在计算机存储介质上的具体布局和组织</p></li><li><p>逻辑层（logical）：描述了数据库中的数据是什么，以及数据之间的关系</p></li><li><p>视图层（view）：描述了用户如何查看和操作数据库中的数据</p></li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/DataBase/chapter1/202408221553103.png" alt=""></p><h3 id="3-3-数据模式">3.3 数据模式</h3><p>实例（instance）：特定时刻存储在数据库中的信息的集合</p><p>模式（schema）：数据库的总体设计</p><blockquote><p>模式对应于程序中的变量声明，实例对应于变量某一时刻的值</p></blockquote><h2 id="4-数据库语言">4. 数据库语言</h2><h3 id="4-1-数据定义语言">4.1 数据定义语言</h3><p>数据定义语言（Data Definition Language,DDL）：定义数据库模式，负责数据的存储和定义</p><ul><li><p>域约束（domain constraint）：数据类型约束、取值范围约束、非空约束、默认值约束等</p></li><li><p>引用完整性（referential integrity）：确保一个关系中的外键一定存在于另一关系中</p></li><li><p>授权（authorization）：确保只有特定的用户或角色可以对数据库对象进行操作</p></li></ul><p>数据字典（data dictionary）：DDL的输出放在数据字典中，数据字段包含了元数据</p><h3 id="4-2-数据操纵语言">4.2 数据操纵语言</h3><p>数据操纵语言（Data Manipulation Language,DML）：用于对数据库中的数据进行操作，包括检索（query）、插入（insert）、删除（delete）和修改（update）</p><ul><li><p>过程化（procedural）：要求用户指定需要什么数据以及如何获得这些数据</p></li><li><p>声明式（declarative）：要求用户指定需要什么数据</p></li></ul><h2 id="5-数据库引擎">5. 数据库引擎</h2><h3 id="5-1-存储管理器（storage-manager）">5.1 存储管理器（storage manager）</h3><p>功能：负责数据的物理存储、管理和访问</p><ul><li>权限及完整性管理：检测是否满足完整性约束，并检查试图访问数据的用户权限</li><li>事务管理：管理数据事务日志，保证即使系统发生故障数据库也保持在正确状态，并保证并发事务的执行不发生冲突</li><li>文件管理：将数据从内存写入磁盘，以及从磁盘读取数据到内存</li><li>缓冲区管理：管理数据库缓冲区，以减少磁盘I/O操作</li></ul><p>数据结构：</p><ul><li>数据文件（data file）：存储数据库中实际数据</li><li>数据字典（data dictionary）：存储数据库的元数据</li><li>索引（index）：提供对数据项的快速访问</li></ul><h3 id="5-2-查询处理器（query-processor）">5.2 查询处理器（query processor）</h3><ul><li><p>DDL解释器（interpreter）：它解释DDL语句并将这些定义记录在数据字典中</p></li><li><p>DML编辑器（compiler）：将查询语言中的DML语句翻译为一个执行方案，包括一系列查询执行引擎能理解的低级指令</p></li><li><p>查询执行引擎（query evaluation engine）：执行由DML编译器产生的低级指令，并将执行结果整理并返回给用户</p></li></ul><h3 id="5-3-事务管理器（transaction-manager）">5.3 事务管理器（transaction manager）</h3><p>数据库的一致性状态：数据库在某一时刻符合所有预定义的约束、规则和逻辑的状态，即数据是准确度、完整的、正确的</p><p>事务（transaction）：在数据库中执行的一个操作序列，被视为一个单一的工作单元</p><ul><li>提交（commit）：如果事务中的所有操作都执行成功，事务会被提交，所有的更改会被保存到数据库中</li><li>回滚（rollback）：如果事务中的任何操作执行失败，事务会被回滚，所有发生的更改都会被撤销，数据库恢复到事务开始之前的状态</li></ul><p>事务的性质：ACID原则</p><ul><li>原子性（Atomicity）：要么事务中的所有操作都成功执行，要么事务中的所有操作都不执行</li><li>一致性（Consistency）：事务的执行应将数据库从一个一致性状态转换到另一个一致性状态</li><li>隔离性（Isolation）：事务的执行是独立的，不应受到其他事务的干扰，即一个事务的操作和中间结果对其他事务是不可见的，直到事务提交为止</li><li>持久性（Durability）：一旦事务提交，其对数据库的更改是永久性的，即使系统发生崩溃或故障，提交后的数据更改仍然会被保留</li></ul><p>日志（log）：记录了所有事务的操作，包括事务的开始、更新和提交或回滚等</p><p>事务管理器的核心部件：</p><ul><li>恢复管理器（recovery）：在系统故障时将数据库恢复到一致性状态，包括重做（Redo）或撤销（Undo）</li><li>并发控制器（concurrency-control）：控制并发事务间的相互影响</li></ul><h2 id="6-数据库体系结构">6. 数据库体系结构</h2><p>数据库系统体系结构：可以是集中式的，也可以是分布式的</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/DataBase/chapter1/202408221553104.png" alt=""></p><p>两层应用体系结构</p><ul><li>客户端层（Client）：应用程序层，负责直接与数据库通信并展示结果</li><li>服务器层（Server）：数据库管理系统，处理客户端的请求，执行数据库操作，并返回结果</li></ul><p>三层应用体系结构</p><ul><li>视图层：前端应用程序，提供用户与系统交互的界面，负责数据的输入和输出</li><li>应用层：应用服务器，包含业务逻辑，处理数据的计算和处理，协调用户请求与数据库之间的交互</li><li>数据层：数据库管理系统，负责数据的存储、管理和访问</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/DataBase/chapter1/202408221553105.png" alt=""></p><h2 id="7-数据库成员">7. 数据库成员</h2><ul><li><p>初学者用户（naive user）：使用事先已经定义好的用户界面同数据库进行交互</p></li><li><p>应用程序员（application programmer）：编写应用程序的计算机专业人员</p></li><li><p>老练用户（sophisticated user）：通过数据库查询语言或数据分析软件来与数据库进行交互</p></li><li><p>数据库管理员（DataBase Administrator,DBA）：对数据和访问数据的程序进行集中控制</p><ul><li>模式定义（schema definition）：执行用DDL编写的一系列数据定义语句来创建最初的数据库模式</li><li>存取方法定义（access-method definition）：定义高效检索数据的方法</li><li>物理组织的修改（physical-organization modification）：根据数据库的使用情况或负载情况调整数据文件的分布、索引结构或存储介质，以优化性能或适应变化</li><li>数据访问授权（granting for authorization）：控制用户和应用程序对数据库的访问权限</li><li>日常维护（routine maintenance）<ul><li>周期性地备份数据库到远程服务器上</li><li>监控数据库性能指标，识别和解决性能瓶颈</li><li>管理数据库日志，跟踪数据库活动</li><li>处理数据库故障和修复损坏的数据</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应用层</title>
      <link href="/posts/ab07b2ac/"/>
      <url>/posts/ab07b2ac/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-网络应用原理">1. 网络应用原理</h2><h3 id="1-1-应用体系结构">1.1 应用体系结构</h3><p>客户-服务器体系结构（Client-Server）：一台主机充当服务器，其他主机充当客户，客户向服务器发送请求，服务器处理这些请求并返回响应</p><ul><li>客户之间不直接通信</li><li>服务器需要同时服务多个客户</li></ul><p>对等体系结构（Peer-to-Peer,P2P）：所有端点在网络中具有相同的地位，每个端点既可以充当客户也可以充当服务器</p><ul><li>对等方之间可以直接通信</li><li>对等分即可以请求，也可以服务</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713829.png" alt=""></p><h3 id="1-2-进程通信">1.2 进程通信</h3><p>客户是发起通信的进程，服务器是在会话中监听请求的进程</p><p>套接字（socket）：是进程与计算机网络之间的可编程接口，是网络服务的应用编程接口（Application Programming Interface,API）</p><p>服务寻址：既要确定主机地址（IP地址），也需要确定进程地址（端口号）</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713830.png" alt=""></p><h3 id="1-3-应用服务">1.3 应用服务</h3><ul><li>可靠性：是否确保数据在运输过程中不会丢失、重复或损坏，并且能够被接收方完整地接收到</li><li>带宽：发送进程能够向接收进程交付比特的速率的下限</li><li>定时：发送方注入套接字的每个比特到达接收方的套接字的时长上限</li><li>安全性：是否对数据进行加密处理</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713831.png" alt=""></p><h2 id="2-HTTP">2. HTTP</h2><h3 id="2-1-WWW">2.1 WWW</h3><p><strong>万维网（World Wide Web, WWW）</strong>：是一个全球性的、分布式的、联机的信息系统</p><ul><li><strong>统一资源定位符（Uniform Resource Locator, URL）</strong>：负责唯一标识万维网上的各种文档和资源</li><li><strong>超文本传输协议（HyperText Transfer Protocol, HTTP）</strong>：是万维网客户和万维网服务器进程之间传输数据所遵守的协议</li><li><strong>超文本标记语言（HyperText Markup Language, HTML）</strong>：用于Web页面的标记语言</li></ul><p><strong>浏览器（browser）</strong>：作为 WWW 中的客户端，根据用户输入或点击的 URL，向服务器发送 HTTP 请求来获取资源，同时将资源进行解析与渲染，从而呈现给用户</p><p>URL 格式：<code>&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt;</code></p><ul><li>协议：用什么协议来获取万维网文档，如HTTP传输Web页面，FTP传输文件</li><li>主机：存放资源的主机在因特网中的域名或IP地址</li><li>端口：主机的服务进程所使用的端口号，如 HTTP 是 80 端口</li><li>路径：资源在主机上的具体位置</li></ul><h3 id="2-2-HTTP-流程">2.2 HTTP 流程</h3><p>非持续连接：客户端每发起一个请求，就需要与服务器建立一个新的TCP连接，就会导致 2RTT 的开销</p><p>持续连接：客户端和服务器可以在同一个TCP连接上发送多个请求和响应</p><ul><li>非流水线：完成一个请求才能发下一个请求</li><li>流水线：可以并发多个请求，而无需等待前一个请求完成</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713833.png" alt=""></p><div class="note warning flat"><ul><li>HTTP是无连接的，这里的连接指的是HTTP依赖于底层TCP的连接</li><li>HTTP是无状态的，服务器不会记录 HTTP 的客户信息</li></ul></div><h3 id="2-3-HTTP-报文格式">2.3 HTTP 报文格式</h3><h4 id="2-3-1-请求报文">2.3.1 请求报文</h4><ul><li><strong>请求行</strong><ul><li>请求方法：声明请求的类型<ul><li>GET：从服务器获取指定资源</li><li>POST：向服务器提交数据</li><li>PUT：更新或创建资源</li><li>HEAD：获取指定资源的元数据，不包括响应体</li><li>DELETE：请求删除服务器指定资源</li><li>PATCH：对指定资源进行部分修改</li></ul></li><li>URL：指定请求的资源路径</li><li>HTTP版本：HTTP/1.1或HTTP/2或HTTP/3</li></ul></li><li>首部行：每行都是一个键值对<ul><li>Host：指示域名</li><li>User-Agent：浏览器类型</li><li>Connection：连接类型</li><li>Accept-Language：请求的语言版本</li></ul></li><li>空行：首部行与实体体之间存在一个空行</li><li>实体体：要发送到服务器的数据（如账户密码，搜索码等）</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713834.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PUT /path/to/index.html HTTP/1.1</span><br><span class="line">Host: www.example.com</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">User-agent: Mozilla/5.0</span><br><span class="line">Accept-language: cn</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;Dasi&quot;,</span><br><span class="line">  &quot;school&quot;: &quot;SYSU&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-2-响应报文">2.3.2 响应报文</h4><ul><li><strong>状态行</strong><ul><li>HTTP版本：HTTP/1.1或HTTP/2或HTTP/3</li><li>状态码和短语<ul><li>200 OK：表示服务器接受请求</li><li>400 Bad Request：表示服务器不理解请求</li><li>404 Not Found：表示服务器发现请求路径下不存在资源</li></ul></li></ul></li><li>首部行：每行都是一个键值对，其中键又称为<strong>标头</strong><ul><li>Date：响应报文的生成时间</li><li>Expires：响应的过期时间</li><li>Server：服务器类型</li><li>Connection：连接类型</li><li>Location：用于重定向的URL</li><li>Cache-Control：缓存控制指令</li><li>Content-Type：响应实体的数据类型</li></ul></li><li>空行：首部行与实体体之间必须存在一个空行</li><li>实体体：从服务器获取的数据，如获取Web网页就是获取一个HTML文件</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713835.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Connection: close</span><br><span class="line">Date: Fri, 16 Aug 2024 12:00:00 GMT</span><br><span class="line">Server: Apache/2.2.3 (CentOS)</span><br><span class="line">Cache-Control: private, max-age=0</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Content-Length: 138</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Sample Page&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Hello, World!&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;This is a sample HTML response.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="2-4-Cookie">2.4 Cookie</h3><p>定义：是服务器发送到浏览器并保存在本地的一小块数据，浏览器会存储cookie并在下次向同一服务器发起请求时携带并发送到服务器上，是<strong>键值对形式的小型文本文件</strong></p><ul><li>会话状态管理：记录账号密码、登录状态、购物车和游戏分数等用户信息</li><li>个性化设置：用户自定义的浏览器偏好设置</li><li>行为跟踪：跟踪用户行为，用于分析用户、提供广告或改进服务</li></ul><p>工作流程</p><ol><li>服务器设置Cookie：浏览器首次访问服务器时，请求报文中没有Cookie信息，服务器通过<strong>Set-Cookie标头</strong>在响应中将Cookie发送给浏览器</li><li>浏览器存储Cookie：浏览器接收到Set-Cookie后，将其存储在本地</li><li>客户端发送Cookie：在后续的请求中，浏览器通过<strong>Cookie标头</strong>在请求中附带信息，以便服务器识别和处理</li></ol><p>常见的Cookie值</p><ul><li>Id：当前用户的Cookie名称</li><li>expires：指定Cookie的过期时间（绝对时间）</li><li>max-age：指定了从设置Cookie时间开始的有效时间长度（相对时间）</li><li>path：指定Cookie的有效路径</li><li>domain：指定可以访问Cookie的域名</li><li>secure：指定是否使用HTTPS安全协议发送Cookie</li><li>HttpOnly: 防止客户端脚本通过document.cookie属性访问Cookie</li></ul><p>Cookie的生命周期</p><ul><li>会话性：在关闭浏览器时会被自动删除</li><li>持久性：Cookie会一直保留在浏览器直到到达过期时间或被手动删除</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713836.png" alt=""></p><h3 id="2-5-Web缓存">2.5 Web缓存</h3><p>Web缓存器(Web cache) / 代理服务器(proxy server)：代表初始Web服务器来满足HTTP请求的网络实体，具有自己的磁盘存储空间，保存最近请求过的对象的副本</p><ul><li>大大减少请求的响应时间</li><li>减少一个机构的接入链路的通信量，进而无需增大带宽，节约成本</li><li>从整体上大大减少因特网上的Web流量，改善所有应用性能</li></ul><p>流程</p><ol><li>浏览器创建一个到Web缓存器的TCP连接，并向其中对象发送一个HTTP请求报文</li><li>Web缓存器检查本地是否存储了对象副本，如有副本则向浏览器发送一个具有该对象的HTTP响应报文</li><li>如Web缓存器没有对象副本，则会创建一个与该对象的初始服务器的TCP连接，然后向初始服务器中的对象发送一个HTTP请求报文</li><li>初始服务器会向该Web缓存器发送一个具有该对象的HTTP响应报文</li><li>Web缓存器接收到该对象后，在本地存储空间保存一份副本，并向浏览器发送一个具有该对象的HTTP响应报文</li></ol><div class="note success flat"><p>假设浏览器通过局域网接入因特网，则<strong>响应时延 = 局域网时延 + 接入时延 + 因特网时延</strong><br>其中局域网的流量强度为0.2，接入链路的流量强度为0.9，因特网时延为2秒，Web缓存器的命中率为0.4，Web缓存器的访问时间为0.01秒，当流量强度小于0.8时可以忽略不计时延</p><ul><li>初始：因为接入链路的流量强度为0.9，则响应时延会变得非常大</li><li>方案1：增大接入链路的带宽，使其流量强度降维0.2，则响应时间变为2s</li><li>方案2：安装一个Web缓存器，则响应时间变为0.4×0.01s+0.6×2.01s=1.21s</li></ul><p>方案2的开销比方案1低得多，而且方案2的效果比方案1还要好得多</p></div><h3 id="2-6-HTTP-2">2.6 HTTP/2</h3><table><thead><tr><th>区别</th><th>HTTP/1.1</th><th>HTTP/2</th></tr></thead><tbody><tr><td>数据格式</td><td>文本格式</td><td>二进制格式</td></tr><tr><td>多路复用</td><td>一个TCP连接一次只能处理一个对象</td><td>一个TCP连接可以同时处理多个对象</td></tr><tr><td>首部压缩</td><td>以明文形式发送</td><td>使用压缩算法</td></tr><tr><td>服务器推</td><td>客户必须请求每个对象</td><td>服务器可以主动推送关联对象</td></tr><tr><td>响应次序</td><td>时间次序</td><td>支持响应报文的优先级，根据请求的重要性优化对象加载顺序</td></tr></tbody></table><p>队首阻塞(Head Of Line,HOL)：队首请求在遇到延迟或阻塞时，会导致后续的请求无法被处理，直到前面的请求处理完成</p><ul><li>HTTP/1.1解决：打开多个并行TCP连接，共享可用带宽</li><li>HTTP/2解决：将每个HTTP报文分成独立的小帧，然后交错发送，并在接收端将它们重新装配起来</li></ul><h2 id="3-SMTP">3. SMTP</h2><h3 id="3-1-电子邮件系统">3.1 电子邮件系统</h3><p>组成部分</p><ul><li><strong>用户代理</strong>：是用户与电子邮件系统的接口</li><li><strong>邮件服务器</strong>：用于发送、接受、存储和通告电子邮件的服务器</li><li><strong>邮件发送和接收协议</strong>：用户代理向邮件服务器或者邮件服务器之间发送邮件使用 SMTP，用户代理从邮件服务器接受邮件使用 POP3/IMAP</li><li><strong>邮箱(mailbox)</strong>：具有专属的电子邮件地址，是邮件服务器下的一块存储区域</li></ul><div class="note warning flat"><p>邮件服务器既表现为SMTP客户，也表现为SMTP服务器</p></div><p>流程</p><ol><li>发送方编写好电子邮件后，将邮件提交给发送方用户代理</li><li>发送方用户代理使用SMTP协议将电子邮件传输到发送方邮件服务器的缓存队列中</li><li>发送方的邮件服务器从缓存队列中提取该电子邮件，并创建了一个与接收方邮件服务器的TCP连接</li><li>发送方服务器使用SMTP协议将电子邮件传输到接收方邮件服务器的邮箱中</li><li>接收方用户代理使用POP3/IMA协议从接收方邮件服务器的邮箱中获取邮件</li></ol><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713826.png" alt=""></p><h3 id="3-2-电子邮件协议">3.2 电子邮件协议</h3><p>类型</p><ul><li>简单邮件传输协议（Simple Mail Transfer Protocol, SMTP）：用于发送邮件，使用端口25</li><li>邮局通讯协议（Post Office Protocol, POP）：用于接收邮件，使用端口110</li><li>因特网邮件访问协议（Internet Message Access Protocol, IMAP）：用于管理邮件，使用端口143</li></ul><p>SMTP握手阶段</p><ol><li>建立连接：客户端通过TCP连接到邮件服务器的端口（默认端口为25，但也可以是587或465，具体取决于是否使用加密），服务器会响应一个以<code>220</code>开头的代码，表示服务器已经准备好接受命令</li><li>开始对话：客户端发送<code>HELO</code>命令表示开始会话，服务器会响应一个以<code>250</code>开头的代码</li><li>认证：客户端发送<code>AUTH LOGIN</code>命令进行认证，服务器会做出响应并要求用户提供用户名和密码</li><li>指定发件人：客户端<code>MAIL FROM:&lt;xxx@example.com&gt;</code>命令指定邮件的发件人地址，服务器会响应一个以<code>250</code>开头的代码</li><li>指定收件人：客户端<code>RCPT TO:&lt;xxx@example.com&gt;</code>命令指定邮件的发件人地址，服务器会响应一个以<code>250</code>开头的代码</li><li>开始撰写：客户端发送<code>DATA</code>命令表示将开始发送邮件正文，服务器会响应一个以<code>354</code>开头的代码</li><li>发送报文：客户端发送邮件报文，最后以单独的<code>.</code>结束邮件内容，服务器会响应一个以<code>250</code>开头的代码并排队处理</li><li>结束会话：客户端发送<code>QUIT</code>命令表示会话结束，服务器会响应一个以<code>221</code>开头的代码</li></ol><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/course/202408181939041.png" alt=""></p><p>SMTP报文</p><ol><li>首部/头部：包含关于邮件的元数据，如发件人、收件人、主题等，格式是键值对字段，每个字段占据一行</li></ol><ul><li>From: 发件人地址</li><li>To: 收件人地址</li><li>Cc: 抄送地址</li><li>Bcc: 密送地址</li><li>Subject: 邮件主题</li><li>Date: 邮件发送日期</li><li>Reply-To: 回复地址</li></ul><ol start="2"><li>正文：与头部之间隔一个空行，包含邮件的实际内容（纯文本、HTML、附件等），通常使用MIME格式来组织</li></ol><h2 id="4-DNS">4. DNS</h2><h3 id="4-1-域名">4.1 域名</h3><p>主机标识的两种方式</p><ul><li>IP地址（对计算机友好）<ul><li>IPv4地址：32位地址，表示为4个十进制数，通过<code>.</code>分隔，如<code>192.0.2.172</code></li><li>IPv6地址：128位地址，表示为8组16进制数，通过<code>:</code>分隔，如<code>2001:0db8:8b73:0000:0000:8a2e:0370:1337</code></li></ul></li><li>域名（对人友好）<ul><li>顶级域名：通常表示国家、地区或机构类型，如<code>.cn</code>表示中国、<code>.us</code>表示美国、如<code>.com</code>表示公司、<code>.gov</code>表示政府机构</li><li>二级域名：通常表示组织、公司或品牌名称，如<code>.google</code>表示谷歌、<code>.baidu</code>表示百度</li><li>三级域名：通常表示服务类型或子部门，如<code>.www</code>表示Web服务、<code>.mail</code>表示邮件服务、<code>.blog</code>表示博客服务</li></ul></li></ul><p>域名服务器：是域名系统的核心组件，负责将人类可读的域名转换为计算机可识别的IP地址</p><ul><li>根域名服务器：管理顶级域名的域名服务器地址</li><li>顶级域名服务器：管理特定顶级域名下的二级域名服务器地址</li><li>权威域名服务器：管理特定域名的IP地址</li><li>本地域名服务器：代表客户主机向其他域名服务器发起查询，并将结果返回给客户主机</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713817.png" alt=""></p><h3 id="4-2-域名查询">4.2 域名查询</h3><p>多级域名服务器的意义：只有权威域名服务器才真正存储并返回域名与IP地址的映射关系，而根域名服务器和顶级域名服务器的作用主要是引导查询请求，将请求逐步转移到更具体的服务器上，主要目的是分担查询压力，并提高域名查询的效率和可靠性</p><p>查询方式</p><ul><li>递归查询：本地域名服务器只需向根域名服务器查询一次，后面几次查询都是递归地在几个域名服务器之间进行</li><li>迭代查询：本地域名服务器先向根域名服务器查询，然后再向顶级域名服务器查询，最后向权威域名服务器查询</li></ul><p><img src="https://dasi-blog.oss-cn-guangzhou.aliyuncs.com/ComputerNetwork/chapter1-2/202501051654373.png" alt=""></p><p>DNS缓存（caching）：会缓存从其他DNS服务器获得的解析结果，减少对上游DNS服务器的请求频率，包括对域名-IP地址的缓存和对DNS服务器-IP地址的缓存</p><div class="note info flat"><p>事实上，绝大部分的DNS查询都绕过了根服务器</p></div><p>流程：假设客户端以迭代方式查询<code>www.baidu.com</code></p><ol><li>客户端首先查询本地DNS服务器缓存，是否存在IP地址或者域名服务器的记录</li><li>本地DNS服务器将查询请求发送到根DNS服务器，根DNS服务器根据<code>.com</code>返回顶级域DNS服务器的IP地址</li><li>本地DNS服务器将请求发送到顶级域DNS服务器，顶级域DNS服务器根据<code>.baidu</code>返回权威DNS服务器的IP地址</li><li>本地DNS服务器将请求发送到权威DNS服务器，权威DNS服务器根据<code>www.baidu.com</code>返回域名的IP地址</li><li>本地DNS服务器获取到IP地址后缓存，然后返回到客户端</li></ol><div class="note warning flat"><p>如果还存在四级甚至五级域名，需要查询多次权威DNS服务器</p></div><h3 id="4-3-DNS记录">4.3 DNS记录</h3><p>资源记录（Resource Record, RR）：</p><ul><li>Name：域名</li><li>Value：根据Type决定Name映射的值</li><li>Type：资源记录的类型</li><li>TTL：能够在缓存中的存活时间</li></ul><p>类型</p><table><thead><tr><th>Type</th><th>Name</th><th>Value</th><th>Example</th></tr></thead><tbody><tr><td>A</td><td>域名</td><td>IPv4地址</td><td>(<a href="http://www.baidu.com">www.baidu.com</a>, 119.75.217.109, A, TTL)</td></tr><tr><td>AAAA</td><td>域名</td><td>IPv6地址</td><td>(<a href="http://www.baidu.com">www.baidu.com</a>, 2409:8c54:870:34e:0:ff:b024:1916 AAAA, TTL)</td></tr><tr><td>CNAME</td><td>域名</td><td>另一个域名</td><td>(<a href="http://dasi.net.cn">dasi.net.cn</a>, <a href="http://dasi0227.github.io">dasi0227.github.io</a>, CNAME, TTL)</td></tr><tr><td>NS</td><td>域名</td><td>权威DNS服务器的域名</td><td>(<a href="http://baidu.com">baidu.com</a>, <a href="http://ns1.baidu.com">ns1.baidu.com</a>, NS, TTL)</td></tr><tr><td>MX</td><td>域名</td><td>邮件服务器的域名</td><td>(<a href="http://qq.com">qq.com</a>, <a href="http://mail.qq.com">mail.qq.com</a>, MX, TTL)</td></tr></tbody></table><h3 id="4-4-DNS报文">4.4 DNS报文</h3><p>DNS只有查询报文和回答报文，且具有相同格式</p><ul><li>首部区域：报文的元信息<ul><li>标识符：唯一标识当前DNS查询报文和DNS响应报文</li><li>标志：报文的类型，响应的状态，查询的方式等</li><li>问题数：问题区域中问题的数量</li><li>回答RR数：回答区域中的RR数量</li><li>权威RR数：权威区域中的RR数量</li><li>附加RR数：附加信息区域中的RR数量</li></ul></li><li>问题区域：查询的具体信息</li><li>回答区域：响应的具体信息</li><li>权威区域：提供有关DNS服务器的信息</li><li>附加信息区域：提供额外的信息，有助于解析问题</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713820.png" alt=""></p><h2 id="5-P2P">5. P2P</h2><h3 id="5-1-自扩展性">5.1 自扩展性</h3><p>因特网核心具有足够带宽，瓶颈都在因特网的接入链路</p><ul><li>上载(upload)：将数据从本地传输到因特网，速率以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span>表示</li><li>下载(download)：将数据从因特网传输到本地，速率以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>表示</li><li>分发时间(distribution)：所有N个对等方得到文件副本F比特所需要的时间</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713821.png" alt=""></p><p>客户-服务器体系结构：服务器必须向全部对等方都传输一个副本，则一共要上载NF比特</p><ul><li>服务器的上载时间：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi>N</mi><mi>F</mi></mrow><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">{NF}/{u_s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span></span><span class="mord">/</span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></li><li>客户的下载时间：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">{F}/{d_c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span><span class="mord">/</span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></li><li>分发时间：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>c</mi><mi>s</mi></mrow></msub><mo>≥</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mi>N</mi><mi>F</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>s</mi></msub><mo separator="true">,</mo><mi>F</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mi>c</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">D_{cs} \geq max\{NF/u_s,F/d_c\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">cs</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></li></ul><p>P2P体系结构：每个对等方都可以帮助服务器分发副本，因此上载能力等于服务器的上载速率与对等方的上载速率之和</p><ul><li>首次服务器上载时间：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">F/u_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>P2P整体的上载时间：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>F</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mi>s</mi></msub><mo>+</mo><msub><mi>u</mi><mrow><mi>c</mi><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>u</mi><mrow><mi>c</mi><mn>2</mn></mrow></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>u</mi><mrow><mi>c</mi><mi>N</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">NF/(u_s+u_{c1}+u_{c2}+....+u_{cN})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">....</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>对等方的下载时间：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">F/d_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>分发时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>P</mi><mn>2</mn><mi>P</mi></mrow></msub><mo>≥</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mi>F</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>s</mi></msub><mo separator="true">,</mo><mi>F</mi><mi mathvariant="normal">/</mi><msub><mi>d</mi><mi>c</mi></msub><mo separator="true">,</mo><mi>N</mi><mi>F</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mi>s</mi></msub><mo>+</mo><msub><mi>u</mi><mrow><mi>c</mi><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>u</mi><mrow><mi>c</mi><mn>2</mn></mrow></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>u</mi><mrow><mi>c</mi><mi>N</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">D_{P2P} \geq max{F/u_s,F/d_c,NF/(u_s+u_{c1}+u_{c2}+....+u_{cN})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">....</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></li></ul><p>自扩展性：对等方除了是比特的消费者，还是它们的重新分发者</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713822.png" alt=""></p><h3 id="5-2-BitTorrent">5.2 BitTorrent</h3><p>术语</p><ul><li>洪流(torrent)：参与一个特定文件分发的所有对等方的集合</li><li>种子(seeder)：已经下载了整个文件并留在洪流中继续上载块的对等方</li><li>文件块(chunk)：洪流中分发的文件被划分为的较小的数据块，通常为256KB</li><li>追踪器(tracker)：用于协调参与洪流的对等方之间的通信</li><li>邻近对等方(neighboring peers)：同一洪流中与当前对等方直接相连的其他对等方</li></ul><p>流程：</p><ol><li>客户下载<code>.torrent</code>文件加入洪流成为对等方</li><li>追踪器从洪流中随机选取若干个对等方与当前对等方直接相连</li><li>对等方周期性地询问每个邻近对等方所具有的快列表</li><li>对等方向邻近对等方请求它还没有的块</li><li>对等方获得整个文件后，可以离开洪流，也可以留在洪流成为种子</li></ol><p>机制</p><ul><li>最稀缺优先(rarest first)：优先下载邻近对等方中数量最少的块-&gt;目的是为了均衡每个块在洪流中的副本数量</li><li>一报还一报(tit-for-tat)：对等方A会周期性测量从对等方B接收到比特的速率，对等方B也会周期性测量从对等方A接收到比特的速率，如果对等方A和B都满足与此速率，则它们之间保持疏通-&gt;目的是对等方能够以趋向于找到彼此协调的速率上载</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter2/202408201713823.png" alt=""></p><h2 id="6-CDN">6. CDN</h2><h3 id="6-1-比特率">6.1 比特率</h3><p><strong>比特率(bitrate)</strong>：单位时间传输的比特量，衡量了<strong>视频的压缩质量即视频的清晰度</strong></p><ul><li>空间冗余：相邻的像素通常具有相似的颜色和亮度，因此可以用更少的数据来表示这些相似的像素</li><li>时间冗余：相邻帧之间的变化通常很小，因此可以只记录变化的部分而不是每一帧的完整数据</li></ul><p>常见的清晰度和比特率关系</p><table><thead><tr><th>清晰度</th><th>分辨率/px/</th><th>比特率/Mbps</th></tr></thead><tbody><tr><td>标清(Standard Definition,SD)</td><td>720x480</td><td>1-2.5</td></tr><tr><td>高清(High Definition,HD)</td><td>1280x720</td><td>2.5-5</td></tr><tr><td>全高清 (Full High Definition,Full HD)</td><td>1920x1080</td><td>5-10</td></tr><tr><td>4K超高清(Ultra High Definition,4K UHD)</td><td>3840x2160</td><td>15-50</td></tr><tr><td>8K超高清(Ultra High Definition,8K UHD)</td><td>7680x4320</td><td>50-100</td></tr></tbody></table><h3 id="6-2-DASH">6.2 DASH</h3><p>HTTP流：通过HTTP协议传输和播放多媒体内容的技术</p><ul><li>分段传输：媒体内容被分成多个片段，每个片段通过HTTP协议逐段传输</li><li>实时播放：浏览器接收到的片段只要超过预先设定的门限，就可以开始播放，而不用等到所有数据都下载完成</li></ul><p>动态适应性流（Dynamic Adaptive Streaming, DASH）：允许客户自由地在视频不同的质量等级之间切换</p><ol><li>客户首先请求HTTP服务器获得一份告示文件，其中提供了各个版本视频的URL及其比特率</li><li>客户根据可用宽带动态地请求来自不同版本的视频的片段，同时运行一个速率决定算法来选择下次请求的片段</li></ol><h3 id="6-3-CDN">6.3 CDN</h3><p>为什么不建立单一的大规模数据中心来传输流式视频？</p><ul><li>若客户远离数据中心，分组将跨越许多通信链路，带来很高的时延</li><li>流行的视频可能会经过相同的通信链路发送许多次，浪费了网络带宽，因特网公司不得不付费给ISP运营商</li><li>单点故障，即数据中心崩溃会导致任何视频流无法传输</li></ul><p>内容分发网（Content Distribution Network, CDN）：是一种分布式的网络架构，通过在地理上分散的多个服务器上缓存和分发内容，来实现更快的访问速度和更高的可靠性</p><p>CDN的流程：假设URL是<code>http://video.baidu.com/movie</code></p><ol><li>用户的客户端发起一个DNS查询请求，向本地DNS服务器询问video.baidu.com的IP地址</li><li>用户的本地DNS服务器中继DNS请求到baidu的权威服务器</li><li>baidu的权威服务器不会直接返回域名的IP地址，而是返回baiduCDN的权威服务器地址</li><li>用户的本地DNS服务器再一次中继DNS请求到baiduCDN的权威服务器</li><li>baiduCDN的权威服务器返回合适的CDN边缘服务器的IP地址</li><li>用户的本地DNS服务器将CDN边缘服务器的IP地址返回给浏览器</li><li>浏览器与CDN边缘服务器建立了一条直连的TCP连接，然后开始传输数据</li></ol><p>CDN边缘服务器的选择策略</p><ul><li>地理位置最近（geographically closet）：选择距离用户最近的CDN边缘服务器</li><li>基于响应时间/网络质量：对时延和丢包率进行周期性地实时测量</li><li>负载均衡：选择当前负载较低的CDN边缘服务器</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>因特网</title>
      <link href="/posts/99ade850/"/>
      <url>/posts/99ade850/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-因特网">1. 因特网</h2><h3 id="1-1-因特网组成">1.1 因特网组成</h3><p>网络（network）：由若干节点和连接这些节点的链路组成</p><p>节点：计算设备，又称为<strong>主机（host）<strong>或</strong>端系统（end system）</strong>，如计算机、交换机、路由器、集线器等</p><p>链路：<strong>通信链路（communication link）</strong>，分为有线链路和无线链路，如光纤、铜缆、无线电等</p><p><strong>分组/包（packet）</strong>：是网络中数据传输的基本单位</p><p><strong>交换机（switch）</strong>：将若干个计算机连成一个小网络</p><p><strong>路由器（router）</strong>：将若干个小网络连成一个大网络</p><p><strong>链路(route/path)</strong>：一个分组从一台主机经历一系列路由器和交换机到另一台主机的路径</p><p><strong>互连网（internet）</strong>：由若干网络和连接这些节点网络的路由器组成，即<strong>网络的网络</strong></p><p><strong>因特网/互联网（Internet）</strong>：世界范围的互连网</p><div class="note warning flat"><p>互连网是一个通用名词，泛指一切网络互连形成的网络，而因特网是一个专有名词，特指遵循TCP/IP协议且覆盖全球的一个特殊互连网</p></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410616.png" alt=""></p><h3 id="1-2-因特网服务">1.2 因特网服务</h3><ol><li>数据通信</li><li>资源共享</li><li>分布式处理</li><li>提高可靠性</li><li>负载均衡</li></ol><h3 id="1-3-因特网协议">1.3 因特网协议</h3><p><strong>报文（message）</strong>：是网络中交换与传输的数据单元</p><p><strong>协议的内容</strong>：定义了通信实体之间交换的报文的格式和顺序，以及报文发送/接受一条报文时所采取的动作</p><p>最常见的四种协议</p><ul><li><strong>传输控制协议（Transmission Control Protocol,TCP）</strong>:规定了在网络通信中如何确保数据传输的可靠性和顺序性</li><li><strong>互联网协议（Internet Protocol,IP）</strong>：规定了在互联网上如何寻址和路由</li><li><strong>超文本传输协议（Hypertext Transfer Protocol,HTTP）</strong>：规定了在Web浏览器和Web服务器之间如何传输和交换超文本文档</li><li><strong>简单邮件传输协议（Simple Mail Transfer Protocol,SMTP）</strong>：规定了在网络上如何传输电子邮件</li></ul><h2 id="2-网络边缘">2. 网络边缘</h2><h3 id="2-1-端">2.1 端</h3><p>端系统（End System）：位于因特网的边缘，即无法再向外层拓展，如桌面计算机，移动计算机，客户端，服务器</p><p>主机：是容纳应用程序的机器的统称</p><p><strong>客户机（client）</strong>：请求服务或资源的一端</p><p><strong>服务器（server）</strong>：提供资源或服务的一端</p><div class="note info flat"><table><thead><tr><th>区别</th><th>处理器</th><th>操作系统</th><th>硬件标准</th></tr></thead><tbody><tr><td>PC</td><td>基于Intel或AMD的x86处理器</td><td>Windows、Linux</td><td>IBM PC硬件标准</td></tr><tr><td>MAC</td><td>基于ARM的M系列处理器</td><td>macOS</td><td>苹果自家设计的硬件标准</td></tr></tbody></table></div><h3 id="2-2-接入网">2.2 接入网</h3><p><strong>接入网（access network）</strong>：将端系统连接到边缘路由器的网络</p><p><strong>边缘路由器（edge router）</strong>：端系统到任何其它远程系统的路径上的第一台路由器</p><h4 id="2-2-1-家庭接入">2.2.1 家庭接入</h4><ul><li><strong>数字用户线（Digital Subscriber Line,DSL）</strong>：家庭通过本地电话线接入的本地电话公司处获得因特网接入</li><li><strong>电缆（cable）</strong>：家庭通过本地电视线接入的本地电视公司处获得因特网接入</li><li><strong>光纤到户（Fiber To The Home,FTTH）</strong>：直接将光纤连接到家庭</li><li><strong>无线宽带</strong>：数据以无线方式从供应商基站发送到家庭中的调制解调器</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410617.png" alt=""><br><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410620.png" alt=""><br><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410618.png" alt=""></p><h4 id="2-2-2-公司-学校接入">2.2.2 公司/学校接入</h4><ul><li><strong>以太网（Ethernet）</strong>：是一种有线的局域网技术，使用物理连接将设备连接到局域网</li><li><strong>无线保真（Wireless Fidelity,WiFi）</strong>：是一种无线的局域网技术，使用无线信号将设备连接到局域网</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121419018.png" alt=""></p><h4 id="2-2-3-广域接入">2.2.3 广域接入</h4><ul><li><strong>蜂窝网（Cellular Network）</strong>：通过无线信号将移动设备连接到分布在全国各地的移动网络提供商的基站，从而接入因特网（3G，4G，5G）</li><li><strong>无线广域网（Wireless Wide Area Network,WWAN）</strong>：使用卫星、WiFi或专用的长距离无线连接来提供广域的互联网接入服务</li></ul><h3 id="2-3-传输媒介">2.3 传输媒介</h3><table><thead><tr><th>类型</th><th>媒介</th><th>适用范围</th></tr></thead><tbody><tr><td>双绞铜线</td><td>两根绝缘铜线缠绕在一起</td><td>局域网、电话线</td></tr><tr><td>同轴电缆</td><td>内外导体、内外绝缘层</td><td>局域网、电视线</td></tr><tr><td>光纤</td><td>玻璃或塑料纤维</td><td>长距离传输、互联网主干网、数据中心连接</td></tr><tr><td>陆地无线电信道</td><td>无线电波</td><td>蜂窝网、蓝牙、WiFi、广播电视</td></tr><tr><td>卫星无线电信道</td><td>地球轨道卫星</td><td>全球范围的通信、卫星电话、卫星电视、GPS</td></tr></tbody></table><h2 id="3-网络传输">3. 网络传输</h2><h3 id="3-1-数据交换">3.1 数据交换</h3><table><thead><tr><th>类型</th><th>定义</th><th>优势</th><th>缺点</th></tr></thead><tbody><tr><td>电路交换</td><td>在通信开始前，建立一条专用的物理路径，通信结束后释放该路径</td><td>时延低，稳定</td><td>建立连接耗时、电路空闲仍占用带宽</td></tr><tr><td>报文交换</td><td>将整个报文作为一个整体进行存储和转发，每个节点接收完整报文后再转发</td><td>不需要预先建立连接</td><td>存储转发机制导致时延较高</td></tr><tr><td>分组交换</td><td>将报文分割成多个较小的分组并添加首部，每个分组独立传输，到达目的地后再重新组装</td><td>资源利用率高、时延低</td><td>需要重新排序，附加信息开销大</td></tr></tbody></table><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410621.png" alt=""></p><h3 id="3-2-时延类型">3.2 时延类型</h3><p>转发时延（forwarding）：从接收分组到完成转发所花费的时间，<strong>转发时延=接收时延-&gt;处理时延-&gt;排队时延-&gt;传输时延</strong></p><ul><li><strong>接收时延</strong>（reception）：网络设备从入接口的链路接收分组到缓冲区的耗时</li><li><strong>处理时延</strong>（processing）：网络设备对分组检查头部信息，检索转发表等操作的耗时</li><li><strong>排队时延</strong>（queuing）：如果网络设备的出接口正在发送其他分组，当前分组需要进入队列等待的耗时</li><li><strong>传输时延</strong>（transmission）：网络设备从缓冲区发送分组到出接口的链路上的耗时</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410625.png" alt=""></p><p>传播时延：分组从发送端到接收端过程中，在物理介质中传播所花费的时间</p><div class="note warning flat"><p>传输是分组从路由器到链路，传播是分组在链路中，相当于传输是车经过收费站的速度，而传播是车在高速的行驶速度</p></div><p>流量强度：<strong>到达率 / 服务率</strong>，</p><div class="note danger flat"><p>流量强度不能大于1，否则排队时延会接近无限大，甚至导致丢包</p></div><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410626.png" alt=""></p><h3 id="3-3-性能指标">3.3 性能指标</h3><p>性能指标</p><ul><li>传输速率（rate）：数据在通信链路中传输的速度</li><li>带宽（bandwidth）：通信链路的最大传输能力</li><li>吞吐量（throughout）：指单位时间内通过网络或系统成功传输的<strong>有效数据量</strong></li><li>时延：数据从发送端到接收端所花费的时间，总时延=传输时延+传播时延+接收时延+处理时延+排队时延</li><li>丢包率：网络传输过程中丢失的数据包占总发送数据包的比例</li><li>往返时延（Round-Trip Time, RTT）：发送端从发送到接收到接收端的确认所经历的时间</li><li>时延带宽积：发送端发送的第一个比特即将到达终点时，发送端已发出了多少比特</li><li>信道利用率：信道有百分之多少的时间有数据通过</li></ul><p><strong>瓶颈链路（bottleneck link）</strong>：在计算机网络中传输速度最慢的那一部分链路，它限制了整个网络的性能，也就是说对于吞吐量为R1,R2,……,Rn的n链路网络，其实际吞吐量为<strong>min{R1,R2,……,Rn}</strong></p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410627.png" alt=""></p><h2 id="4-网络协议">4. 网络协议</h2><h3 id="4-1-协议分层">4.1 协议分层</h3><p><strong>协议栈（protocol stack）</strong>：一组按栈层次组织的网络协议，每层负责不同的功能，从而确保数据在网络中的正确传输</p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410628.png" alt=""></p><table><thead><tr><th>分层（自顶向下）</th><th>传输对象</th><th>功能</th><th>协议</th><th>数据称呼</th></tr></thead><tbody><tr><td>应用层</td><td>应用程序之间的通信</td><td>提供用户接口</td><td>HTTP、SMTP、FTP</td><td>报文（message）</td></tr><tr><td>运输层</td><td>端到端的通信</td><td>提供可靠或不可靠的数据传输</td><td>TCP、UDP</td><td>报文段（segment）</td></tr><tr><td>网络层</td><td>路由器之间的通信</td><td>实现不同网络之间的互联</td><td>IP</td><td>数据报（datagram）</td></tr><tr><td>链路层</td><td>交换机之间的通信</td><td>负责节点之间的数据传输</td><td>Ethernet（802.3）、Wi-Fi（802.11）</td><td>帧（frame）</td></tr><tr><td>物理层</td><td>物理介质上的传播</td><td>负责将比特流转换为电信号、光信号或无线信号</td><td>DSL、光纤、同轴电缆</td><td>比特流（bit stream）</td></tr></tbody></table><h3 id="4-2-封装">4.2 封装</h3><p>封装：在每一层协议中，将上一层的数据加上自己的首部信息进行封装，形成新的数据格式</p><ul><li>首部（header）：控制信息，提供了必要的元数据</li><li>有效载荷（payload）：实际要传输的数据内容，承载了来自上一层的数据</li></ul><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/chapter1/202408121410629.png" alt=""></p><h3 id="4-3-三要素">4.3 三要素</h3><p><strong>语法</strong>：规定了数据的结构和格式，即数据如何组织和表示</p><p><strong>语义</strong>：规定了数据的含义，即数据表示什么以及如何处理</p><p><strong>时序</strong>：规定了通信的顺序和时机，即数据何时发送、接收和响应</p><h2 id="5-网络攻击">5. 网络攻击</h2><ol><li>恶意软件（Malware）：通过网络传播的有害程序<ul><li>病毒（virus）：附着在合法程序或文件上进行破坏</li><li>蠕虫（worm）：利用网络漏洞来自我复制并自动扩散</li><li>木马（Trojan Horse）：伪装成合法软件来欺骗用户安装</li><li>间谍软件（spyware）：秘密监控用户活动，收集敏感信息</li><li>僵尸网络（botnet）：发送垃圾邮件、挖矿</li></ul></li><li>拒绝服务攻击（Deniel-of-Service,DoS）：让互联网设施和服务不能被合法用户使用<ul><li>弱点攻击：利用计算机系统或软件中的漏洞和缺陷进行攻击</li><li>宽带洪泛：发送大量分组占用目标网络的带宽，导致网络拥堵或服务中断</li><li>连接洪泛：创建大量半开或全开的网络连接请求，耗尽服务器资源，导致正常的连接请求无法得到处理</li></ul></li><li>分组嗅探（Packet Sniffing）：监控和捕获网络上传输的数据包，常用于网络分析，但也可以用于窃取数据</li><li>IP哄骗（IP Spoofing）：伪造源IP地址，使其看起来像是来自合法的来源，从而绕过安全措施进行恶意操作</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用telnet发送qq邮件</title>
      <link href="/posts/4ec1858c/"/>
      <url>/posts/4ec1858c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h3 id="问题1：即使在控制面板启用telnet客户端也无法使用telnet">问题1：即使在控制面板启用telnet客户端也无法使用telnet</h3><p>解决：使用管理员权限打开cmd，执行命令：<code>dism /online /Enable-Feature /FeatureName:TelnetClient</code>，之后根据弹出信息键入Y重启即可</p><blockquote><p>参考链接：<a href="https://www.cnblogs.com/Nov13/p/17559005.html">https://www.cnblogs.com/Nov13/p/17559005.html</a></p></blockquote><h3 id="问题2：总是出现502-invalid-input-from-xxx-to-xxx报错">问题2：总是出现<code>502 invalid input from xxx to xxx</code>报错</h3><p>解决：使用587端口而不是25端口，因为587端口会对数据进行加密，安全性能比25端口好</p><blockquote><p>参考链接：<a href="https://mp.weixin.qq.com/s/0eDdFEG1aUer1vQQ4qfP2g">https://mp.weixin.qq.com/s/0eDdFEG1aUer1vQQ4qfP2g</a></p></blockquote><h3 id="问题3：QQ邮箱的登录需要获取授权码">问题3：QQ邮箱的登录需要获取授权码</h3><p>解决：在个人的<code>QQ邮箱首页-&gt;设置-&gt;账号-&gt;POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务</code>中开启服务，通过短信验证后获得授权码。注意，授权码只会在一开始显示，退出页面后无法查看，只能再次获取新的授权码，所以要保存好</p><h3 id="问题4：邮箱号和授权码需要进行Base64编码">问题4：邮箱号和授权码需要进行Base64编码</h3><p>解决：工具网址：<a href="https://tool.chinaz.com/Tools/Base64.aspx">https://tool.chinaz.com/Tools/Base64.aspx</a></p><h3 id="问题5：还是出现502-invalid-input-from-xxx-to-xxx报错">问题5：还是出现<code>502 invalid input from xxx to xxx</code>报错</h3><p>解决：在网上找了一个小时解决方案也没找到，最后我惊奇地发现，应该是telnet编辑器的问题！就是当你输入错误的时候，使用backspace回退到某个位置重新输入，视觉上是覆盖错误字符实现修改，但实际上它仍保留了一些字符，通过发送邮件显示出来这些字符是<code>[C</code>或<code>[D</code>，至于为什么就不得而知了。因此只需要确保第一次输入没有任何错误即可！</p><blockquote><p>其实输错了也没关系，再输一次正确的就好了，只不过邮件内容那里如果输错了就不能重来了</p></blockquote><h3 id="问题6：邮件格式">问题6：邮件格式</h3><p>解决：仅针对qq邮件，其他邮件服务器可能有不同格式</p><ul><li>元信息：不需要Base64编码<ul><li><a href="mailto:from:xxx@qq.com">from:xxx@qq.com</a></li><li><a href="mailto:to:xxx@qq.com">to:xxx@qq.com</a></li><li>subject:xxx</li></ul></li><li>subject后需要空一行写邮件内容</li><li>单独一行输入英文句号<code>.</code>结束</li></ul><h3 id="整个过程">整个过程</h3><p><code>&gt;</code>行表示用户输入，注意第一次不要输错，<strong>建议在其他地方输入好之后复制粘贴</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt;telnet smtp.qq.com 587</span><br><span class="line">220 newxmesmtplogicsvrszc5-2.qq.com XMail Esmtp QQ Mail Server.</span><br><span class="line">&gt;helo name</span><br><span class="line">250-newxmesmtplogicsvrszc5-2.qq.com-30.174.48.222-23051354</span><br><span class="line">250-SIZE 73400320</span><br><span class="line">250 OK</span><br><span class="line">&gt;auth login</span><br><span class="line">334 VXNlcm5hbWU6</span><br><span class="line">&gt;QQ邮箱的Base64编码</span><br><span class="line">334 UGFzc3dvcmQ6</span><br><span class="line">&gt;授权码的Base64编码</span><br><span class="line">235 Authentication successful</span><br><span class="line">&gt;mail from:&lt;xxx@qq.com&gt;</span><br><span class="line">250 OK</span><br><span class="line">&gt;rcpt to:&lt;xxx@qq.com&gt;</span><br><span class="line">250 OK</span><br><span class="line">&gt;data</span><br><span class="line">354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;.</span><br><span class="line">&gt;from:xxx@qq.com</span><br><span class="line">&gt;to:xxx@qq.com</span><br><span class="line">&gt;subject:主题名</span><br><span class="line">&gt; </span><br><span class="line">&gt;邮件内容</span><br><span class="line">&gt;.</span><br><span class="line">250 OK: queued as.</span><br><span class="line">&gt;quit</span><br><span class="line">221 Bye.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">遗失对主机的连接。</span><br></pre></td></tr></table></figure><h3 id="图示">图示</h3><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/course/202408181939041.png" alt=""></p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/ComputerNetwork/course/202408181939040.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遗传算法</title>
      <link href="/posts/9cfaa3ca/"/>
      <url>/posts/9cfaa3ca/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-核心思想">1. 核心思想</h2><ul><li>个体（individual）：候选解</li><li>种群（population）：候选解的集合，表示问题的解空间</li><li>染色体（chromosome）：候选解的编码方式，表示个体的特征，是一种象征着基因的数据结构</li><li>精英（elite）：适应度最好的个体</li><li>适应度（fitness）：目标函数值</li><li>环境容纳量（capacity）：种群的最大个体数量</li><li>优化准则（optimization）：指导算法何时停止搜索（迭代次数）</li><li>自然选择（selection）：根据个体的适应度选择优秀个体作为父代，用于产生子代形成新的个体</li><li>交叉重组（crossover）：提取两个父体的染色体片段进行交换组合，从而生成新的染色体来形成子代个体</li><li>基因变异（mutation）：对个体染色体中的某些基因进行随机改变或替换来实现</li></ul><h2 id="2-基本操作">2. 基本操作</h2><h3 id="2-1-选择策略">2.1 选择策略</h3><ul><li>轮盘赌选择（Roulette Wheel）：轮盘的每个扇区代表不同的个体，每个扇区的张角与个体的适应度成比例，然后产生一个随机数，落入哪个扇区就选择相应的个体</li><li>锦标赛选择（Tournament）：根据设定的参赛人员数量随机选取种群中若干个个体，选择其中适应度最大的个体</li><li>最佳个体选择（elitist）：把群体中适应度最高的个体不进行交叉而直接复制到下一代</li></ul><h3 id="2-2-交叉重组策略">2.2 交叉重组策略</h3><ul><li>单点交叉（Single-Point Crossover）：随机设定一个交叉点，该点前/后的部分基因结构进行互换，以此生成两个新的个体</li><li>均匀交叉（Uniform Crossover）：按照50%的概率对父代每一个基因位点进行交换，从而产生新的子代个体</li><li>部分匹配交叉（Partial-mapped Crossover,PMX）：具体操作可见七的代码</li></ul><p><img src="https://i-blog.csdnimg.cn/blog_migrate/c9cae2c69c116ef9b3fd22b239efb8bf.png" alt=""></p><blockquote><p>PMX具体操作：<a href="https://blog.csdn.net/qq_32182397/article/details/106031512">https://blog.csdn.net/qq_32182397/article/details/106031512</a></p></blockquote><h3 id="2-3-变异策略（随机，随机，还是随机）">2.3 变异策略（随机，随机，还是随机）</h3><ul><li>位点变异（Bit-flip）：随机选择一个或多个基因位点，并以一定的变异概率改变这些基因位点上的基因值</li><li>逆转变异（Inversion）：随机选择两个基因位点，然后将这两个基因位点之间的基因逆序排列</li><li>插入变异（Insertion）：随机选择一个基因位点插入到另一个随机选择的位置中</li><li>互换变异（Swap）：随机选取两个基因位点进行互换</li><li>移动变异（Shift）：随机选取一个基因位点向左或向右移动一个随机位数</li></ul><h2 id="3-算法流程">3. 算法流程</h2><ol><li>初始化：初始种群和最大迭代次数</li><li>迭代：是否到达最大迭代次数，当前种群中是否有个体是最优解</li><li>根据选择策略，选出两个具有优秀基因的个体</li><li>将上一步选择的两个个体交叉重组，获得两个新个体加入种群</li><li>如果达到环境容纳量，则淘汰原种群中两个具有劣质基因的个体</li><li>按照变异概率随机对种群中每个个体基因突变</li><li>输出最优解</li></ol><p><img src="https://i-blog.csdnimg.cn/blog_migrate/47dd2ccb8b901beccaef8ce2f97cd1c0.png" alt=""></p><h2 id="4-影响性能的因素">4. 影响性能的因素</h2><h3 id="4-1-最大迭代次数">4.1 最大迭代次数</h3><p>其他因素不变的情况下，最大迭代次数越多，结果的适应度越好，平均GA时间越长。</p><h3 id="4-2-最大种群数量">4.2 最大种群数量</h3><p>其他因素不变的情况下，最大种群数量越多，结果的适应度先上升后下降。这是因为我们此时在锦标赛选择策略种设置的“参赛人员数量”相对于最大种群数量偏小，所以最后选择出来的优秀亲本的实际上可能不优秀，因此每次遗传得到的子代也不够好<br>因此我们我们应该根据最大种群数量来确定竞标赛选择的参赛人员数量，可以设置参赛人员数量是最大种群数量的80%</p><h3 id="4-3-初始变异概率">4.3 初始变异概率</h3><p>其他因素不变的情况下，初始变异概率从小到大，结果的适应度先是很低，然后上升，最后下降。这是因为如果变异概率太大，可能会导致种群里的精英也发生了变异，而精英是最接近最优解的，不应该发生变异；如果变异概率太低，会导致缺乏多样性、解空间覆盖不足、演化速度变慢等问题</p><h3 id="5-评测">5. 评测</h3><p>### 5.1 特点</p><ul><li>没有太多的数学要求：直接对数据结构对象（数串）操作</li><li>利用大量随机技术进行搜索：提升找到全局最优解的概率</li><li>并行化：对种群中每一个个体的操作是相同的，可以同时进行</li><li>评估简单： 仅用适应度函数值来评估个体</li></ul><h3 id="5-2-性质">5.2 性质</h3><ul><li>良好的鲁棒性：遗传算法对问题的参数设置和初始种群的选择相对不敏感</li><li>良好的收敛性：随着算法的迭代，种群的平均适应度也逐渐增加，直至达到一定的稳定状态</li><li>完备性：理论上遗传算法是完备的，然而在实践中，由于搜索空间的复杂性和计算资源的限制，不一定能够找到全局最优解，但遗传算法通常能够找到接近全局最优解的局部最优解</li></ul><h2 id="6-八皇后问题">6. 八皇后问题</h2><p>问题描述：在一个 8x8 的国际象棋棋盘上，摆放八个皇后，使得任意两个皇后都不能在同一行、同一列或同一斜线上共存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取两个随机点</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random2point</span>(<span class="params">size</span>):</span><br><span class="line">  point1 = random.randint(<span class="number">1</span>, size - <span class="number">1</span>)</span><br><span class="line">  point2 = random.randint(<span class="number">1</span>, size - <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">while</span> point1 == point2:</span><br><span class="line">    point2 = random.randint(<span class="number">1</span>, size - <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">min</span>(point1, point2), <span class="built_in">max</span>(point1, point2)     <span class="comment"># 小的在前，大的在后</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始种群生成函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">initial</span>(<span class="params">amount,size</span>):</span><br><span class="line">  population = []</span><br><span class="line">  <span class="keyword">while</span> <span class="built_in">len</span>(population) != amount:        <span class="comment"># 一共生成amount个体</span></span><br><span class="line">      individual = random.sample(<span class="built_in">range</span>(size),size)</span><br><span class="line">      individual = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">str</span>(item) <span class="keyword">for</span> item <span class="keyword">in</span> individual])</span><br><span class="line">      <span class="keyword">if</span> individual <span class="keyword">not</span> <span class="keyword">in</span> population:    <span class="comment"># 确保个体不同</span></span><br><span class="line">          population.append(individual)</span><br><span class="line">  <span class="keyword">return</span> population</span><br><span class="line"></span><br><span class="line"><span class="comment"># 适应度函数：计算冲突数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fitness</span>(<span class="params">individual</span>):</span><br><span class="line">  conflicts = <span class="number">0</span></span><br><span class="line">  size = <span class="built_in">len</span>(individual)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,size-<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>,size):</span><br><span class="line">      diag1 = (<span class="built_in">int</span>(individual[i]) - i) == (<span class="built_in">int</span>(individual[j]) - j)</span><br><span class="line">      diag2 = (<span class="built_in">int</span>(individual[i]) + i) == (<span class="built_in">int</span>(individual[j]) + j)</span><br><span class="line">      <span class="keyword">if</span> individual[i] == individual[j] <span class="keyword">or</span> diag1 <span class="keyword">or</span> diag2:</span><br><span class="line">        conflicts += <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> conflicts   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择策略：锦标赛，随机选10个个体“竞赛”，选出冲突数最小的个体</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tournament_select</span>(<span class="params">population</span>):</span><br><span class="line">  tournament1 = random.sample(population,<span class="number">10</span>)  </span><br><span class="line">  parent1 = <span class="built_in">min</span>(tournament1, key=fitness)</span><br><span class="line">  tournament2 = random.sample(population,<span class="number">10</span>)</span><br><span class="line">  <span class="keyword">if</span> parent1 <span class="keyword">in</span> tournament2:</span><br><span class="line">    tournament2.remove(parent1)</span><br><span class="line">  parent2 = <span class="built_in">min</span>(tournament2, key=fitness)</span><br><span class="line">  <span class="keyword">return</span> parent1,parent2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交叉重组策略：PMX</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">crossover</span>(<span class="params">parent1,parent2</span>):</span><br><span class="line">  size = <span class="built_in">len</span>(parent1)</span><br><span class="line">  child1,child2= [<span class="literal">None</span>] * size,[<span class="literal">None</span>] * size</span><br><span class="line">  mapping1,mapping2= &#123;&#125;,&#123;&#125;</span><br><span class="line">  <span class="comment"># 选择交叉点</span></span><br><span class="line">  point1, point2 = random2point(size)</span><br><span class="line">  <span class="comment"># 复制交叉段</span></span><br><span class="line">  child1[point1:point2 + <span class="number">1</span>] = parent2[point1:point2 + <span class="number">1</span>]</span><br><span class="line">  child2[point1:point2 + <span class="number">1</span>] = parent1[point1:point2 + <span class="number">1</span>]</span><br><span class="line">  <span class="comment"># 创建映射字典</span></span><br><span class="line">  mapping1 = &#123;parent2[i]: parent1[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(point1, point2 + <span class="number">1</span>)&#125;</span><br><span class="line">  mapping2 = &#123;parent1[i]: parent2[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(point1, point2 + <span class="number">1</span>)&#125;</span><br><span class="line">  <span class="comment"># 填充子代</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">    <span class="keyword">if</span> i &lt; point1 <span class="keyword">or</span> i &gt; point2:</span><br><span class="line">      element1 = parent1[i]</span><br><span class="line">      <span class="keyword">while</span> element1 <span class="keyword">in</span> mapping1:</span><br><span class="line">        element1 = mapping1[element1]</span><br><span class="line">      child1[i] = element1</span><br><span class="line"></span><br><span class="line">      element2 = parent2[i]</span><br><span class="line">      <span class="keyword">while</span> element2 <span class="keyword">in</span> mapping2:</span><br><span class="line">        element2 = mapping2[element2]</span><br><span class="line">      child2[i] = element2</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(child1), <span class="string">&#x27;&#x27;</span>.join(child2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基因突变策略：逆转变异</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mutation</span>(<span class="params">individual</span>):</span><br><span class="line">  size = <span class="built_in">len</span>(individual)</span><br><span class="line">  point1, point2 = random2point(size)</span><br><span class="line">  mutate_individual = individual[:point1] + individual[point1:point2+<span class="number">1</span>][::-<span class="number">1</span>] + individual[point2+<span class="number">1</span>:]</span><br><span class="line">  <span class="keyword">return</span> mutate_individual</span><br><span class="line"></span><br><span class="line"><span class="comment">#遗传算法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">genetic</span>(<span class="params">population</span>):</span><br><span class="line">  size = <span class="built_in">len</span>(population)</span><br><span class="line">  max_iteration = <span class="number">1000</span></span><br><span class="line">  iteration = <span class="number">0</span></span><br><span class="line">  mutation_rate = <span class="number">0.05</span>    <span class="comment"># 变异概率</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> iteration != max_iteration:</span><br><span class="line">    <span class="comment"># 按照适应度排序种群</span></span><br><span class="line">    population = <span class="built_in">sorted</span>(population,key=fitness)</span><br><span class="line">    <span class="comment"># 算法终止：找到最优解</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> population:</span><br><span class="line">      <span class="keyword">if</span> fitness(item) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line">    <span class="comment"># 挑选出两个具有优秀基因的个体去交配</span></span><br><span class="line">    parent1,parent2 = tournament_select(population)</span><br><span class="line">    <span class="comment"># 得到两个孩子</span></span><br><span class="line">    child1,child2 = crossover(parent1,parent2)</span><br><span class="line">    <span class="comment"># 替换原有种群具有劣势基因的个体</span></span><br><span class="line">    population[size-<span class="number">1</span>],population[size-<span class="number">2</span>] = child1,child2</span><br><span class="line">    <span class="comment"># 种群每个个体都有可能基因突变</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(population)):</span><br><span class="line">      <span class="keyword">if</span> random.random() &lt; mutation_rate:</span><br><span class="line">        population[i] = mutation(population[i])</span><br><span class="line">    <span class="comment"># 迭代次数+1</span></span><br><span class="line">    iteration += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">population = initial(<span class="number">20</span>,<span class="number">8</span>)</span><br><span class="line">result = genetic(population)</span><br><span class="line"><span class="keyword">if</span> result != <span class="literal">None</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;succss:&#x27;</span>,result)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;fail&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="7-TSP旅行商问题">7.TSP旅行商问题</h2><p>问题描述：假设有一个旅行商需要访问n个城市，并且每对城市之间都有距离或者成本，旅行商需要找到一条最短路径，使得他只访问每个城市一次，并且最终回到出发城市，使得总的访问成本最小。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GeneticAlgTSP</span>():</span><br><span class="line">  <span class="comment"># 初始化种群函数：amount是种群中个体个数，length是个体的染色体长度，且保留精英</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initial_population</span>(<span class="params">self, amount, length, elite</span>):</span><br><span class="line">    population = []</span><br><span class="line">    <span class="comment"># 要求对精英进行一次变异，防止精英占据绝对优势陷入局部最优解</span></span><br><span class="line">    <span class="keyword">if</span> elite != []:</span><br><span class="line">      elite = <span class="variable language_">self</span>.mutate(elite)</span><br><span class="line">      population.append(elite)</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(population) != amount:</span><br><span class="line">      individual = random.sample(<span class="built_in">range</span>(length), length)</span><br><span class="line">      <span class="comment"># 每个个体的染色体要求不同</span></span><br><span class="line">      <span class="keyword">if</span> individual <span class="keyword">not</span> <span class="keyword">in</span> population:</span><br><span class="line">        population.append(individual)</span><br><span class="line">    <span class="keyword">return</span> population</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 初始化城市坐标函数：filename是读取的tsp格式文件名称</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">initial_cities</span>(<span class="params">self, filename</span>):</span><br><span class="line">    cities = []</span><br><span class="line">    <span class="comment"># 得到文件路径</span></span><br><span class="line">    diskpath = os.path.dirname(__file__)</span><br><span class="line">    filepath = diskpath + <span class="string">&#x27;//TSP数据库//&#x27;</span>+ filename</span><br><span class="line">    <span class="comment"># 读取文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filepath, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">      lines = file.readlines()                      <span class="comment"># 读取全部行</span></span><br><span class="line">      <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="keyword">if</span> line.startswith(<span class="string">&quot;EOF&quot;</span>):                  <span class="comment"># 如果是END OF FILE则退出循环</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        data = line.split()                         <span class="comment"># 每行按照空格分开数据</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(data) == <span class="number">3</span> <span class="keyword">and</span> data[<span class="number">0</span>].isdigit():    <span class="comment"># 需要的只是坐标数据，其他忽略</span></span><br><span class="line">          x = <span class="built_in">float</span>(data[<span class="number">1</span>])</span><br><span class="line">          y = <span class="built_in">float</span>(data[<span class="number">2</span>])</span><br><span class="line">          cities.append((x, y))                     <span class="comment"># 将坐标(x, y)加入城市坐标列表</span></span><br><span class="line">    <span class="keyword">return</span> cities</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 初始化类函数：种群列表和城市坐标列表</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, filename, elite</span>):</span><br><span class="line">    <span class="variable language_">self</span>.cities = <span class="variable language_">self</span>.initial_cities(filename)</span><br><span class="line">    <span class="variable language_">self</span>.population = <span class="variable language_">self</span>.initial_population(<span class="number">10</span>, <span class="built_in">len</span>(<span class="variable language_">self</span>.cities), elite)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 随机生成两点函数：限定在size范围内</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">random2point</span>(<span class="params">self, size</span>):</span><br><span class="line">    point1 = random.randint(<span class="number">1</span>, size - <span class="number">1</span>)</span><br><span class="line">    point2 = random.randint(<span class="number">1</span>, size - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> point1 == point2:</span><br><span class="line">      point2 = random.randint(<span class="number">1</span>, size - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(point1, point2), <span class="built_in">max</span>(point1, point2)     <span class="comment"># 小的在前大的在后</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 欧几里得距离函数：根据坐标计算两个城市之间的欧几里得距离</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">euclidean_distance</span>(<span class="params">self, city1, city2</span>):</span><br><span class="line">    x1, y1 = city1</span><br><span class="line">    x2, y2 = city2</span><br><span class="line">    distance = math.sqrt((x2 - x1)**<span class="number">2</span> + (y2 - y1)**<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> distance</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 适应度函数：计算闭合旅行路径的总长度</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">fitness</span>(<span class="params">self, individual</span>):</span><br><span class="line">    amount = <span class="built_in">len</span>(individual)</span><br><span class="line">    distance = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(amount):</span><br><span class="line">      city1 = <span class="variable language_">self</span>.cities[individual[i]]</span><br><span class="line">      city2 = <span class="variable language_">self</span>.cities[individual[(i + <span class="number">1</span>) % amount]]       <span class="comment"># 取模可以确保得到闭合环路</span></span><br><span class="line">      distance += <span class="variable language_">self</span>.euclidean_distance(city1, city2)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(distance)                                        <span class="comment"># 取整</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 选择策略：锦标赛-&gt;随机选8个个体竞赛，选出适应度最好的个体</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">tournament_select</span>(<span class="params">self, population</span>):</span><br><span class="line">    group1 = random.sample(population, <span class="number">8</span>)</span><br><span class="line">    parent1 = <span class="built_in">min</span>(group1, key=<span class="variable language_">self</span>.fitness)</span><br><span class="line">    group2 = random.sample(population, <span class="number">8</span>)</span><br><span class="line">    <span class="keyword">if</span> parent1 <span class="keyword">in</span> group2:</span><br><span class="line">      group2.remove(parent1)                 <span class="comment"># 确保选择的两个个体不重复</span></span><br><span class="line">    parent2 = <span class="built_in">min</span>(group2, key=<span class="variable language_">self</span>.fitness)</span><br><span class="line">    <span class="keyword">return</span> parent1, parent2</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 交叉重组策略：部分映射交叉PMX</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">crossover</span>(<span class="params">self, parent1, parent2</span>):</span><br><span class="line">    size = <span class="built_in">len</span>(parent1)</span><br><span class="line">    child1, child2 = [<span class="literal">None</span>] * size, [<span class="literal">None</span>] * size</span><br><span class="line">    <span class="comment"># 选择交叉点</span></span><br><span class="line">    point1, point2 = <span class="variable language_">self</span>.random2point(size)</span><br><span class="line">    <span class="comment"># 复制交叉段</span></span><br><span class="line">    child1[point1:point2 + <span class="number">1</span>] = parent2[point1:point2 + <span class="number">1</span>]</span><br><span class="line">    child2[point1:point2 + <span class="number">1</span>] = parent1[point1:point2 + <span class="number">1</span>]</span><br><span class="line">    <span class="comment"># 创建映射字典</span></span><br><span class="line">    mapping1 = &#123;parent2[i]: parent1[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(point1, point2 + <span class="number">1</span>)&#125;</span><br><span class="line">    mapping2 = &#123;parent1[i]: parent2[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(point1, point2 + <span class="number">1</span>)&#125;</span><br><span class="line">    <span class="comment"># 填充非交叉段</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">      <span class="keyword">if</span> i &lt; point1 <span class="keyword">or</span> i &gt; point2:</span><br><span class="line">        element1 = parent1[i]</span><br><span class="line">        <span class="keyword">while</span> element1 <span class="keyword">in</span> mapping1:</span><br><span class="line">          element1 = mapping1[element1]</span><br><span class="line">        child1[i] = element1</span><br><span class="line"></span><br><span class="line">        element2 = parent2[i]</span><br><span class="line">        <span class="keyword">while</span> element2 <span class="keyword">in</span> mapping2:</span><br><span class="line">          element2 = mapping2[element2]</span><br><span class="line">        child2[i] = element2</span><br><span class="line">    <span class="keyword">return</span> child1, child2</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 基因突变策略：逆转变异</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">mutate</span>(<span class="params">self, individual</span>):</span><br><span class="line">    size = <span class="built_in">len</span>(individual)</span><br><span class="line">    point1, point2 = <span class="variable language_">self</span>.random2point(size)</span><br><span class="line">    mutate_individual = individual[:point1] + individual[point1:point2 + <span class="number">1</span>][::-<span class="number">1</span>] + individual[point2 + <span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">return</span> mutate_individual</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 遗传算法</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">GA</span>(<span class="params">self, max_iterations, max_populations, mutate_rate</span>):</span><br><span class="line">    iteration = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> iteration != max_iterations:</span><br><span class="line">      size = <span class="built_in">len</span>(<span class="variable language_">self</span>.population)</span><br><span class="line">      <span class="comment"># 挑选出两个具有优秀基因的个体去交配</span></span><br><span class="line">      parent1, parent2 = <span class="variable language_">self</span>.tournament_select(<span class="variable language_">self</span>.population)</span><br><span class="line">      <span class="comment"># 得到两个孩子</span></span><br><span class="line">      child1, child2 = <span class="variable language_">self</span>.crossover(parent1, parent2)</span><br><span class="line">      <span class="comment"># 如果数量已经到达环境容纳量，则替换原有种群具有劣势基因的个体，否则直接加入种群</span></span><br><span class="line">      <span class="variable language_">self</span>.population = <span class="built_in">sorted</span>(<span class="variable language_">self</span>.population, key=<span class="variable language_">self</span>.fitness)  </span><br><span class="line">      <span class="keyword">if</span> size == max_populations:</span><br><span class="line">        <span class="variable language_">self</span>.population[size - <span class="number">1</span>], <span class="variable language_">self</span>.population[size - <span class="number">2</span>] = child1, child2</span><br><span class="line">      <span class="keyword">elif</span> size &lt;= <span class="number">18</span>:</span><br><span class="line">        <span class="variable language_">self</span>.population.append(child1)</span><br><span class="line">        <span class="variable language_">self</span>.population.append(child2)</span><br><span class="line">      <span class="comment"># 种群每个个体都有可能基因突变</span></span><br><span class="line">      <span class="variable language_">self</span>.population = <span class="built_in">sorted</span>(<span class="variable language_">self</span>.population, key=<span class="variable language_">self</span>.fitness)  </span><br><span class="line">      rate = mutate_rate      <span class="comment"># 初始变异概率相同                                         </span></span><br><span class="line">      <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="variable language_">self</span>.population)):</span><br><span class="line">        <span class="keyword">if</span> random.random() &lt; mutate_rate:</span><br><span class="line">          <span class="variable language_">self</span>.population[i] = <span class="variable language_">self</span>.mutate(<span class="variable language_">self</span>.population[i])</span><br><span class="line">        rate += <span class="number">0.01</span>        <span class="comment"># 适应度值越高，基因越劣质，变异概率越高</span></span><br><span class="line">      iteration += <span class="number">1</span></span><br><span class="line">    <span class="variable language_">self</span>.population = <span class="built_in">sorted</span>(<span class="variable language_">self</span>.population, key=<span class="variable language_">self</span>.fitness)</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">self</span>.fitness(<span class="variable language_">self</span>.population[<span class="number">0</span>]), <span class="variable language_">self</span>.population[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可视化路径函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_path</span>(<span class="params">points, path</span>):</span><br><span class="line">  <span class="comment"># 擦除掉原先的图</span></span><br><span class="line">  plt.cla()</span><br><span class="line">  <span class="comment"># 提取点的坐标</span></span><br><span class="line">  x_values = [point[<span class="number">0</span>] <span class="keyword">for</span> point <span class="keyword">in</span> points]</span><br><span class="line">  y_values = [point[<span class="number">1</span>] <span class="keyword">for</span> point <span class="keyword">in</span> points]</span><br><span class="line">  <span class="comment"># 绘制点</span></span><br><span class="line">  plt.scatter(x_values, y_values, color=<span class="string">&#x27;blue&#x27;</span>, s=<span class="number">15</span>)</span><br><span class="line">  <span class="comment"># 绘制路径</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(path) - <span class="number">1</span>):</span><br><span class="line">    point1 = points[path[i]]</span><br><span class="line">    point2 = points[path[i + <span class="number">1</span>]]</span><br><span class="line">    plt.plot([point1[<span class="number">0</span>], point2[<span class="number">0</span>]], [point1[<span class="number">1</span>], point2[<span class="number">1</span>]], color=<span class="string">&#x27;red&#x27;</span>, linewidth=<span class="number">0.1</span>)</span><br><span class="line">  <span class="comment"># 连接最后一个点和第一个点，形成闭合路径</span></span><br><span class="line">  point1 = points[path[-<span class="number">1</span>]]</span><br><span class="line">  point2 = points[path[<span class="number">0</span>]]</span><br><span class="line">  plt.plot([point1[<span class="number">0</span>], point2[<span class="number">0</span>]], [point1[<span class="number">1</span>], point2[<span class="number">1</span>]], color=<span class="string">&#x27;red&#x27;</span>, linewidth=<span class="number">0.1</span>)</span><br><span class="line">  <span class="comment"># 设置标题和标签</span></span><br><span class="line">  plt.title(<span class="string">&#x27;Visualization of Path&#x27;</span>)</span><br><span class="line">  plt.xlabel(<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">  plt.ylabel(<span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">  plt.legend([<span class="string">&#x27;points&#x27;</span>, <span class="string">&#x27;path&#x27;</span>], loc=<span class="string">&#x27;upper right&#x27;</span>)</span><br><span class="line">  <span class="comment"># 重新画图</span></span><br><span class="line">  plt.draw()</span><br><span class="line">  <span class="comment"># 控制更新频率</span></span><br><span class="line">  plt.pause(<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进化算法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">EA</span>(<span class="params">filename</span>):</span><br><span class="line">  max_iterations = <span class="number">10000</span>          <span class="comment"># 最大迭代次数</span></span><br><span class="line">  max_generations = <span class="number">100</span>           <span class="comment"># 最大进化次数</span></span><br><span class="line">  max_populations = <span class="number">20</span>            <span class="comment"># 最大种群数量</span></span><br><span class="line">  max_blocktime = <span class="number">15</span>              <span class="comment"># 最大阻塞次数</span></span><br><span class="line">  mutate_rate = <span class="number">0.08</span>              <span class="comment"># 初始变异概率</span></span><br><span class="line"></span><br><span class="line">  generation = <span class="number">0</span></span><br><span class="line">  best_distance = <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">  best_path = []</span><br><span class="line"></span><br><span class="line">  blocktime = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> generation != max_generations:</span><br><span class="line">    solve = GeneticAlgTSP(filename, best_path)</span><br><span class="line">    distance, path = solve.GA(max_iterations, max_populations, mutate_rate)</span><br><span class="line">    <span class="comment"># 进化的本质:找到比上一代精英还要好的个体</span></span><br><span class="line">    <span class="keyword">if</span> distance &lt; best_distance <span class="keyword">or</span> blocktime == max_blocktime:</span><br><span class="line">      <span class="keyword">if</span> distance &lt; best_distance:</span><br><span class="line">        best_distance = distance</span><br><span class="line">        best_path = path</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&quot;第&quot;</span>, generation + <span class="number">1</span>, <span class="string">&quot;次路径长度:&quot;</span>, best_distance)</span><br><span class="line">      plot_path(solve.cities, best_path)</span><br><span class="line">      blocktime = <span class="number">0</span></span><br><span class="line">      generation += <span class="number">1</span></span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    blocktime += <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> best_distance, best_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">filename = <span class="string">&#x27;//&#x27;</span> + <span class="string">&#x27;rw1621&#x27;</span>+ <span class="string">&#x27;.tsp&#x27;</span></span><br><span class="line">best_distance,best_path = EA(filename)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最佳路线:&quot;</span>,best_path)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最短距离&quot;</span>,best_distance)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>启发式搜索</title>
      <link href="/posts/5ef94582/"/>
      <url>/posts/5ef94582/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-启发式搜索">1. 启发式搜索</h2><p>盲目搜索的局限性：没有考虑边界上哪一个状态结点更具有前景，即扩展它更有可能得到目标状态，然而实际问题中可以根据额外的知识来衡量每个状态的前景</p><p><strong>评估函数：f(n) = g(n) + h(n)</strong></p><ul><li>实际代价函数g(n)：从起始结点到当前结点的最小步数估计值，影响得到解的最优性</li><li>启发式函数h(n)：从当前结点到目标结点的最小步数估计值，影响发现解的速度</li><li>评估函数f(n)：从起始结点到目标结点且经过当前结点的最小步数估计值</li></ul><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d6bd46a7d49d912f1b560446a5f6b8b9.png" alt=""></p><h2 id="2-贪婪最好优先搜索算法（GBFS）">2. 贪婪最好优先搜索算法（GBFS）</h2><p>核心思想：只令f(n)=h(n)，选择边界中h值最小的结点来扩展</p><p>步骤：</p><ol><li>从初始结点开始，将其放入优先级队列中</li><li>从优先级队列中取出h(n)最小的结点</li><li>如果该结点是目标结点，则搜索结束并返回过程</li><li>否则，扩展该结点，将其邻居结点加入优先级队列中，并根据它们的评估函数值重新排序队列</li><li>重复2-4步，直到找到目标结点或优先级队列为空</li></ol><p>评测</p><ul><li>贪婪的本质：每一步都倾向于沿着直接通往目标的路径前进，然而却忽略了先前路径的实际代价，可能会导致在搜索空间中陷入局部最优解而非全局最优解</li><li>不具有完备性</li><li>不具有最优性</li></ul><h2 id="3-A和A-算法">3. A和A*算法</h2><h3 id="3-1-核心思想">3.1 核心思想</h3><ul><li>令f(n)=g(n) + h(n)，选择边界中f值最小的结点来扩展，并在扩展过程中不断更新每个结点的g值</li><li>更新路径：若已知结点n的实际代价g(n)和从结点n到结点m的路径为c(n-&gt;m)，则g(m) = g(n) + c(c-&gt;m)</li><li><em>的含义：在数学中，一个变量加</em>（star）表示最优状况，当A算法中的参数设置最优时，A算法会演变为A*算法</li></ul><h3 id="3-2-数据结构">3.2 数据结构</h3><ul><li>OPEN表：存储还未被扩展且可以被扩展的结点</li><li>CLOSED表：存储已经被扩展的结点</li><li>结点n的数据域：h(n)，g(n)</li><li>结点n的指针域：父结点指针，子结点指针</li></ul><h3 id="3-3-A算法的步骤">3.3 A算法的步骤</h3><ol><li>将初始结点s放入OPEN表，将CLOSED表清空</li><li>将OPEN表中的结点按照评估函数值的大小升序排列，取出评估函数值最小的结点n</li><li>如果结点n不是目标结点且它有后继结点，遍历它的所有后继结点m：</li><li>如果后继结点m在OPEN表，说明后继结点m有两个父结点，即有两条从初始结点s到结点m路径，因此更新后继结点选择较小的g值，并更新后继结点m的父结点指针为结点n</li><li>如果后继结点m在CLOSED表，说明后继结点m有两个父结点，如果后继结点m相对于结点n的g值更小，则更新后继结点m的父结点指针为结点n，并将该后继结点m移除CLOSED表加入OPEN表，回到第3.1步</li><li>如果后继结点不在OPEN表也不在CLOSED表，说明找到一个全新结点，直接将后继结点m加入OPEN表</li><li>将结点n放入CLOSED表中，如果OPEN表不为空，回到第2步</li></ol><p>方框图</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/5b3d6cc7aa7fd88472b5e8c633602e4d.png" alt=""></p><p>伪代码</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/2051db5be1bda92d570c72648c9f8d8d.png" alt=""></p><h3 id="3-4-A-算法的区别">3.4 A*算法的区别</h3><p>在上述3.2步时，如果n的后继结点m在CLOSED表，我们会更新相关信息并把m移除CLOSED表加入OPEN表。<br>但是如果设置的启发式函数h的是最优的启发式函数h*，那么A算法会进化成A*算法，区别在于：</p><ul><li>第一次遍历到后继结点m并将m加入到CLOSED表时，就已经找到了结点m的最优目标函数值f*(m)，之后如果再遍历到m，就无需判断更新，即CLOSED表只进不出</li><li>可以发现，A<em>算法会比A算法节省很多空间和时间，因此关键在于：如何实现A</em> --&gt; 如何设置最优启发式函数f* --&gt; 如何设置最优评估函数h*</li></ul><p><img src="https://i-blog.csdnimg.cn/blog_migrate/b47f0db4f56328f7a9786b20ed4746af.jpeg" alt=""></p><h2 id="4-h-n-的性质">4. h*(n)的性质</h2><ol><li>可采纳性：假设h*(n)是从结点n到目标结点的实际最优路径成本，当对于所有节点n，满足h(n) &lt;= h*(n)</li></ol><blockquote><p>理解：h(n)是从结点n到目标结点的估计路径成本，如果估计比实际还低，那么对于用户来说显然是欣然接受的</p></blockquote><ol start="2"><li>单调性：对任一结点n和它的后继节点m都有h(n)&lt;=c(n-&gt;m) + h(m)</li></ol><blockquote><p>理解：从n到目标结点的估计，永远都比先从n到m再从m到目标结点的估计小</p></blockquote><ol start="3"><li>定理</li></ol><ul><li>满足可采纳性则满足最优性（反之不一定成立）</li><li>满足单调性则一定满足可采纳性（反之不一定成立）</li><li>最优性保证我们在第一次遍历到一个结点时，就是沿着到这个结点的最优路径扩展的，因此如果h(n)满足单调性，则不需要进行环检测</li></ul><h2 id="5-迭代加深A-算法">5. 迭代加深A*算法</h2><p>步骤</p><ol><li>初始化深度阈值为起始结点的评估函数值，将起始结点入栈</li><li>弹出栈顶结点，如果栈顶结点等于目标结点，则退出循环并返回路径</li><li>否则，对栈顶结点的全部子结点进行判断：</li><li>若该子结点的评估函数值 &gt; 当前深度阈值，则忽略该子结点</li><li>若该子结点的评估函数值 ≤ 等于当前深度阈值，则将该子结点入栈</li><li>重复执行3和4步，直到栈空则递增深度阈值，返回第2步开始</li></ol><p>性质分析</p><ul><li>优点：避免了无用结点的存储，所需内存小，空闲复杂度小</li><li>缺点：每次增加深度，都要从起始结点重新开始迭代，时间复杂度高</li></ul><h2 id="6-创建可接纳的启发式函数">6. 创建可接纳的启发式函数</h2><h3 id="6-1-松弛问题">6.1 松弛问题</h3><p>概念：将原始问题的制约条件删减得到松弛问题，将松弛问题解作为启发式函数</p><p>原理：因为松弛问题的解步骤一定比原始问题的解步骤少，即h(n) &lt; h*(n)</p><p>常用方法：网格问题中的距离公式：假设两位置为(x1,y1)、(x2,y2)</p><ul><li>Manhattan曼哈顿距离d = |x1-x2| + |y1-y2|</li><li>Diagonal对角线距离d = max{|x1-x2| , |y1-y2|}</li><li>Euclidean欧式距离d = [(x1-x2)2 + (y1-y2)2]1/2</li></ul><h3 id="6-2-例子：八数码问题">6.2 例子：八数码问题</h3><ol><li>方法一</li></ol><ul><li>松弛问题：只要方块A和B位置上/下/左/右相邻就可以把A移动到B</li><li>启发式函数h(n) = 所有方块到达其目标位置的曼哈顿距离之和</li></ul><p><img src="https://i-blog.csdnimg.cn/blog_migrate/6be2781361833313ca4b5decd277571d.jpeg" alt=""></p><ol start="2"><li>方法二</li></ol><ul><li>松弛问题：任意情况都可以移动</li><li>启发式函数h(n) = 当前状态与目标状态位置不同的方块数</li></ul><p><img src="https://i-blog.csdnimg.cn/blog_migrate/875057d51207416bc98cd80a071f3c47.png" alt=""></p><h3 id="6-3-支配">6.3 支配</h3><p>定义：假设h1和h2都是可采纳的启发式函数，如果对任意结点n都有h1(n) &lt; h2(n)，则h2支配了h1函数</p><blockquote><p>理解：h2支配h1，说明h2比h1含有更多的启发式信息，更具有价值</p></blockquote><p>定理：若h2支配h1，那么使用h2扩展的结点包含了使用h1扩展的结点</p><p>最大式组合：若h2和h1互不包含，可以取h = max(h1,h2)</p><h2 id="7-实践：八数码问题">7. 实践：八数码问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>:</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,matrix,cost,path</span>):</span><br><span class="line">    <span class="variable language_">self</span>.matrix = matrix                    <span class="comment"># 状态</span></span><br><span class="line">    <span class="variable language_">self</span>.cost = cost                        <span class="comment"># 代价</span></span><br><span class="line">    <span class="variable language_">self</span>.value = <span class="variable language_">self</span>.evaluate(<span class="variable language_">self</span>.matrix) <span class="comment"># 价值</span></span><br><span class="line">    <span class="variable language_">self</span>.path = path                        <span class="comment"># 从起始结点到当前结点的路径</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 评估函数：曼哈顿距离</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">evaluate</span>(<span class="params">self,cur_matrix</span>):</span><br><span class="line">    end_matrix = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">8</span>, <span class="number">0</span>, <span class="number">4</span>], [<span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>]])</span><br><span class="line">    Manhattan_distance = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 坐标绝对值差的总和</span></span><br><span class="line">    <span class="keyword">for</span> index,element <span class="keyword">in</span> np.ndenumerate(cur_matrix):</span><br><span class="line">      x1,y1 = index[<span class="number">0</span>],index[<span class="number">1</span>]</span><br><span class="line">      x2,y2 = find_number(end_matrix,element)</span><br><span class="line">      Manhattan_distance += <span class="built_in">abs</span>(x1-x2)</span><br><span class="line">      Manhattan_distance += <span class="built_in">abs</span>(y1-y2)</span><br><span class="line">    <span class="keyword">return</span> Manhattan_distance</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到数字的行列坐标</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_number</span>(<span class="params">matrix,number</span>):</span><br><span class="line">  x,y = np.where(matrix == number)</span><br><span class="line">  <span class="keyword">return</span> x[<span class="number">0</span>],y[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 与0交换位置，获取当前状态的全部子状态</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">swap_zero</span>(<span class="params">matrix</span>):</span><br><span class="line">  x,y = find_number(matrix,<span class="number">0</span>)</span><br><span class="line">  sub_matrixs = []</span><br><span class="line">  <span class="comment"># 往上移动</span></span><br><span class="line">  <span class="keyword">if</span> x != <span class="number">0</span>:</span><br><span class="line">    num = np.copy(matrix)</span><br><span class="line">    num[x][y] = num[x-<span class="number">1</span>][y]</span><br><span class="line">    num[x-<span class="number">1</span>][y] = <span class="number">0</span></span><br><span class="line">    sub_matrixs.append(num)</span><br><span class="line">  <span class="comment"># 往下移动</span></span><br><span class="line">  <span class="keyword">if</span> x != <span class="number">2</span>:</span><br><span class="line">    num = np.copy(matrix)</span><br><span class="line">    num[x][y] = num[x+<span class="number">1</span>][y]</span><br><span class="line">    num[x+<span class="number">1</span>][y] = <span class="number">0</span></span><br><span class="line">    sub_matrixs.append(num)</span><br><span class="line">  <span class="comment"># 往左移动</span></span><br><span class="line">  <span class="keyword">if</span> y != <span class="number">0</span>:</span><br><span class="line">    num = np.copy(matrix)</span><br><span class="line">    num[x][y] = num[x][y-<span class="number">1</span>]</span><br><span class="line">    num[x][y-<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">    sub_matrixs.append(num)</span><br><span class="line">  <span class="comment"># 往右移动</span></span><br><span class="line">  <span class="keyword">if</span> y != <span class="number">2</span>:</span><br><span class="line">    num = np.copy(matrix)</span><br><span class="line">    num[x][y] = num[x][y+<span class="number">1</span>]</span><br><span class="line">    num[x][y+<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">    sub_matrixs.append(num)</span><br><span class="line">  <span class="keyword">return</span> sub_matrixs</span><br><span class="line"></span><br><span class="line"><span class="comment"># A*算法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Astar</span>(<span class="params">start_matrix,end_matrix</span>):</span><br><span class="line">  CLOSED = []     <span class="comment"># 记录已扩展的结点</span></span><br><span class="line">  OPEN = []       <span class="comment"># 记录已得到但还未被扩展的结点</span></span><br><span class="line">  OPEN.append(Node(start_matrix,<span class="number">0</span>,[]))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> OPEN:</span><br><span class="line">    <span class="comment"># 对OPEN表升序排序</span></span><br><span class="line">    OPEN.sort(key=<span class="keyword">lambda</span> x:x.value + x.cost)</span><br><span class="line">    <span class="comment"># 取出OPEN表中目标函数值最小的结点</span></span><br><span class="line">    curnode = OPEN.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 如果是目标状态，则返回目标路径</span></span><br><span class="line">    <span class="keyword">if</span> np.array_equal(curnode.matrix,end_matrix):</span><br><span class="line">      curnode.path.append(Node(end_matrix,<span class="number">0</span>,[]))</span><br><span class="line">      <span class="keyword">return</span> curnode.path</span><br><span class="line">    <span class="comment"># 扩展当前结点</span></span><br><span class="line">    sub_matrixs = swap_zero(curnode.matrix)</span><br><span class="line">    <span class="comment"># 遍历子结点</span></span><br><span class="line">    <span class="keyword">for</span> sub_matrix <span class="keyword">in</span> sub_matrixs:</span><br><span class="line">      <span class="comment"># 是否在CLOSED表</span></span><br><span class="line">      found_in_closed = <span class="literal">False</span></span><br><span class="line">      <span class="keyword">for</span> closed_matrix <span class="keyword">in</span> CLOSED:</span><br><span class="line">        <span class="keyword">if</span> np.array_equal(sub_matrix, closed_matrix):</span><br><span class="line">          found_in_closed = <span class="literal">True</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">      <span class="comment"># 如果在CLOSED表，则无需操作</span></span><br><span class="line">      <span class="keyword">if</span> found_in_closed:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 是否在OPEN表</span></span><br><span class="line">      found_in_open = <span class="literal">False</span></span><br><span class="line">      <span class="keyword">for</span> item <span class="keyword">in</span> OPEN:</span><br><span class="line">        <span class="keyword">if</span> np.array_equal(item.matrix, sub_matrix):</span><br><span class="line">          found_in_open = <span class="literal">True</span></span><br><span class="line">          <span class="comment"># 找到之后，需要对目标函数值进行判断更新</span></span><br><span class="line">          <span class="keyword">if</span>  curnode.cost + <span class="number">1</span> &lt; item.cost: </span><br><span class="line">            item.cost = curnode.cost + <span class="number">1</span></span><br><span class="line">            item.path = curnode.path + [curnode]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">      <span class="comment"># 如果不在OPEN表，代表是新结点，则直接加入OPEN表</span></span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> found_in_open:</span><br><span class="line">        newpath = curnode.path + [curnode]</span><br><span class="line">        <span class="comment"># 代价就是当前路径长度+1</span></span><br><span class="line">        newnode = Node(sub_matrix,curnode.cost + <span class="number">1</span>,newpath)</span><br><span class="line">        OPEN.append(newnode)</span><br><span class="line">    CLOSED.append(curnode.matrix)   <span class="comment"># 将该结点加入CLOSED表</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Print</span>(<span class="params">matrix</span>):</span><br><span class="line">  <span class="keyword">for</span> row <span class="keyword">in</span> matrix:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br><span class="line">  <span class="built_in">print</span>()</span><br><span class="line">    </span><br><span class="line">start_matrix = np.array([[<span class="number">2</span>, <span class="number">8</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">6</span>, <span class="number">4</span>], [<span class="number">7</span>, <span class="number">0</span>, <span class="number">5</span>]])</span><br><span class="line">end_matrix = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">8</span>, <span class="number">0</span>, <span class="number">4</span>], [<span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>]])</span><br><span class="line">path = Astar(start_matrix,end_matrix)</span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> path:</span><br><span class="line">    Print(node.matrix)</span><br></pre></td></tr></table></figure><p><img src="https://i-blog.csdnimg.cn/blog_migrate/35a3b832a22222916a72dcc9dbfcc3d3.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>α-β剪枝</title>
      <link href="/posts/46ae7d29/"/>
      <url>/posts/46ae7d29/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-博弈">1. 博弈</h2><h3 id="1-1-前提">1.1 前提</h3><p><strong>双人博弈</strong>：博弈对象只有己方和对方，没有第三方<br><strong>二人零和</strong>：若一方获胜取得x分，则另一方失败取得-x分<br><strong>全信息</strong>：博弈过程中，任何一方都完全了解当前格局和过去历史，不存在信息差<br><strong>非偶然</strong>：任何一方都只能根据当前实际情况来采取行动，不存在“碰运气”的行为<br><strong>利益完全对立</strong>：任何一方动作的目的都只能是击败对方，不存在暂时合作<br><strong>交替行动</strong>：每方一次只能进行一次动作，接着就轮到对方做动作</p><h3 id="1-2-博弈树">1.2 博弈树</h3><p>根结点：博弈的初始状态<br>叶子结点：博弈的终止状态<br>边：可能的行动<br><strong>效益值</strong>：每个终止状态对一方的有利程度和对另一方的不利程度<br><strong>估值函数e(p)</strong>：根据当前状态p和博弈规则，给出当前结点p的效益值<br><strong>深度</strong>：计算当前状态的效益值所需要向下参考的子树层数</p><h2 id="2-极大极小分析法">2. 极大极小分析法</h2><p><strong>零和</strong>：若己方的效益值为x则对方的效益值为-x，因此<font color="orangered">只需考虑其中一方的的效益值</font></p><p><strong>倒推法</strong>：自底向上，根据子结点的效益值确定父结点的效益值，且<font color="orangered">叶子结点的效益值是已知的</font></p><p><strong>博弈目的</strong>：若将己方作为根结点要获胜，则<font color="orangered">己方每次选择都要追求最大的效益值，而对方每次选择都要追求最小的效益值</font></p><p>MAX结点：==己方做选择的层的全部结点，总是选择效益值最大的子结点–&gt;对己方最有利（极大的含义）==<br>MIN结点 ：==对方做选择的层的全部结点，总是选择效益值最小的子结点–&gt;对己方最不利（极小的含义）==</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/b49aa5b39ebe8240435a969f3588e5c0.jpeg" alt=""></p><h2 id="3-α-β剪枝">3. α-β剪枝</h2><h3 id="3-1-基本概念">3.1 基本概念</h3><p>极大极小算法的局限性：必须算出全部子结点结点的效益值才能判断父节点的效益值</p><p>极大极小算法的优化：及时剪掉无用的子结点分枝，仅根据部分子结点就可以得到父节点的效益值</p><p>MAX结点：</p><ul><li>α值：MAX结点的子结点的最大值</li><li>β值：MAX结点的左边/已遍历兄弟结点的最小值</li></ul><p>MIN结点：</p><ul><li>α值：MIN结点的左边/已遍历兄弟结点的最大值</li><li>β值：MIN结点的子结点的最小值</li></ul><h3 id="3-2-α剪枝–删除以MAX结点为根结点的分支">3.2 α剪枝–删除以MAX结点为根结点的分支</h3><p>剪枝原理：MAX结点选择最大值，但MAX结点的父结点是MIN结点要选择最小值，<font color="orangered">如果存在α&gt;β即该MAX结点最终取值一定≥α，因此MIN结点会暂时选择β分支，而不会考虑α分支</font>（所以才叫α-cuts）</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/a9745c68c186334f8b029515b3b71c17.png" alt=""></p><h3 id="3-3-β剪枝–删除以MIN结点为根结点的分支">3.3 β剪枝–删除以MIN结点为根结点的分支</h3><p>剪枝原理：MIN结点选择最小值，但MIN结点的父结点是MAX结点要选择最大值，<font color="orangered">如果存在α&gt;β即该MIN结点最终取值一定≤β，因此MAX结点会暂时选择α分支，而不会考虑β分支</font>（所以才叫β-cuts）</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/cea66e7bf3bdc27a3bab971d4c208fa3.png" alt=""></p><h2 id="4-α-β剪枝算法分析">4. α-β剪枝算法分析</h2><h3 id="4-1-算法的操作（重点）">4.1 算法的操作（重点）</h3><ul><li>初始化：令根节点的α=-∞，β=+∞</li><li><strong>传递（从上往下）</strong>：==将父结点α值和β值都赋给子结点==</li><li><strong>回溯（从下往上）</strong>：==父MAX结点的α值 = 子MIN结点的β值，父MIN结点的β值 = 子MAX结点的α值==</li><li><strong>剪枝（从左往右）</strong>：==如果结点更新后的α≥β，则剪去以该结点为根结点的分支==</li></ul><h3 id="4-2-操作的理解（赋值原理）">4.2 操作的理解（赋值原理）</h3><ul><li><p><strong>回溯的单一赋值</strong>：MAX的β值与子结点无关，MIN的α值与子结点无关</p></li><li><p><strong>回溯的交叉赋值</strong>：</p><ul><li>父MAX的α值取决于子MIN，子MIN根据β取值</li><li>父MIN的β值取决于子MAX，子MAX根据α取值</li></ul></li><li><p><strong>传递的对应赋值</strong>：</p><ul><li>MAX的子结点最大值 = 子结点已遍历兄弟结点的最大值 --&gt; 父MAX结点的α值与子MIN结点的α值是相同的</li><li>MIN的子结点最小值 = 子结点已遍历兄弟结点的最小值 --&gt; 父MIN结点的β值与子MAX结点MAX的β值是相同的</li></ul></li><li><p>虽然MAX和MIN结点的α值和β值的意义不一样，但是观察发现上述<font color="orangered">α-cut和β-cut的前提都是α≥β</font></p></li></ul><h3 id="4-3-算法的流程（详细图解）">4.3 算法的流程（详细图解）</h3><ol><li><font color="orangered">令根结点的α = +∞，β = -∞</font>，然后逐渐向下传递，直到遇到第一个叶子结点</li><li>反复进行以下三步：<ul><li><font color="orangered">传递：根据父结点更新子结点 -&gt; 成对对应赋值</font></li><li><font color="orangered">回溯：根据子结点更新父结点 -&gt; 单一交叉赋值</font></li><li><font color="orangered">剪枝：一旦出现α ≥ β的情况，及时剪枝</font></li></ul></li><li>得到根结点的效益值，并选择对应的子结点作为下一次扩展的根结点</li></ol><p><img src="https://i-blog.csdnimg.cn/blog_migrate/fcdd66285f1fcf3543e6f220c982d61e.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/69db70e8db6c9371f63d1ba43eb71c8a.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/e805d04d9bce3ded9f3a96bac8818143.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/41da04f965a114766cf637851107d3fd.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/079ff15a0e51e213b49cc9a992c43845.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/db2fabdca280967a38e0a6ed7fd88a51.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/01c67564d531f5547e1880f7255e5516.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/a596152edd2b986645a5a26a499334b6.png" alt=""><br><img src="https://i-blog.csdnimg.cn/blog_migrate/5d48c9d6cbd90c963c4f24b9e9c7852d.png" alt=""></p><h3 id="4-4-伪代码">4.4 伪代码</h3><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/AI/202408311723886.png" alt=""></p><h2 id="5-α-β算法的通用代码">5. α-β算法的通用代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span>:</span><br><span class="line">    <span class="comment"># 初始化数据成员</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,state,side</span>):</span><br><span class="line">        <span class="variable language_">self</span>.state = state      <span class="comment"># 当前状态</span></span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">next</span> = <span class="literal">None</span>        <span class="comment"># 目标状态</span></span><br><span class="line">    <span class="comment"># 获取当前状态的全部子状态</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_substates</span>(<span class="params">self,nextside</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="comment"># 获取当前节点对应状态的目标价值</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">evaluate</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="comment"># 检查是否是最佳状态或最坏状态</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">alpha_beta_cut</span>(<span class="params">node:Node,alpha,beta,turn,depth,max_depth</span>):</span><br><span class="line">    flag = node.check()</span><br><span class="line">    <span class="keyword">if</span> flag == 最佳状态:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> flag == 最坏状态:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> flag == 持平状态:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> depth == max_depth:</span><br><span class="line">        <span class="keyword">return</span> node.evaluate()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> turn == <span class="string">&#x27;MAX&#x27;</span>:</span><br><span class="line">        node_alpha,node_beta = alpha,beta</span><br><span class="line">        <span class="keyword">for</span> substate <span class="keyword">in</span> node.get_substates(turn):</span><br><span class="line">            subnode = Node(substate)</span><br><span class="line">            value = alpha_beta_cut(subnode,node_alpha,node_beta,<span class="string">&#x27;MIN&#x27;</span>,depth+<span class="number">1</span>,max_depth)</span><br><span class="line">            <span class="keyword">if</span> node_alpha &lt; value:</span><br><span class="line">                node_alpha = value</span><br><span class="line">                node.<span class="built_in">next</span> = substate</span><br><span class="line">            <span class="keyword">if</span> node_alpha &gt;= node_beta:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> node_alpha</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> turn == <span class="string">&#x27;MIN&#x27;</span>:</span><br><span class="line">        node_alpha,node_beta = alpha,beta</span><br><span class="line">        <span class="keyword">for</span> substate <span class="keyword">in</span> node.get_substates(turn):</span><br><span class="line">            subnode = Node(substate)</span><br><span class="line">            value = alpha_beta_cut(subnode,node_alpha,node_beta,<span class="string">&#x27;MAX&#x27;</span>,depth+<span class="number">1</span>,max_depth)</span><br><span class="line">            <span class="keyword">if</span> node_beta &gt; value:</span><br><span class="line">                node_beta = value</span><br><span class="line">                node.<span class="built_in">next</span> = substate</span><br><span class="line">            <span class="keyword">if</span> node_alpha &gt;= node_beta:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">return</span> node_beta</span><br><span class="line"></span><br><span class="line">initial_state = [初始状态]</span><br><span class="line">root = Node(initial_state)</span><br><span class="line">nextstep = alpha_beta_cut(root,<span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>),<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>),<span class="string">&#x27;MAX&#x27;</span>,<span class="number">0</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="6-效率分析">6. 效率分析</h2><p>令分支系数=b（即一个结点的平均子结点个数）；搜索树深度=d</p><ul><li>极大极小过程的时间复杂度：<font color="orangered">O(bd)</font></li><li>α-β过程的时间复杂度：<font color="orangered">O(bd/2)</font>–&gt;在相同代价下，α-β过程是极大极小过程向前看的走步数的两倍</li></ul><blockquote><p><font color="deepskyblue">搜索效率与选取的α、β值和最终倒退值的相似度有关，如果α值和β值的选取越接近最终倒退值，剪掉的分支就越多，搜索效率越高</font></p></blockquote><h2 id="7-井字棋">7. 井字棋</h2><p>移步另一篇文章</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谓词逻辑的归结反演</title>
      <link href="/posts/55f40959/"/>
      <url>/posts/55f40959/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-算法原理">1. 算法原理</h2><p><strong>归结反演</strong>：将目标子句的反~a加入前提子句集KB得到初始子句集KB`，选择两个子句作为亲本子句，将它们的互补文字进行合一操作，然后将亲本子句中的参数用合一进行替换，最后合并两个亲本子句并删除掉互补文字，得到一个新的归结子句。反复进行上述操作，直到得到一个空的归结子句，说明KB`不可满足，即可得KB|=a</p><p><strong>支持集策略</strong>：亲本子句至少有一个来自目标子句及其归结式，即通过仅选择与目标相关的子句进行归结来减少搜索空间，从而最大程度地减少无用的归结</p><p><strong>回溯化简</strong>：从空子句出发，一步一步往回推，找到与归结出空子句相关的有用归结式，忽略掉无用的归结式</p><p><strong>算法描述</strong>：先用支持集策略和归结原理得到全部归结式，再从空子句开始回溯化简把用不到的归结式删除并更新有用归结式的编号</p><p><strong>伪代码</strong></p><p><img src="https://gitee.com/wyw_0227/picture-bed/raw/master/Note/AI/202408311639006.png" alt=""></p><h2 id="2-算法实现">2. 算法实现</h2><h3 id="2-1-数据结构">2.1 数据结构</h3><p>谓词：首字母大写，不含∃,∀量词符号<br>参数：用逗号“,”间隔，不加空格，在()内<br>文字：用字符串存储，符号‘¬’用‘~’代替<br>子句：用元组存储<br>子句集：用列表存储<br>合一置换：用字典存储<br>常量：单词或a, b, c等指定小写字母表示<br>变量：u、v、w、x、y、z等指定小写字母表示<br>归结式：用字符串存储，格式为：步骤编号 R[子句编号1,子句编号2]{变量=常量} = 子句 （如果一个字句包含多个公式就用编号 a,b,c 区分，否则不用加编号区分）<br>归结过程：用列表存储</p><h3 id="2-2-变量">2.2 变量</h3><p>clauseset：子句集（列表）<br>clause：子句（元组）<br>literal：文字（字符串）<br>para：参数（列表）<br>unification：合一（字典）<br>index：编号（字符串）<br>sequence：归结式（字符串）<br>result：归结过程（列表）<br>number：子句的索引（整型）<br>useful_process：有用的归结式（列表）<br>KB：初始子句集（列表）</p><h3 id="2-3-函数">2.3 函数</h3><ol><li>Complementary()：判断两个文字是否互补</li></ol><ul><li>输入：两个文字</li><li>输出：若存在则返回两个文字索引，若不存在则返回None</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#判断两个文字是否互补</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Complementary</span>(<span class="params">literal1,literal2</span>):</span><br><span class="line">    <span class="comment">#谓词：从文字开头到&#x27;(&#x27;的子字符串</span></span><br><span class="line">    end1 = literal1.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    end2 = literal2.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    <span class="comment">#互补：文字间只有~的区别</span></span><br><span class="line">    <span class="keyword">if</span> literal2[<span class="number">0</span>] == <span class="string">&#x27;~&#x27;</span> <span class="keyword">and</span> literal2[<span class="number">1</span>:end2] == literal1[:end1]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> literal1[<span class="number">0</span>] == <span class="string">&#x27;~&#x27;</span> <span class="keyword">and</span> literal1[<span class="number">1</span>:end1] == literal2[:end2]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><ol start="2"><li>Index()：得到归结所用的编号</li></ol><ul><li>输入：子句索引、文字索引、子句长度</li><li>输出：归结式的子句编号</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#得到题目要求的归结编号</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Index</span>(<span class="params">literal_index,clause_index,length</span>):</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">1</span>: <span class="comment">#如果子句只有一个元素，则文字索引不再需要</span></span><br><span class="line">        index = <span class="built_in">str</span>(clause_index+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:           <span class="comment">#否则将文字索引变为字母</span></span><br><span class="line">        index = <span class="built_in">str</span>(clause_index+<span class="number">1</span>) + <span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)+literal_index)</span><br><span class="line">    <span class="keyword">return</span> index</span><br></pre></td></tr></table></figure><ol start="3"><li>Parameter()：得到文字的参数列表</li></ol><ul><li>输入：文字</li><li>输出：参数列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#得到文字的参数列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Parameter</span>(<span class="params">literal</span>):</span><br><span class="line">    <span class="comment">#参数是在()内且以,分隔的多个子字符串</span></span><br><span class="line">    start = literal.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    end = literal.find(<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">    para = literal[start+<span class="number">1</span>:end].split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> para</span><br></pre></td></tr></table></figure><ol start="4"><li>Unify()：得到最一般合一（<font color="orangered">貌似不正确，注意甄别！！</font>）</li></ol><ul><li>输入：两个文字的参数列表</li><li>输出：合一字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#得到合一</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Unify</span>(<span class="params">para1,para2</span>):</span><br><span class="line">    variable = &#123;<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;uu&#x27;</span>,<span class="string">&#x27;vv&#x27;</span>,<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;xx&#x27;</span>,<span class="string">&#x27;yy&#x27;</span>,<span class="string">&#x27;zz&#x27;</span>&#125;  <span class="comment">#变量集</span></span><br><span class="line">    unification = &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> para1 == para2:  <span class="comment">#若一开始就相等，直接返回空合一</span></span><br><span class="line">        <span class="keyword">return</span> unification </span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">zip</span>(para1,para2):</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> variable <span class="keyword">and</span> j <span class="keyword">in</span> variable: <span class="comment">#若都是变量，不可合一</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">            <span class="keyword">elif</span> i <span class="keyword">not</span> <span class="keyword">in</span> variable <span class="keyword">and</span> j <span class="keyword">not</span> <span class="keyword">in</span> variable <span class="keyword">and</span> i != j:    <span class="comment">#若都是常量且不相等，不可合一</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">            <span class="keyword">elif</span> i <span class="keyword">in</span> variable <span class="keyword">and</span> j <span class="keyword">not</span> <span class="keyword">in</span> variable:</span><br><span class="line">                unification[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> j <span class="keyword">in</span> variable <span class="keyword">and</span> i <span class="keyword">not</span> <span class="keyword">in</span> variable:</span><br><span class="line">                unification[j] = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="comment">#合一复合</span></span><br><span class="line">        para1 = [unification[item] <span class="keyword">if</span> item <span class="keyword">in</span> unification <span class="keyword">else</span> item <span class="keyword">for</span> item <span class="keyword">in</span> para1]</span><br><span class="line">        para2 = [unification[item] <span class="keyword">if</span> item <span class="keyword">in</span> unification <span class="keyword">else</span> item <span class="keyword">for</span> item <span class="keyword">in</span> para2]</span><br><span class="line">        <span class="keyword">if</span> para1 == para2:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> unification</span><br></pre></td></tr></table></figure><ol start="5"><li>Substitute()：对子句置换</li></ol><ul><li>输入：子句、合一</li><li>输出：置换后的新子句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#置换旧子句得到新子句</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Substitute</span>(<span class="params">unification,clause</span>):</span><br><span class="line">    <span class="keyword">if</span> unification == &#123;&#125;:   <span class="comment">#字典为空，说明无需置换，直接返回原子句</span></span><br><span class="line">        <span class="keyword">return</span> clause</span><br><span class="line">    newclause = []</span><br><span class="line">    <span class="keyword">for</span> literal <span class="keyword">in</span> clause:</span><br><span class="line">        start = literal.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">        end = literal.find(<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">        para = literal[start + <span class="number">1</span>:end].split(<span class="string">&#x27;,&#x27;</span>)   <span class="comment">#得到文字的参数列表</span></span><br><span class="line">        para = [unification[item] <span class="keyword">if</span> item <span class="keyword">in</span> unification <span class="keyword">else</span> item <span class="keyword">for</span> item <span class="keyword">in</span> para]</span><br><span class="line">        newliteral = literal[:start + <span class="number">1</span>] + <span class="string">&#x27;,&#x27;</span>.join(para) + literal[end:]  <span class="comment">#合并成新子句</span></span><br><span class="line">        newclause.append(newliteral)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tuple</span>(newclause) <span class="comment">#返回新子句，注意是元组格式</span></span><br></pre></td></tr></table></figure><ol start="6"><li>Resolve()：归结</li></ol><ul><li>输入：两个子句、两个互补文字索引</li><li>输出：归结后的新子句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#归结：消除互补项</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Resolve</span>(<span class="params">clause1,clause2,literal_index1,literal_index2</span>):</span><br><span class="line">    newclause = <span class="built_in">list</span>(clause1) + <span class="built_in">list</span>(clause2)</span><br><span class="line">    newclause.remove(clause1[literal_index1])</span><br><span class="line">    newclause.remove(clause2[literal_index2])</span><br><span class="line">    newclause = <span class="built_in">list</span>(OrderedDict.fromkeys(newclause))   <span class="comment">#消除相同的子句</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tuple</span>(newclause)</span><br></pre></td></tr></table></figure><ol start="7"><li>Sequence()：得到归结式</li></ol><ul><li>输入：归结子句、子句编号、合一</li><li>输出：归结式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#得到归结式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Sequence</span>(<span class="params">newclause,unification,index1,index2</span>):</span><br><span class="line">    string = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> unification == &#123;&#125;:    <span class="comment">#如果字典为空，说明不需要输出合一</span></span><br><span class="line">        string += <span class="string">&#x27;R[&#x27;</span> + index1 + <span class="string">&#x27;,&#x27;</span> + index2 + <span class="string">&#x27;] = &#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        string += <span class="string">&#x27;R[&#x27;</span> + index1 + <span class="string">&#x27;,&#x27;</span> + index2 + <span class="string">&#x27;]&#123;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> key,value <span class="keyword">in</span> unification.items():</span><br><span class="line">            string += key + <span class="string">&#x27;=&#x27;</span> + value + <span class="string">&#x27;,&#x27;</span></span><br><span class="line">        string = string[:-<span class="number">1</span>]</span><br><span class="line">        string += <span class="string">&#x27;&#125; = &#x27;</span></span><br><span class="line">    string += <span class="built_in">str</span>(newclause)</span><br><span class="line">    <span class="keyword">return</span> string</span><br></pre></td></tr></table></figure><ol start="8"><li>Refutation()：得到归结过程</li></ol><ul><li>输入：初始子句集</li><li>输出：归结过程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#反演：支持集策略</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Refutation</span>(<span class="params">KB</span>):</span><br><span class="line">    clauseset = <span class="built_in">list</span>(KB)            <span class="comment">#拷贝一份，防止更改原初始子句集</span></span><br><span class="line">    supportset = [KB[-<span class="number">1</span>]]           <span class="comment">#支持集，默认KB最后一个元素是目标子句的否定</span></span><br><span class="line">    result = [<span class="string">&#x27;归结顺序:&#x27;</span>] + KB      <span class="comment">#将0位置补充元素，确保编号和列表索引对应</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        new_clauseset = []  <span class="comment">#此级得到的全部的新的子句</span></span><br><span class="line">        clause_index1 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> clause1 <span class="keyword">in</span> clauseset:</span><br><span class="line">            <span class="keyword">if</span> clause1 <span class="keyword">in</span> KB:</span><br><span class="line">                clause_index2 = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> clause2 <span class="keyword">in</span> clauseset:</span><br><span class="line">                    <span class="keyword">if</span> clause1 != clause2 <span class="keyword">and</span> clause2 <span class="keyword">in</span> supportset: <span class="comment">#其中一个亲本子句必须来自支持集</span></span><br><span class="line">                        literal_index1 = <span class="number">0</span></span><br><span class="line">                        <span class="keyword">for</span> literal1 <span class="keyword">in</span> clause1:</span><br><span class="line">                            literal_index2 = <span class="number">0</span></span><br><span class="line">                            <span class="keyword">for</span> literal2 <span class="keyword">in</span> clause2:</span><br><span class="line">                                <span class="comment">#判断是否互补</span></span><br><span class="line">                                <span class="keyword">if</span> Complementary(literal1,literal2):</span><br><span class="line">                                    <span class="comment">#得到索引</span></span><br><span class="line">                                    index1 = Index(literal_index1,clause_index1,<span class="built_in">len</span>(clause1))</span><br><span class="line">                                    index2 = Index(literal_index2,clause_index2,<span class="built_in">len</span>(clause2))</span><br><span class="line">                                    <span class="comment">#得到互补文字</span></span><br><span class="line">                                    literal1 = clause1[literal_index1]</span><br><span class="line">                                    literal2 = clause2[literal_index2]</span><br><span class="line">                                    <span class="comment">#得到参数列表</span></span><br><span class="line">                                    para1 = Parameter(literal1)</span><br><span class="line">                                    para2 = Parameter(literal2)</span><br><span class="line">                                    <span class="comment">#得到合一置换</span></span><br><span class="line">                                    unification = Unify(para1,para2)</span><br><span class="line">                                    <span class="comment">#合一置换不存在则退出</span></span><br><span class="line">                                    <span class="keyword">if</span> unification == <span class="literal">None</span>:</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    <span class="comment">#得到子句</span></span><br><span class="line">                                    newclause1 = Substitute(unification,clause1)    </span><br><span class="line">                                    newclause2 = Substitute(unification,clause2)  </span><br><span class="line">                                    <span class="comment">#得到归结子句</span></span><br><span class="line">                                    newclause = Resolve(newclause1,newclause2,literal_index1,literal_index2)</span><br><span class="line">                                    <span class="comment">#归结子句存在于原子句集则退出</span></span><br><span class="line">                                    <span class="keyword">if</span> <span class="built_in">any</span>([<span class="built_in">set</span>(newclause)==(<span class="built_in">set</span>(item)) <span class="keyword">for</span> item <span class="keyword">in</span> clauseset]):</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    <span class="comment">#归结子句存在于新子句集则退出</span></span><br><span class="line">                                    <span class="keyword">if</span> <span class="built_in">any</span>([<span class="built_in">set</span>(newclause)==(<span class="built_in">set</span>(item)) <span class="keyword">for</span> item <span class="keyword">in</span> new_clauseset]):</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    <span class="comment">#得到新归结式</span></span><br><span class="line">                                    sequence = <span class="type">Sequence</span>(newclause,unification,index1,index2)</span><br><span class="line">                                    <span class="comment">#加入结果列表和新子句列表</span></span><br><span class="line">                                    result.append(sequence)</span><br><span class="line">                                    new_clauseset.append(newclause)</span><br><span class="line">                                    <span class="comment">#当且仅当新子句为空，则可退出函数，返回结果列表</span></span><br><span class="line">                                    <span class="keyword">if</span> newclause == ():</span><br><span class="line">                                        <span class="keyword">return</span> result</span><br><span class="line">                                literal_index2 += <span class="number">1</span></span><br><span class="line">                            literal_index1 += <span class="number">1</span></span><br><span class="line">                    clause_index2 += <span class="number">1</span></span><br><span class="line">            clause_index1 += <span class="number">1</span></span><br><span class="line">        clauseset += new_clauseset      <span class="comment">#更新子句列表</span></span><br><span class="line">        supportset += new_clauseset     <span class="comment">#更新支持集</span></span><br></pre></td></tr></table></figure><ol start="9"><li>Number()：得到归结式的子句索引</li></ol><ul><li>输入：归结式</li><li>输出：两个子句索引</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#得到归结式的子句索引</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Number</span>(<span class="params">clause</span>):</span><br><span class="line">    start = clause.find(<span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">    end = clause.find(<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">    number = clause[start+<span class="number">1</span>:end].split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="comment">#将文字索引去掉</span></span><br><span class="line">    num1 = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(item <span class="keyword">for</span> item <span class="keyword">in</span> number[<span class="number">0</span>] <span class="keyword">if</span> <span class="keyword">not</span> item.isalpha()))</span><br><span class="line">    num2 = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(item <span class="keyword">for</span> item <span class="keyword">in</span> number[<span class="number">1</span>] <span class="keyword">if</span> <span class="keyword">not</span> item.isalpha()))</span><br><span class="line">    <span class="keyword">return</span> num1,num2</span><br></pre></td></tr></table></figure><ol start="10"><li>Renumber()：得到新归结式的子句索引</li></ol><ul><li>输入：原归结过程、归结式、待更新索引、初始子句集大小</li><li>输出：更新后的索引</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#得到新归结式的子句索引</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Renumber</span>(<span class="params">num,result,useful_process,size</span>):</span><br><span class="line">    <span class="keyword">if</span> num &lt;= size: <span class="comment">#如果是初始子句集的，直接返回</span></span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    <span class="comment">#找到亲本子句</span></span><br><span class="line">    sequence = result[num]</span><br><span class="line">    begin = sequence.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    aim_clause = sequence[begin:]</span><br><span class="line">    <span class="comment">#找到亲本子句在化简子句集的编号</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size+<span class="number">1</span>,<span class="built_in">len</span>(useful_process)):</span><br><span class="line">        begin = useful_process[i].find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> useful_process[i][begin:] == aim_clause:</span><br><span class="line">            <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure><ol start="11"><li>Resequence()：更新归结式</li></ol><ul><li>输入：原归结式、原索引、新索引</li><li>输出：新归结式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更新归结式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Resequence</span>(<span class="params">sequence,num1,num2,newnum1,newnum2</span>):</span><br><span class="line">    <span class="comment"># 第一次替换：替换第一个编号</span></span><br><span class="line">    start = sequence.find(num1)</span><br><span class="line">    end = start + <span class="built_in">len</span>(num1)</span><br><span class="line">    sequence = sequence[:start] + newnum1 + sequence[end:]</span><br><span class="line">    <span class="comment"># 第二次替换：替换第二个编号</span></span><br><span class="line">    end = start + <span class="built_in">len</span>(newnum1)</span><br><span class="line">    start = sequence.find(num2, end)</span><br><span class="line">    end = start + <span class="built_in">len</span>(num2)</span><br><span class="line">    sequence = sequence[:start] + newnum2 + sequence[end:]</span><br><span class="line">    <span class="keyword">return</span> sequence</span><br></pre></td></tr></table></figure><ol start="12"><li>Simplify()：化简归结过程（<font color="orangered">谨慎打开，很长！</font>）</li></ol><ul><li>输入：原归结过程、初始子句集大小</li><li>输出：新归结过程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#化简归结过程</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Simplify</span>(<span class="params">result,size</span>):</span><br><span class="line">    base_process = result[<span class="number">0</span>:size+<span class="number">1</span>] <span class="comment">#初始子句集</span></span><br><span class="line">    useful_process = []             <span class="comment">#有用子句集</span></span><br><span class="line">    number = [<span class="built_in">len</span>(result)-<span class="number">1</span>]        <span class="comment">#用作队列，先将空子句的索引入列</span></span><br><span class="line">    <span class="keyword">while</span> number != []:</span><br><span class="line">        number0 = number.pop(<span class="number">0</span>)                 <span class="comment">#提取队列首元素，即有用子句的索引</span></span><br><span class="line">        useful_process.append(result[number0])  <span class="comment">#将有用子句加入到有用子句集            </span></span><br><span class="line">        num1,num2 = Number(result[number0])     <span class="comment">#得有用子句用到的亲本子句索引</span></span><br><span class="line">        <span class="comment">#如果是初始子句集就无需加入</span></span><br><span class="line">        <span class="keyword">if</span> num1 &gt; size:</span><br><span class="line">            number.append(num1)</span><br><span class="line">        <span class="keyword">if</span> num2 &gt; size:</span><br><span class="line">            number.append(num2)</span><br><span class="line">    <span class="comment">#得到新的归结过程</span></span><br><span class="line">    useful_process.reverse()</span><br><span class="line">    useful_process = base_process + useful_process</span><br><span class="line">    <span class="comment">#将归结过程重新编号</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size+<span class="number">1</span>,<span class="built_in">len</span>(useful_process)): </span><br><span class="line">        num1,num2 = Number(useful_process[i])</span><br><span class="line">        newnum1 = <span class="built_in">str</span>(Renumber(num1,result,useful_process,size))</span><br><span class="line">        newnum2 = <span class="built_in">str</span>(Renumber(num2,result,useful_process,size))</span><br><span class="line">        useful_process[i] = Resequence(useful_process[i],<span class="built_in">str</span>(num1),<span class="built_in">str</span>(num2),newnum1,newnum2)</span><br><span class="line">    <span class="keyword">return</span> useful_process</span><br></pre></td></tr></table></figure><ol start="13"><li>Print()：输出归结过程</li></ol><ul><li>输入：归结过程</li><li>输出：编号后的归结过程</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印结果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Print</span>(<span class="params">result</span>):</span><br><span class="line">    <span class="built_in">print</span>(result[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(result)):</span><br><span class="line">        <span class="built_in">print</span>(i,result[i])</span><br></pre></td></tr></table></figure><ol start="14"><li>ResolutionFOL()：归结反演（汇总）</li></ol><ul><li>输入：初始子句集</li><li>输出：归结反演</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#归结反演</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ResolutionFOL</span>(<span class="params">KB</span>):</span><br><span class="line">    result = Refutation(KB)</span><br><span class="line">    new_result = Simplify(result,<span class="built_in">len</span>(KB))</span><br><span class="line">    Print(new_result)</span><br></pre></td></tr></table></figure><p>四、完整代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="comment">#判断两个文字是否互补</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Complementary</span>(<span class="params">literal1,literal2</span>):</span><br><span class="line">    <span class="comment">#谓词：从文字开头到&#x27;(&#x27;的子字符串</span></span><br><span class="line">    end1 = literal1.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    end2 = literal2.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    <span class="comment">#互补：文字间只有~的区别</span></span><br><span class="line">    <span class="keyword">if</span> literal2[<span class="number">0</span>] == <span class="string">&#x27;~&#x27;</span> <span class="keyword">and</span> literal2[<span class="number">1</span>:end2] == literal1[:end1]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> literal1[<span class="number">0</span>] == <span class="string">&#x27;~&#x27;</span> <span class="keyword">and</span> literal1[<span class="number">1</span>:end1] == literal2[:end2]:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#得到题目要求的归结编号</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Index</span>(<span class="params">literal_index,clause_index,length</span>):</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">1</span>: <span class="comment">#如果子句只有一个元素，则文字索引不再需要</span></span><br><span class="line">        index = <span class="built_in">str</span>(clause_index+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:           <span class="comment">#否则将文字索引变为字母</span></span><br><span class="line">        index = <span class="built_in">str</span>(clause_index+<span class="number">1</span>) + <span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)+literal_index)</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到文字的参数列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Parameter</span>(<span class="params">literal</span>):</span><br><span class="line">    <span class="comment">#参数是在()内且以,分隔的多个子字符串</span></span><br><span class="line">    start = literal.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    end = literal.find(<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">    para = literal[start+<span class="number">1</span>:end].split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> para</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到合一</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Unify</span>(<span class="params">para1,para2</span>):</span><br><span class="line">    variable = &#123;<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;uu&#x27;</span>,<span class="string">&#x27;vv&#x27;</span>,<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;xx&#x27;</span>,<span class="string">&#x27;yy&#x27;</span>,<span class="string">&#x27;zz&#x27;</span>&#125;  <span class="comment">#变量集</span></span><br><span class="line">    unification = &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> para1 == para2:  <span class="comment">#若一开始就相等，直接返回空合一</span></span><br><span class="line">        <span class="keyword">return</span> unification </span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">zip</span>(para1,para2):</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> variable <span class="keyword">and</span> j <span class="keyword">in</span> variable: <span class="comment">#若都是变量，不可合一</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">            <span class="keyword">elif</span> i <span class="keyword">not</span> <span class="keyword">in</span> variable <span class="keyword">and</span> j <span class="keyword">not</span> <span class="keyword">in</span> variable <span class="keyword">and</span> i != j:    <span class="comment">#若都是常量且不相等，不可合一</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">            <span class="keyword">elif</span> i <span class="keyword">in</span> variable <span class="keyword">and</span> j <span class="keyword">not</span> <span class="keyword">in</span> variable:</span><br><span class="line">                unification[i] = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> j <span class="keyword">in</span> variable <span class="keyword">and</span> i <span class="keyword">not</span> <span class="keyword">in</span> variable:</span><br><span class="line">                unification[j] = i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="comment">#合一复合</span></span><br><span class="line">        para1 = [unification[item] <span class="keyword">if</span> item <span class="keyword">in</span> unification <span class="keyword">else</span> item <span class="keyword">for</span> item <span class="keyword">in</span> para1]</span><br><span class="line">        para2 = [unification[item] <span class="keyword">if</span> item <span class="keyword">in</span> unification <span class="keyword">else</span> item <span class="keyword">for</span> item <span class="keyword">in</span> para2]</span><br><span class="line">        <span class="keyword">if</span> para1 == para2:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> unification</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#置换旧子句得到新子句</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Substitute</span>(<span class="params">unification,clause</span>):</span><br><span class="line">    <span class="keyword">if</span> unification == &#123;&#125;:   <span class="comment">#字典为空，说明无需置换，直接返回原子句</span></span><br><span class="line">        <span class="keyword">return</span> clause</span><br><span class="line">    newclause = []</span><br><span class="line">    <span class="keyword">for</span> literal <span class="keyword">in</span> clause:</span><br><span class="line">        start = literal.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">        end = literal.find(<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line">        para = literal[start + <span class="number">1</span>:end].split(<span class="string">&#x27;,&#x27;</span>)   <span class="comment">#得到文字的参数列表</span></span><br><span class="line">        para = [unification[item] <span class="keyword">if</span> item <span class="keyword">in</span> unification <span class="keyword">else</span> item <span class="keyword">for</span> item <span class="keyword">in</span> para]</span><br><span class="line">        newliteral = literal[:start + <span class="number">1</span>] + <span class="string">&#x27;,&#x27;</span>.join(para) + literal[end:]  <span class="comment">#合并成新子句</span></span><br><span class="line">        newclause.append(newliteral)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tuple</span>(newclause) <span class="comment">#返回新子句，注意是元组格式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#归结：消除互补项</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Resolve</span>(<span class="params">clause1,clause2,literal_index1,literal_index2</span>):</span><br><span class="line">    newclause = <span class="built_in">list</span>(clause1) + <span class="built_in">list</span>(clause2)</span><br><span class="line">    newclause.remove(clause1[literal_index1])</span><br><span class="line">    newclause.remove(clause2[literal_index2])</span><br><span class="line">    newclause = <span class="built_in">list</span>(OrderedDict.fromkeys(newclause))   <span class="comment">#消除相同的子句</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">tuple</span>(newclause)</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到归结式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Sequence</span>(<span class="params">newclause,unification,index1,index2</span>):</span><br><span class="line">    string = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> unification == &#123;&#125;:    <span class="comment">#如果字典为空，说明不需要输出合一</span></span><br><span class="line">        string += <span class="string">&#x27;R[&#x27;</span> + index1 + <span class="string">&#x27;,&#x27;</span> + index2 + <span class="string">&#x27;] = &#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        string += <span class="string">&#x27;R[&#x27;</span> + index1 + <span class="string">&#x27;,&#x27;</span> + index2 + <span class="string">&#x27;]&#123;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> key,value <span class="keyword">in</span> unification.items():</span><br><span class="line">            string += key + <span class="string">&#x27;=&#x27;</span> + value + <span class="string">&#x27;,&#x27;</span></span><br><span class="line">        string = string[:-<span class="number">1</span>]</span><br><span class="line">        string += <span class="string">&#x27;&#125; = &#x27;</span></span><br><span class="line">    string += <span class="built_in">str</span>(newclause)</span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line"><span class="comment">#反演：支持集策略</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Refutation</span>(<span class="params">KB</span>):</span><br><span class="line">    clauseset = <span class="built_in">list</span>(KB)            <span class="comment">#拷贝一份，防止更改原初始子句集</span></span><br><span class="line">    supportset = [KB[-<span class="number">1</span>]]           <span class="comment">#支持集，默认KB最后一个元素是目标子句的否定</span></span><br><span class="line">    result = [<span class="string">&#x27;归结顺序:&#x27;</span>] + KB      <span class="comment">#将0位置补充元素，确保编号和列表索引对应</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        new_clauseset = []  <span class="comment">#此级得到的全部的新的子句</span></span><br><span class="line">        clause_index1 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> clause1 <span class="keyword">in</span> clauseset:</span><br><span class="line">            <span class="keyword">if</span> clause1 <span class="keyword">in</span> KB:</span><br><span class="line">                clause_index2 = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> clause2 <span class="keyword">in</span> clauseset:</span><br><span class="line">                    <span class="keyword">if</span> clause1 != clause2 <span class="keyword">and</span> clause2 <span class="keyword">in</span> supportset: <span class="comment">#其中一个亲本子句必须来自支持集</span></span><br><span class="line">                        literal_index1 = <span class="number">0</span></span><br><span class="line">                        <span class="keyword">for</span> literal1 <span class="keyword">in</span> clause1:</span><br><span class="line">                            literal_index2 = <span class="number">0</span></span><br><span class="line">                            <span class="keyword">for</span> literal2 <span class="keyword">in</span> clause2:</span><br><span class="line">                                <span class="comment">#判断是否互补</span></span><br><span class="line">                                <span class="keyword">if</span> Complementary(literal1,literal2):</span><br><span class="line">                                    <span class="comment">#得到索引</span></span><br><span class="line">                                    index1 = Index(literal_index1,clause_index1,<span class="built_in">len</span>(clause1))</span><br><span class="line">                                    index2 = Index(literal_index2,clause_index2,<span class="built_in">len</span>(clause2))</span><br><span class="line">                                    <span class="comment">#得到互补文字</span></span><br><span class="line">                                    literal1 = clause1[literal_index1]</span><br><span class="line">                                    literal2 = clause2[literal_index2]</span><br><span class="line">                                    <span class="comment">#得到参数列表</span></span><br><span class="line">                                    para1 = Parameter(literal1)</span><br><span class="line">                                    para2 = Parameter(literal2)</span><br><span class="line">                                    <span class="comment">#得到合一置换</span></span><br><span class="line">                                    unification = Unify(para1,para2)</span><br><span class="line">                                    <span class="comment">#合一置换不存在则退出</span></span><br><span class="line">                                    <span class="keyword">if</span> unification == <span class="literal">None</span>:</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    <span class="comment">#得到子句</span></span><br><span class="line">                                    newclause1 = Substitute(unification,clause1)    </span><br><span class="line">                                    newclause2 = Substitute(unification,clause2)  </span><br><span class="line">                                    <span class="comment">#得到归结子句</span></span><br><span class="line">                                    newclause = Resolve(newclause1,newclause2,literal_index1,literal_index2)</span><br><span class="line">                                    <span class="comment">#归结子句存在于原子句集则退出</span></span><br><span class="line">                                    <span class="keyword">if</span> <span class="built_in">any</span>([<span class="built_in">set</span>(newclause)==(<span class="built_in">set</span>(item)) <span class="keyword">for</span> item <span class="keyword">in</span> clauseset]):</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    <span class="comment">#归结子句存在于新子句集则退出</span></span><br><span class="line">                                    <span class="keyword">if</span> <span class="built_in">any</span>([<span class="built_in">set</span>(newclause)==(<span class="built_in">set</span>(item)) <span class="keyword">for</span> item <span class="keyword">in</span> new_clauseset]):</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    <span class="comment">#得到新归结式</span></span><br><span class="line">                                    sequence = <span class="type">Sequence</span>(newclause,unification,index1,index2)</span><br><span class="line">                                    <span class="comment">#加入结果列表和新子句列表</span></span><br><span class="line">                                    result.append(sequence)</span><br><span class="line">                                    new_clauseset.append(newclause)</span><br><span class="line">                                    <span class="comment">#当且仅当新子句为空，则可退出函数，返回结果列表</span></span><br><span class="line">                                    <span class="keyword">if</span> newclause == ():</span><br><span class="line">                                        <span class="keyword">return</span> result</span><br><span class="line">                                literal_index2 += <span class="number">1</span></span><br><span class="line">                            literal_index1 += <span class="number">1</span></span><br><span class="line">                    clause_index2 += <span class="number">1</span></span><br><span class="line">            clause_index1 += <span class="number">1</span></span><br><span class="line">        clauseset += new_clauseset      <span class="comment">#更新子句列表</span></span><br><span class="line">        supportset += new_clauseset     <span class="comment">#更新支持集</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#得到归结式的子句索引</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Number</span>(<span class="params">clause</span>):</span><br><span class="line">    start = clause.find(<span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">    end = clause.find(<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">    number = clause[start+<span class="number">1</span>:end].split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    <span class="comment">#将文字索引去掉</span></span><br><span class="line">    num1 = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(item <span class="keyword">for</span> item <span class="keyword">in</span> number[<span class="number">0</span>] <span class="keyword">if</span> <span class="keyword">not</span> item.isalpha()))</span><br><span class="line">    num2 = <span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(item <span class="keyword">for</span> item <span class="keyword">in</span> number[<span class="number">1</span>] <span class="keyword">if</span> <span class="keyword">not</span> item.isalpha()))</span><br><span class="line">    <span class="keyword">return</span> num1,num2</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到新归结式的子句索引</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Renumber</span>(<span class="params">num,result,useful_process,size</span>):</span><br><span class="line">    <span class="keyword">if</span> num &lt;= size: <span class="comment">#如果是初始子句集的，直接返回</span></span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    <span class="comment">#找到亲本子句</span></span><br><span class="line">    sequence = result[num]</span><br><span class="line">    begin = sequence.find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">    aim_clause = sequence[begin:]</span><br><span class="line">    <span class="comment">#找到亲本子句在化简子句集的编号</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size+<span class="number">1</span>,<span class="built_in">len</span>(useful_process)):</span><br><span class="line">        begin = useful_process[i].find(<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> useful_process[i][begin:] == aim_clause:</span><br><span class="line">            <span class="keyword">return</span> i </span><br><span class="line"></span><br><span class="line"><span class="comment">#更新归结式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Resequence</span>(<span class="params">sequence,num1,num2,newnum1,newnum2</span>):</span><br><span class="line">    <span class="comment"># 第一次替换：替换第一个编号</span></span><br><span class="line">    start = sequence.find(num1)</span><br><span class="line">    end = start + <span class="built_in">len</span>(num1)</span><br><span class="line">    sequence = sequence[:start] + newnum1 + sequence[end:]</span><br><span class="line">    <span class="comment"># 第二次替换：替换第二个编号</span></span><br><span class="line">    end = start + <span class="built_in">len</span>(newnum1)</span><br><span class="line">    start = sequence.find(num2, end)</span><br><span class="line">    end = start + <span class="built_in">len</span>(num2)</span><br><span class="line">    sequence = sequence[:start] + newnum2 + sequence[end:]</span><br><span class="line">    <span class="keyword">return</span> sequence</span><br><span class="line"></span><br><span class="line"><span class="comment">#化简归结过程</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Simplify</span>(<span class="params">result,size</span>):</span><br><span class="line">    base_process = result[<span class="number">0</span>:size+<span class="number">1</span>] <span class="comment">#初始子句集</span></span><br><span class="line">    useful_process = []             <span class="comment">#有用子句集</span></span><br><span class="line">    number = [<span class="built_in">len</span>(result)-<span class="number">1</span>]        <span class="comment">#用作队列，先将空子句的索引入列</span></span><br><span class="line">    <span class="keyword">while</span> number != []:</span><br><span class="line">        number0 = number.pop(<span class="number">0</span>)                 <span class="comment">#提取队列首元素，即有用子句的索引</span></span><br><span class="line">        useful_process.append(result[number0])  <span class="comment">#将有用子句加入到有用子句集            </span></span><br><span class="line">        num1,num2 = Number(result[number0])     <span class="comment">#得有用子句用到的亲本子句索引</span></span><br><span class="line">        <span class="comment">#如果是初始子句集就无需加入</span></span><br><span class="line">        <span class="keyword">if</span> num1 &gt; size:</span><br><span class="line">            number.append(num1)</span><br><span class="line">        <span class="keyword">if</span> num2 &gt; size:</span><br><span class="line">            number.append(num2)</span><br><span class="line">    <span class="comment">#得到新的归结过程</span></span><br><span class="line">    useful_process.reverse()</span><br><span class="line">    useful_process = base_process + useful_process</span><br><span class="line">    <span class="comment">#将归结过程重新编号</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size+<span class="number">1</span>,<span class="built_in">len</span>(useful_process)): </span><br><span class="line">        num1,num2 = Number(useful_process[i])</span><br><span class="line">        newnum1 = <span class="built_in">str</span>(Renumber(num1,result,useful_process,size))</span><br><span class="line">        newnum2 = <span class="built_in">str</span>(Renumber(num2,result,useful_process,size))</span><br><span class="line">        useful_process[i] = Resequence(useful_process[i],<span class="built_in">str</span>(num1),<span class="built_in">str</span>(num2),newnum1,newnum2)</span><br><span class="line">    <span class="keyword">return</span> useful_process</span><br><span class="line"></span><br><span class="line"><span class="comment">#打印结果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Print</span>(<span class="params">result</span>):</span><br><span class="line">    <span class="built_in">print</span>(result[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(result)):</span><br><span class="line">        <span class="built_in">print</span>(i,result[i])</span><br><span class="line"></span><br><span class="line"><span class="comment">#归结反演</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ResolutionFOL</span>(<span class="params">KB</span>):</span><br><span class="line">    result = Refutation(KB)</span><br><span class="line">    new_result = Simplify(result,<span class="built_in">len</span>(KB))</span><br><span class="line">    Print(new_result)</span><br></pre></td></tr></table></figure><h2 id="3-测试">3. 测试</h2><h3 id="3-1-测试代码">3.1 测试代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">KB1 = [(<span class="string">&#x27;GradStudent(sue)&#x27;</span>,),(<span class="string">&#x27;~GradStudent(x)&#x27;</span>,<span class="string">&#x27;Student(x)&#x27;</span>),(<span class="string">&#x27;~Student(x)&#x27;</span>,<span class="string">&#x27;HardWorker(x)&#x27;</span>),</span><br><span class="line">     (<span class="string">&#x27;~HardWorker(sue)&#x27;</span>,)]</span><br><span class="line"></span><br><span class="line">KB2 = [(<span class="string">&#x27;On(tony,mike)&#x27;</span>,),(<span class="string">&#x27;On(mike,john)&#x27;</span>,),(<span class="string">&#x27;Green(tony)&#x27;</span>,),(<span class="string">&#x27;~Green(john)&#x27;</span>,),</span><br><span class="line">      (<span class="string">&#x27;~On(xx,yy)&#x27;</span>,<span class="string">&#x27;~Green(xx)&#x27;</span>,<span class="string">&#x27;Green(yy)&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">KB3 = [(<span class="string">&#x27;A(tony)&#x27;</span>,), (<span class="string">&#x27;A(mike)&#x27;</span>,), (<span class="string">&#x27;A(john)&#x27;</span>,), (<span class="string">&#x27;L(tony,rain)&#x27;</span>,), (<span class="string">&#x27;L(tony,snow)&#x27;</span>,),</span><br><span class="line">      (<span class="string">&#x27;~A(x)&#x27;</span>, <span class="string">&#x27;S(x)&#x27;</span>, <span class="string">&#x27;C(x)&#x27;</span>), (<span class="string">&#x27;~C(y)&#x27;</span>, <span class="string">&#x27;~L(y,rain)&#x27;</span>), (<span class="string">&#x27;L(z,snow)&#x27;</span>, <span class="string">&#x27;~S(z)&#x27;</span>),</span><br><span class="line">      (<span class="string">&#x27;~L(tony,u)&#x27;</span>, <span class="string">&#x27;~L(mike,u)&#x27;</span>), (<span class="string">&#x27;L(tony,v)&#x27;</span>, <span class="string">&#x27;L(mike,v)&#x27;</span>), (<span class="string">&#x27;~A(w)&#x27;</span>, <span class="string">&#x27;~C(w)&#x27;</span>, <span class="string">&#x27;S(w)&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">ResolutionFOL(KB1)</span><br><span class="line">ResolutionFOL(KB2)</span><br><span class="line">ResolutionFOL(KB3)</span><br></pre></td></tr></table></figure><h3 id="3-2-终端输出">3.2 终端输出</h3><p></p><blockquote><p><font color="deepskyblue">在ResolutionFOL函数中加了一步，输出还没化简的归结过程，用于比较分析–&gt;Print(result)</font></p></blockquote><p><img src="https://i-blog.csdnimg.cn/blog_migrate/d565a7e2e7e7755bd153e7db2e6b5ffa.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/06db5e1bfbaee9b532a9b2ef2b4c4063.png" alt=""></p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/f7cd68169758ffc1e71887f69f38f7c1.png" alt=""></p><h2 id="4-总结">4. 总结</h2><p><strong>评价</strong></p><ul><li>时间复杂度主要取决于得到未化简归结过程</li><li>完备的</li></ul><p><strong>不足之处</strong></p><ul><li>归结过程中每次迭代，选择clause1和clause2都是从clauseset的头到尾，这会产生许多重复判定，造成不必要的时间开销</li><li>支持集策略只能指导其中一个子句的选择，无法同时指导两个子句的选择</li><li>空间复杂度较高</li></ul><p><strong>改进方法</strong></p><ul><li>结合多个搜索策略：可以将多个策略联合使用，判断什么情况下用什么策略更好</li><li>添加<font color="orangered">删除策略</font>：应该删除纯文字、重言式、类含子句等</li><li>引入<font color="orangered">启发式方法</font>：可以根据子句的复杂度、覆盖的变量范围等因素进行评估，并优先选择可能导致有效归结的子句进行处理</li></ul><h2 id="5-参考资料">5. 参考资料</h2><ul><li><a href="https://www.cnblogs.com/wkfvawl/p/12112035.html">https://www.cnblogs.com/wkfvawl/p/12112035.html</a></li><li><a href="https://blog.csdn.net/hahastephanie/article/details/113401934">https://blog.csdn.net/hahastephanie/article/details/113401934</a></li><li><a href="https://www.cnblogs.com/mfmdaoyou/p/6850422.html">https://www.cnblogs.com/mfmdaoyou/p/6850422.html</a></li><li><a href="https://www.bilibili.com/read/cv22598189/">https://www.bilibili.com/read/cv22598189/</a><br>​</li></ul>]]></content>
      
      
      <categories>
          
          <category> 实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用html制作静态百度页面</title>
      <link href="/posts/31ce41b8/"/>
      <url>/posts/31ce41b8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-页面预览">1. 页面预览</h2><p><img src="https://i-blog.csdnimg.cn/blog_migrate/1e2de0297750043a217faec0c1e81424.png" alt=""></p><h2 id="2-代码">2. 代码</h2><p><font color="orangered">CSS代码放在style标签内，没有单独成立文件</font></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下，你就知道<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*清除元素默认性质*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123; </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&quot;宋体&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*全部a元素的基础属性*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;     </span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#00c</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: underline;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*顶部的行*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#topline</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*百度图标*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#logo</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*百度应用*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#apps</span> &#123;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*搜索*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#search</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#search</span> <span class="selector-id">#enter</span>&#123;  <span class="comment">/*搜索内容*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#search</span> <span class="selector-id">#submit</span>&#123;  <span class="comment">/*搜索按钮*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">37px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">500</span>; </span></span><br><span class="line"><span class="language-css">            <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>:<span class="number">#3836E0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*热搜*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#title</span> &#123;<span class="attribute">margin-top</span>: <span class="number">50px</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#title</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: Arial Bold;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">900</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">485px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#hotlist</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#hotlist</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#hotlist</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#hotlist</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-tag">ul</span>&#123;<span class="attribute">list-style-type</span>:none;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#top3</span>&#123;<span class="attribute">font-weight</span>: bold;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#top3</span> <span class="selector-id">#one</span>,<span class="selector-id">#hotnews</span> <span class="selector-id">#top3</span> <span class="selector-id">#one</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>: <span class="number">#cc061d</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#top3</span> <span class="selector-id">#two</span>,<span class="selector-id">#hotnews</span> <span class="selector-id">#top3</span> <span class="selector-id">#two</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">240</span>, <span class="number">105</span>, <span class="number">15</span>);&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#top3</span> <span class="selector-id">#three</span>,<span class="selector-id">#hotnews</span> <span class="selector-id">#top3</span> <span class="selector-id">#three</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>: <span class="number">#f0a923</span>;&#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#hotnews</span> <span class="selector-id">#else</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>,<span class="selector-id">#hotnews</span> <span class="selector-id">#else</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;<span class="attribute">color</span>:<span class="number">#72747d</span>&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/*底部的行*/</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#bottomline</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;    </span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>); </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;topline&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/gaoji/advanced.html&quot;</span>&gt;</span>设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        |</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://passport.baidu.com/&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span> <span class="attr">title</span>=<span class="string">&quot;点此进入百度官网&quot;</span> <span class="attr">width</span>=<span class="string">&quot;370&quot;</span> <span class="attr">height</span>=<span class="string">&quot;180&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;apps&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://news.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://map.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>地图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://image.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://haokan.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://tieba.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>贴吧<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://wenku.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>文库<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baike.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>百科<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/more/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>更多&gt;&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;enter&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;25&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最多输入20个字&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;百度一下&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hotnews&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://top.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>百度热搜&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hotlist&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;top3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span>1<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://pranx.com/win10-update/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>北京申奥成功<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>2<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://pranx.com/win10-update/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>吴亦凡被判入狱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;three&quot;</span>&gt;</span>3<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://pranx.com/win10-update/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>中大即将迎来100年建校<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;else&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span> </span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>&gt;</span>4<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://pranx.com/win10-update/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>骑士抢七大战胜勇士<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>&gt;</span>5<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://pranx.com/win10-update/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>姆巴佩世界杯决赛帽子戏法<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>&gt;</span>6<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://pranx.com/win10-update/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>火影忍者完结<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bottomline&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://home.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>关于百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">         | </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://e.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>企业推广<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">         | </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/duty/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>使用前必读<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">         | </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://help.baidu.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>帮助中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">         | </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://beian.mps.gov.cn/#/query/webSearch&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>京公网安备11000002000001号<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-不足之处">3. 不足之处</h2><ul><li>由于设置“百度热搜”的时候使用的是margin-left: 485px，所以这一行字将与页面的左边缘保持485px的距离，不会随页面放缩而改变，达不到预期效果</li></ul><p><img src="https://i-blog.csdnimg.cn/blog_migrate/616efd445a82f6af95d40f2b31a0ad13.png" alt=""></p><ul><li><p>笔者尚不知道如何得到正确的像素值，目前都是估计数值大小，观察页面效果来判断是否正确，所以出现许多奇奇怪怪的像素值</p></li><li><p>笔者尚不知道如何将一段文字放到页面底部的中央，所以还是使用了margin-top: 240px，如果还需要在两个块之间添加东西，则需要改变像素值，十分麻烦</p></li></ul><h2 id="4-后续学习和改进">4. 后续学习和改进</h2><ul><li>输入文本后，点击百度搜索应该会跳转到相关页面，同时百度热搜这一块应该是时刻更新的，而不是通过文本设定的</li><li>学习JavaScript变成动态页面</li></ul><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMP算法</title>
      <link href="/posts/2da0528d/"/>
      <url>/posts/2da0528d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><meta name="referrer" content="no-referrer"/><h2 id="1-什么是最大公共前后缀长度">1. 什么是最大公共前后缀长度</h2><p><strong>一个串的前后缀</strong></p><ul><li>前缀是指以串第一个字符开头且不包含最后一个元素的连续的子串</li><li>后缀是指以串最后一个字符结尾且不包含第一个元素的连续的子串</li></ul><blockquote><p><font color="deepskyblue">假设设串为ABCDEFGH，则前缀有A,AB,ABC等，后缀有H,GH,FGH等</font></p></blockquote><p><strong>一个串的公共前后缀</strong>：如果前缀集合与后缀集合中存在一个相同的元素，即存在一个子串，它既可以是前缀也可以是后缀，则称这个子串为该串的公共前后缀</p><blockquote><p><font color="deepskyblue">假设串为AB_CSDN_AB，则公共前后缀有AB</font></p></blockquote><p><strong>最大公共前后缀长度</strong>：一个串的公共前后缀不一定只有一个，其中最长的公共前后缀的长度称为最大公共前后缀长度</p><blockquote><p><font color="deepskyblue">假设串为ABA_CSDN_ABA，则公共前后缀有A,AB，即最大公共前后缀长度=3 (ABA)</font></p></blockquote><h2 id="2-为什么要找最大公共前后缀长度">2. 为什么要找最大公共前后缀长度</h2><p>假设文本串是<code>ABA_ABAY_CD</code>，模式串是<code>ABA_ABAX_CD</code>，用模式串去匹配文本串</p><p>首先要理解匹配的本质是：<font color="orangered">不断改变文本串头部（可以是一个字符，也可以是一个子串），直到满足从该头部开始，接下来的字符与模式串完全相同</font></p><ul><li>暴力：头部只有一个字符，一个字符一个字符地遍历文本串，发现匹配错误时，令模式串指回头部，令文本串指回原先的头部+1，再重新开始比较</li><li>KMPSearch：头部是一个子串，一个子串一个子串地遍历文本串</li></ul><p>在模式串的X位置之前的子串ABA_ABA中，我们可以找到最大公共前后缀ABA，它对应的长度是k=3，则代表：<font color="orangered">模式串X位置之前的k个元素和模式串的前k个字符是完全相同的</font></p><blockquote><p><font color="deepskyblue">注意“模式串X位置前的k个元素”和“模式串的前k个元素”的两个“前”的差别</font></p></blockquote><p>既然已经匹配到Y了，说明：<font color="orangered">文本串Y位置之前的k个元素 == 模式串X位置之前的k个元素 == 模式串的前k个元素</font></p><p>相当于已经找到了一个新的头部：<font color="orangered">文本串Y位置之前的k个元素构成的子串，正好对应模式串的头部</font></p><p>因此：<font color="orangered">文本串从Y开始即不动，模式串从第k个元素开始，重新开始匹配</font></p><blockquote><p><font color="deepskyblue">KMP算法：找到模式串每一个位置的最大公共前后缀长度，在匹配失败的时候，移动模式串的头指针，保持文本串的头指针不动</font></p></blockquote><h2 id="3-如何求最大公共前后缀长度">3. 如何求最大公共前后缀长度</h2><ol><li>初始化</li></ol><ul><li>模式串为<code>char p[length]</code></li><li>每个位置的最大公共前后缀长度为<code>int [length]</code></li><li>模式串p的遍历指针<code>i</code>，p[i]代表新匹配的元素</li><li>当前最大公共前后缀长度为<code>k</code>，p[k]代表<font color="orangered">公共前缀的下一个元素（因为序号从0开始）</font></li><li><font color="orangered">从changdu[0] = 0，i=1，k=0开始遍历模式串p</font></li></ul><ol start="2"><li>遍历</li></ol><ul><li><p><strong>p[i] == p[k]</strong>：新添加的元素等于当前最大公共前缀的后一个元素，</p><ul><li>此时<font color="orangered">新的后缀与新的前缀又相同了</font></li><li>最大公共前后缀长度加1，即<font color="orangered">changdu[i] = ++k</font></li></ul></li><li><p><strong>p[i] != p[k]</strong>：新添加的元素不等于当前最大公共前缀的后一个元素</p><ul><li>原先的公共前后缀被破坏，不再成立，需要找到一个更短的最大公共前后缀</li><li>不断找<font color="orangered">公共前后缀的公共前后缀，即<code>k = changdu[k-1]</code></font></li></ul></li><li><p><strong>k==0</strong>：无法继续递归，直接令<code>changdu[i] == k</code></p></li></ul><blockquote><p>ABABCABAB的changdu = [0, 0, 1, 2, 0, 1, 2, 3, 4]</p></blockquote><h2 id="3-代码">3. 代码</h2><h3 id="3-1-getChangdu函数">3.1 getChangdu函数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">getChangdu</span><span class="params">(<span class="type">char</span>* p,<span class="type">int</span> changdu[],<span class="type">int</span> length)</span> </span>&#123;</span><br><span class="line">  changdu[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">1</span>,k = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (i &lt; length) &#123;</span><br><span class="line">    <span class="keyword">if</span> (p[i] == p[k])&#123;</span><br><span class="line">      changdu[i] = ++k;</span><br><span class="line">      i++; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="number">0</span>)&#123;</span><br><span class="line">      changdu[i] = k;</span><br><span class="line">      i++; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      k = changdu[k<span class="number">-1</span>];</span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-getNext函数：">3.2 getNext函数：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">getNext</span><span class="params">(<span class="type">int</span> *next,<span class="type">int</span> *changdu,<span class="type">int</span> length)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> temp[length];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">temp[i] = changdu[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;length;i++)</span><br><span class="line">next[i] = temp[i<span class="number">-1</span>];</span><br><span class="line">next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-KMPSearch">3.3 KMPSearch</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">KMPSearch</span><span class="params">(<span class="type">char</span>* maistr,<span class="type">char</span>* substr,<span class="type">int</span> length1,<span class="type">int</span> length2,<span class="type">int</span>* next)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i&lt;length1 &amp;&amp; j &lt; length2)</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">-1</span> || maistr[i] == substr[j])&#123;</span><br><span class="line">i++;j++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">j = next[j];</span><br><span class="line"><span class="keyword">if</span> (j == length2)</span><br><span class="line"><span class="keyword">return</span> i-length2;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><font color="deepskyblue">因为进行KMPSearch时，进行到模式串p的位置i时，向右移动的距离实际上是changdu[i-1]，因此我们只需要将原来的changdu数组右移，并初始化changdu[0] = -1即可</font><br>因此可以将getChangdu和getNext合二为一，具体的可以参考下面给出的链接：<a href="https://blog.csdn.net/v_JULY_v/article/details/7041827">https://blog.csdn.net/v_JULY_v/article/details/7041827</a></p></blockquote><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
